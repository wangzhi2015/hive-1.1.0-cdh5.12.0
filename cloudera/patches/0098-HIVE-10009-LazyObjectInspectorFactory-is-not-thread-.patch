From 2212559d05b1ed17f68ec1c90e725d657b0d2f15 Mon Sep 17 00:00:00 2001
From: Xuefu Zhang <xuefu@apache.org>
Date: Thu, 19 Mar 2015 00:22:42 +0000
Subject: [PATCH 0098/1164] HIVE-10009: LazyObjectInspectorFactory is not
 thread safe [Spark Branch] (Jimmy via Xuefu)

---
 .../LazyObjectInspectorFactory.java                |   24 ++++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

diff --git a/serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/LazyObjectInspectorFactory.java b/serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/LazyObjectInspectorFactory.java
index 1abd8a5..c896710 100644
--- a/serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/LazyObjectInspectorFactory.java
+++ b/serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/LazyObjectInspectorFactory.java
@@ -110,7 +110,11 @@ public static LazySimpleStructObjectInspector getLazySimpleStructObjectInspector
         throw new IllegalArgumentException("Illegal ObjectInspector type [" + option + "]");
       }
 
-      cachedLazySimpleStructObjectInspector.put(signature, result);
+      LazySimpleStructObjectInspector prev =
+        cachedLazySimpleStructObjectInspector.putIfAbsent(signature, result);
+      if (prev != null) {
+        result = prev;
+      }
     }
     return result;
   }
@@ -132,7 +136,11 @@ public static LazyListObjectInspector getLazySimpleListObjectInspector(
     if (result == null) {
       result = new LazyListObjectInspector(listElementObjectInspector,
           separator, nullSequence, escaped, escapeChar);
-      cachedLazySimpleListObjectInspector.put(signature, result);
+      LazyListObjectInspector prev =
+        cachedLazySimpleListObjectInspector.putIfAbsent(signature, result);
+      if (prev != null) {
+        result = prev;
+      }
     }
     return result;
   }
@@ -159,7 +167,11 @@ public static LazyMapObjectInspector getLazySimpleMapObjectInspector(
       result = new LazyMapObjectInspector(mapKeyObjectInspector,
           mapValueObjectInspector, itemSeparator, keyValueSeparator,
           nullSequence, escaped, escapeChar);
-      cachedLazySimpleMapObjectInspector.put(signature, result);
+      LazyMapObjectInspector prev =
+        cachedLazySimpleMapObjectInspector.putIfAbsent(signature, result);
+      if (prev != null) {
+        result = prev;
+      }
     }
     return result;
   }
@@ -182,7 +194,11 @@ public static LazyUnionObjectInspector getLazyUnionObjectInspector(
     if (result == null) {
       result = new LazyUnionObjectInspector(ois, separator,
           nullSequence, escaped, escapeChar);
-      cachedLazyUnionObjectInspector.put(signature, result);
+      LazyUnionObjectInspector prev =
+        cachedLazyUnionObjectInspector.putIfAbsent(signature, result);
+      if (prev != null) {
+        result = prev;
+      }
     }
     return result;
   }
-- 
1.7.9.5


From e141454f3e76d6d16db8cc5deeeecba3340c679b Mon Sep 17 00:00:00 2001
From: Sergio Pena <sergio.pena@cloudera.com>
Date: Wed, 28 Oct 2015 10:38:07 -0500
Subject: [PATCH 0364/1164] CLOUDERA-BUILD: CDH-33632: Add parameter to Hive
 pre_commit_job.sh to build project with a
 different JDK version

Change-Id: Iab71f02986499efcba4ea2f5ca2e776f65a776a4
---
 cloudera/post_commit_hook.sh |   26 ++++++++++++++++++++++----
 cloudera/pre_commit_hook.sh  |   26 ++++++++++++++++++++++----
 2 files changed, 44 insertions(+), 8 deletions(-)

diff --git a/cloudera/post_commit_hook.sh b/cloudera/post_commit_hook.sh
index 88da81f..42c9216 100755
--- a/cloudera/post_commit_hook.sh
+++ b/cloudera/post_commit_hook.sh
@@ -15,11 +15,29 @@
 set -ex
 
 # Script created by Cloudcat with useful environment information
-. /opt/toolchain/toolchain.sh
+[ -f /opt/toolchain/toolchain.sh ] && . /opt/toolchain/toolchain.sh
+
+# Use JAVA7_HOME if exists
+export JAVA_HOME=${JAVA7_HOME:-$JAVA_HOME}
+
+# If USE_JDK_VERSION exists, then try to get the value from JAVAX_HOME
+if [ -n "$USE_JDK_VERSION" ]; then
+  # Get JAVAX_HOME value, where X is the JDK version
+  java_home=`eval echo \\$JAVA${USE_JDK_VERSION}_HOME`
+  if [ -n "$java_home" ]; then
+    export JAVA_HOME="$java_home"
+  else
+    echo "ERROR: USE_JDK_VERSION=$USE_JDK_VERSION, but JAVA${USE_JDK_VERSION}_HOME is not found."
+    exit 1
+  fi
+fi
 
-export JAVA_HOME=$JAVA7_HOME
 export PATH=${JAVA_HOME}/bin:${PATH}
 
+# WORKSPACE is an environment variable created by Jenkins, and it is the directory where the build is executed.
+# If not set, then default to $HOME
+MVN_REPO_LOCAL=${WORKSPACE:-$HOME}/.m2
+
 # Add any test to be excluded in alphabetical order to keep readability, starting with files, and
 # then directories.
 declare -a EXCLUDE_TESTS=(
@@ -49,6 +67,6 @@ function get_regex_excluded_tests() {
 }
 
 regex_tests=`get_regex_excluded_tests`
-mvn clean install -Phadoop-2 -Dtest.excludes.additional="$regex_tests"
+mvn clean install -Phadoop-2 -Dmaven.repo.local="$MVN_REPO_LOCAL" -Dtest.excludes.additional="$regex_tests"
 cd itests/
-mvn clean install -Phadoop-2 -DskipTests
+mvn clean install -Phadoop-2 -Dmaven.repo.local="$MVN_REPO_LOCAL" -DskipTests
diff --git a/cloudera/pre_commit_hook.sh b/cloudera/pre_commit_hook.sh
index a4c15b7..ff434ae 100755
--- a/cloudera/pre_commit_hook.sh
+++ b/cloudera/pre_commit_hook.sh
@@ -12,11 +12,29 @@
 set -ex
 
 # Script created by Cloudcat with useful environment information
-. /opt/toolchain/toolchain.sh
+[ -f /opt/toolchain/toolchain.sh ] && . /opt/toolchain/toolchain.sh
+
+# Use JAVA7_HOME if exists
+export JAVA_HOME=${JAVA7_HOME:-$JAVA_HOME}
+
+# If USE_JDK_VERSION exists, then try to get the value from JAVAX_HOME
+if [ -n "$USE_JDK_VERSION" ]; then
+  # Get JAVAX_HOME value, where X is the JDK version
+  java_home=`eval echo \\$JAVA${USE_JDK_VERSION}_HOME`
+  if [ -n "$java_home" ]; then
+    export JAVA_HOME="$java_home"
+  else
+    echo "ERROR: USE_JDK_VERSION=$USE_JDK_VERSION, but JAVA${USE_JDK_VERSION}_HOME is not found."
+    exit 1
+  fi
+fi
 
-export JAVA_HOME=$JAVA7_HOME
 export PATH=${JAVA_HOME}/bin:${PATH}
 
+# WORKSPACE is an environment variable created by Jenkins, and it is the directory where the build is executed.
+# If not set, then default to $HOME
+MVN_REPO_LOCAL=${WORKSPACE:-$HOME}/.m2
+
 # Add any test to be excluded in alphabetical order to keep readability, starting with files, and
 # then directories.
 declare -a EXCLUDE_TESTS=(
@@ -46,6 +64,6 @@ function get_regex_excluded_tests() {
 }
 
 regex_tests=`get_regex_excluded_tests`
-mvn clean install -Phadoop-2 -Dtest.excludes.additional="$regex_tests"
+mvn clean install -Phadoop-2 -Dmaven.repo.local="$MVN_REPO_LOCAL" -Dtest.excludes.additional="$regex_tests"
 cd itests/
-mvn clean install -Phadoop-2 -DskipTests
+mvn clean install -Phadoop-2 -Dmaven.repo.local="$MVN_REPO_LOCAL" -DskipTests
\ No newline at end of file
-- 
1.7.9.5


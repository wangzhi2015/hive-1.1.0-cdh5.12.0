From f50daf94625f475d5600b77d5c2fd5b32a44ed68 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Wed, 4 Feb 2015 21:55:58 +0000
Subject: [PATCH 0019/1164] HIVE-8949 - Test for PARQUET-26 (Ryan Blue via
 Brock)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1657414 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 8b403b12c017ba5792e73243da633dc8c3f0092f)
---
 data/files/StringMapOfOptionalIntArray.parquet     |  Bin 0 -> 489 bytes
 .../clientpositive/parquet_map_of_arrays_of_ints.q |   16 +++++
 .../parquet_map_of_arrays_of_ints.q.out            |   63 ++++++++++++++++++++
 3 files changed, 79 insertions(+)
 create mode 100644 data/files/StringMapOfOptionalIntArray.parquet
 create mode 100644 ql/src/test/queries/clientpositive/parquet_map_of_arrays_of_ints.q
 create mode 100644 ql/src/test/results/clientpositive/parquet_map_of_arrays_of_ints.q.out

diff --git a/data/files/StringMapOfOptionalIntArray.parquet b/data/files/StringMapOfOptionalIntArray.parquet
new file mode 100644
index 0000000000000000000000000000000000000000..38354a22bcdc7b95aad7d8be54f1bae2b4afaa09
GIT binary patch
literal 489
zcmZuuO>4qH5Z!FHsTHpi5}HG3iC9qaBYuGh-dbo;+8zo$lr>pRXpCu$R-p%fc8{G^
zY-#DTyR*!^H*a`59^Ti1Ko`1YVEE8LvkWy_yc;YCXMs*|Q9LSD<((%oV3}c%0Hh3H
zP=@@G%L0WEgI!=<-xDP*pc1cEo{7v~;(0`rL;^KGuFoH`G>m6=JQ+<#Nfs_*9^J&*
zFirUuC}~k6CpLVZL}Ce4CYW*dDz-0c9<2m00tJT{DrOua!6%121x+GZ6fQF)0d=Tx
zDk3o#afY**mRT<5EGU=`(ai3*!cS+}5s1$8jlL=7`hRUH?i35hm+Ys1*oP_h>PJ;<
zme+R*ZshjS;ony2p9)%5x=nccwh~!op4w}XF3}FVUTs%vsn@hilT{e`w(t5aUh4?2
jH}M<ohR5ro*YujT-n8y_e3y4zG4Z+UT@j8NWBlYV!JB7(

literal 0
HcmV?d00001

diff --git a/ql/src/test/queries/clientpositive/parquet_map_of_arrays_of_ints.q b/ql/src/test/queries/clientpositive/parquet_map_of_arrays_of_ints.q
new file mode 100644
index 0000000..8517848
--- /dev/null
+++ b/ql/src/test/queries/clientpositive/parquet_map_of_arrays_of_ints.q
@@ -0,0 +1,16 @@
+-- this test reads and writes a parquet file with a map of arrays of ints
+-- validates PARQUET-26 is fixed
+
+CREATE TABLE parquet_map_of_arrays_of_ints (
+    examples MAP<STRING, ARRAY<INT>>
+) STORED AS PARQUET;
+
+LOAD DATA LOCAL INPATH '../../data/files/StringMapOfOptionalIntArray.parquet'
+OVERWRITE INTO TABLE parquet_map_of_arrays_of_ints;
+
+CREATE TABLE parquet_map_of_arrays_of_ints_copy STORED AS PARQUET AS SELECT * FROM parquet_map_of_arrays_of_ints;
+
+SELECT * FROM parquet_map_of_arrays_of_ints_copy;
+
+DROP TABLE parquet_map_of_arrays_of_ints;
+DROP TABLE parquet_map_of_arrays_of_ints_copy;
diff --git a/ql/src/test/results/clientpositive/parquet_map_of_arrays_of_ints.q.out b/ql/src/test/results/clientpositive/parquet_map_of_arrays_of_ints.q.out
new file mode 100644
index 0000000..6ce63f7
--- /dev/null
+++ b/ql/src/test/results/clientpositive/parquet_map_of_arrays_of_ints.q.out
@@ -0,0 +1,63 @@
+PREHOOK: query: -- this test reads and writes a parquet file with a map of arrays of ints
+-- validates PARQUET-26 is fixed
+
+CREATE TABLE parquet_map_of_arrays_of_ints (
+    examples MAP<STRING, ARRAY<INT>>
+) STORED AS PARQUET
+PREHOOK: type: CREATETABLE
+PREHOOK: Output: database:default
+PREHOOK: Output: default@parquet_map_of_arrays_of_ints
+POSTHOOK: query: -- this test reads and writes a parquet file with a map of arrays of ints
+-- validates PARQUET-26 is fixed
+
+CREATE TABLE parquet_map_of_arrays_of_ints (
+    examples MAP<STRING, ARRAY<INT>>
+) STORED AS PARQUET
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@parquet_map_of_arrays_of_ints
+PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/StringMapOfOptionalIntArray.parquet'
+OVERWRITE INTO TABLE parquet_map_of_arrays_of_ints
+PREHOOK: type: LOAD
+#### A masked pattern was here ####
+PREHOOK: Output: default@parquet_map_of_arrays_of_ints
+POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/StringMapOfOptionalIntArray.parquet'
+OVERWRITE INTO TABLE parquet_map_of_arrays_of_ints
+POSTHOOK: type: LOAD
+#### A masked pattern was here ####
+POSTHOOK: Output: default@parquet_map_of_arrays_of_ints
+PREHOOK: query: CREATE TABLE parquet_map_of_arrays_of_ints_copy STORED AS PARQUET AS SELECT * FROM parquet_map_of_arrays_of_ints
+PREHOOK: type: CREATETABLE_AS_SELECT
+PREHOOK: Input: default@parquet_map_of_arrays_of_ints
+PREHOOK: Output: database:default
+PREHOOK: Output: default@parquet_map_of_arrays_of_ints_copy
+POSTHOOK: query: CREATE TABLE parquet_map_of_arrays_of_ints_copy STORED AS PARQUET AS SELECT * FROM parquet_map_of_arrays_of_ints
+POSTHOOK: type: CREATETABLE_AS_SELECT
+POSTHOOK: Input: default@parquet_map_of_arrays_of_ints
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@parquet_map_of_arrays_of_ints_copy
+PREHOOK: query: SELECT * FROM parquet_map_of_arrays_of_ints_copy
+PREHOOK: type: QUERY
+PREHOOK: Input: default@parquet_map_of_arrays_of_ints_copy
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM parquet_map_of_arrays_of_ints_copy
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@parquet_map_of_arrays_of_ints_copy
+#### A masked pattern was here ####
+{"low":[34,35,null],"high":[340,360]}
+PREHOOK: query: DROP TABLE parquet_map_of_arrays_of_ints
+PREHOOK: type: DROPTABLE
+PREHOOK: Input: default@parquet_map_of_arrays_of_ints
+PREHOOK: Output: default@parquet_map_of_arrays_of_ints
+POSTHOOK: query: DROP TABLE parquet_map_of_arrays_of_ints
+POSTHOOK: type: DROPTABLE
+POSTHOOK: Input: default@parquet_map_of_arrays_of_ints
+POSTHOOK: Output: default@parquet_map_of_arrays_of_ints
+PREHOOK: query: DROP TABLE parquet_map_of_arrays_of_ints_copy
+PREHOOK: type: DROPTABLE
+PREHOOK: Input: default@parquet_map_of_arrays_of_ints_copy
+PREHOOK: Output: default@parquet_map_of_arrays_of_ints_copy
+POSTHOOK: query: DROP TABLE parquet_map_of_arrays_of_ints_copy
+POSTHOOK: type: DROPTABLE
+POSTHOOK: Input: default@parquet_map_of_arrays_of_ints_copy
+POSTHOOK: Output: default@parquet_map_of_arrays_of_ints_copy
-- 
1.7.9.5


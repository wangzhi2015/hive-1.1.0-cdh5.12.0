From 0e2bfb419294464ee8e15ad6976893d5653da1a7 Mon Sep 17 00:00:00 2001
From: Vaibhav Gumashta <vgumashta@apache.org>
Date: Thu, 4 Jun 2015 16:20:00 -0700
Subject: [PATCH 0600/1164] CDH-40355 HIVE-10925: Non-static threadlocals in
 metastore code can potentially cause memory leak
 (Vaibhav Gumashta reviewed by Sushanth Sowmyan,
 Alan Gates, Thejas Nair)

Change-Id: Ie72122ded3f8c8cc25a1fc4b87f2b5e155975c7d
---
 .../hadoop/hive/metastore/HiveMetaStore.java       |    4 ++--
 .../AuthorizationPreEventListener.java             |    8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java
index f77b244..e5bd59f 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java
@@ -323,7 +323,7 @@ protected synchronized RawStore initialValue() {
           }
         };
 
-    private final ThreadLocal<TxnHandler> threadLocalTxn = new ThreadLocal<TxnHandler>() {
+    private static final ThreadLocal<TxnHandler> threadLocalTxn = new ThreadLocal<TxnHandler>() {
       @Override
       protected synchronized TxnHandler initialValue() {
         return null;
@@ -340,7 +340,7 @@ public static void removeRawStore() {
 
     // Thread local configuration is needed as many threads could make changes
     // to the conf using the connection hook
-    private final ThreadLocal<Configuration> threadLocalConf =
+    private static final ThreadLocal<Configuration> threadLocalConf =
         new ThreadLocal<Configuration>() {
           @Override
           protected synchronized Configuration initialValue() {
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/security/authorization/AuthorizationPreEventListener.java b/ql/src/java/org/apache/hadoop/hive/ql/security/authorization/AuthorizationPreEventListener.java
index fc9d0bd..2262ccb 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/security/authorization/AuthorizationPreEventListener.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/security/authorization/AuthorizationPreEventListener.java
@@ -64,14 +64,14 @@
   public static final Log LOG = LogFactory.getLog(
       AuthorizationPreEventListener.class);
 
-  private final ThreadLocal<Configuration> tConfig = new ThreadLocal<Configuration>() {
+  private static final ThreadLocal<Configuration> tConfig = new ThreadLocal<Configuration>() {
     @Override
     protected Configuration initialValue() {
       return new HiveConf(AuthorizationPreEventListener.class);
     }
   };
 
-  private final ThreadLocal<HiveMetastoreAuthenticationProvider> tAuthenticator
+  private static final ThreadLocal<HiveMetastoreAuthenticationProvider> tAuthenticator
       = new ThreadLocal<HiveMetastoreAuthenticationProvider>() {
     @Override
     protected HiveMetastoreAuthenticationProvider initialValue() {
@@ -84,7 +84,7 @@ protected HiveMetastoreAuthenticationProvider initialValue() {
     }
   };
 
-  private final ThreadLocal<List<HiveMetastoreAuthorizationProvider>> tAuthorizers
+  private static final ThreadLocal<List<HiveMetastoreAuthorizationProvider>> tAuthorizers
       = new ThreadLocal<List<HiveMetastoreAuthorizationProvider>>() {
     @Override
     protected List<HiveMetastoreAuthorizationProvider> initialValue() {
@@ -97,7 +97,7 @@ protected HiveMetastoreAuthenticationProvider initialValue() {
     }
   };
 
-  private final ThreadLocal<Boolean> tConfigSetOnAuths = new ThreadLocal<Boolean>() {
+  private static final ThreadLocal<Boolean> tConfigSetOnAuths = new ThreadLocal<Boolean>() {
     @Override
     protected Boolean initialValue() {
       return false;
-- 
1.7.9.5


From c32d575284ba0e7b8c3ff32d640a2bdb3412c8d5 Mon Sep 17 00:00:00 2001
From: ctang <ctang.ma@gmail.com>
Date: Wed, 11 Nov 2015 18:37:19 -0500
Subject: [PATCH 0391/1164] HIVE-12365: Added resource path is sent to cluster
 as an empty string when externally removed
 (Chaoyu Tang, reviewed by Xuefu Zhang)

Change-Id: I9d8734c247262e96507fe7ad48b1b427f4ba0752
---
 .../org/apache/hadoop/hive/ql/exec/Utilities.java  |    7 ++++-
 .../clientpositive/add_jar_with_file_removed.q     |   15 +++++++++++
 .../clientpositive/add_jar_with_file_removed.q.out |   27 ++++++++++++++++++++
 3 files changed, 48 insertions(+), 1 deletion(-)
 create mode 100644 ql/src/test/queries/clientpositive/add_jar_with_file_removed.q
 create mode 100644 ql/src/test/results/clientpositive/add_jar_with_file_removed.q.out

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
index a1b47f4..ccfb874 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
@@ -2098,7 +2098,12 @@ public static String getResourceFiles(Configuration conf, SessionState.ResourceT
       List<String> realFiles = new ArrayList<String>(files.size());
       for (String one : files) {
         try {
-          realFiles.add(realFile(one, conf));
+          String onefile = realFile(one, conf);
+          if (onefile != null) {
+            realFiles.add(realFile(one, conf));
+          } else {
+            LOG.warn("The file " + one + " does not exist.");
+          }
         } catch (IOException e) {
           throw new RuntimeException("Cannot validate file " + one + "due to exception: "
               + e.getMessage(), e);
diff --git a/ql/src/test/queries/clientpositive/add_jar_with_file_removed.q b/ql/src/test/queries/clientpositive/add_jar_with_file_removed.q
new file mode 100644
index 0000000..95d7001
--- /dev/null
+++ b/ql/src/test/queries/clientpositive/add_jar_with_file_removed.q
@@ -0,0 +1,15 @@
+!mkdir ${system:test.tmp.dir}/tmpjars;
+!touch ${system:test.tmp.dir}/tmpjars/added1.jar;
+!touch ${system:test.tmp.dir}/tmpjars/added2.jar;
+
+select count(key) from src;
+
+add jar ${system:test.tmp.dir}/tmpjars/added1.jar;
+add jar ${system:test.tmp.dir}/tmpjars/added2.jar;
+
+select count(key) from src;
+
+!rm ${system:test.tmp.dir}/tmpjars/added1.jar;
+
+select count(key) from src;
+
diff --git a/ql/src/test/results/clientpositive/add_jar_with_file_removed.q.out b/ql/src/test/results/clientpositive/add_jar_with_file_removed.q.out
new file mode 100644
index 0000000..cb495f4
--- /dev/null
+++ b/ql/src/test/results/clientpositive/add_jar_with_file_removed.q.out
@@ -0,0 +1,27 @@
+PREHOOK: query: select count(key) from src
+PREHOOK: type: QUERY
+PREHOOK: Input: default@src
+#### A masked pattern was here ####
+POSTHOOK: query: select count(key) from src
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src
+#### A masked pattern was here ####
+500
+PREHOOK: query: select count(key) from src
+PREHOOK: type: QUERY
+PREHOOK: Input: default@src
+#### A masked pattern was here ####
+POSTHOOK: query: select count(key) from src
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src
+#### A masked pattern was here ####
+500
+PREHOOK: query: select count(key) from src
+PREHOOK: type: QUERY
+PREHOOK: Input: default@src
+#### A masked pattern was here ####
+POSTHOOK: query: select count(key) from src
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src
+#### A masked pattern was here ####
+500
-- 
1.7.9.5


From c69e6012efff274892e12469b262c8538071291e Mon Sep 17 00:00:00 2001
From: Reuben Kuhnert <reuben.kuhnert@cloudera.com>
Date: Wed, 4 Nov 2015 17:34:17 -0600
Subject: [PATCH 0382/1164] CLOUDERA-BUILD: CDH-34005: Some q-tests
 (vectorization_short_regress.q,vectorization_0.q)
 are failing on cdh5-1.1.0 (Spark) due CDH-31907
 commit

Change-Id: I63dbdaac60a585fc0e67c8c2b0cc505ba3af5a09
---
 .../clientpositive/spark/vectorization_0.q.out     |   28 +-
 .../spark/vectorization_short_regress.q.out        | 1338 ++++++++++----------
 2 files changed, 681 insertions(+), 685 deletions(-)

diff --git a/ql/src/test/results/clientpositive/spark/vectorization_0.q.out b/ql/src/test/results/clientpositive/spark/vectorization_0.q.out
index 3ad059c..3364986 100644
--- a/ql/src/test/results/clientpositive/spark/vectorization_0.q.out
+++ b/ql/src/test/results/clientpositive/spark/vectorization_0.q.out
@@ -1,6 +1,4 @@
-PREHOOK: query: -- SORT_QUERY_RESULTS
-
--- Use ORDER BY clauses to generate 2 stages.
+PREHOOK: query: -- Use ORDER BY clauses to generate 2 stages.
 EXPLAIN
 SELECT MIN(ctinyint) as c1,
        MAX(ctinyint),
@@ -9,9 +7,7 @@ SELECT MIN(ctinyint) as c1,
 FROM   alltypesorc
 ORDER BY c1
 PREHOOK: type: QUERY
-POSTHOOK: query: -- SORT_QUERY_RESULTS
-
--- Use ORDER BY clauses to generate 2 stages.
+POSTHOOK: query: -- Use ORDER BY clauses to generate 2 stages.
 EXPLAIN
 SELECT MIN(ctinyint) as c1,
        MAX(ctinyint),
@@ -133,10 +129,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: ctinyint (type: tinyint)
-                    outputColumnNames: _col0
+                    outputColumnNames: ctinyint
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: sum(_col0)
+                      aggregations: sum(ctinyint)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -439,10 +435,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: cbigint (type: bigint)
-                    outputColumnNames: _col0
+                    outputColumnNames: cbigint
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: sum(_col0)
+                      aggregations: sum(cbigint)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -745,10 +741,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: cfloat (type: float)
-                    outputColumnNames: _col0
+                    outputColumnNames: cfloat
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: sum(_col0)
+                      aggregations: sum(cfloat)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -994,14 +990,14 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: ((cstring2 like '%b%') or (79.553 <> UDFToDouble(cint)) or (UDFToDouble(cbigint) < cdouble) or ((UDFToShort(ctinyint) >= csmallint) and (cboolean2 = 1) and (3569.0 = UDFToDouble(ctinyint)))) (type: boolean)
+                    predicate: (((cstring2 like '%b%') or ((79.553 <> cint) or (cbigint < cdouble))) or ((ctinyint >= csmallint) and ((cboolean2 = 1) and (3569.0 = ctinyint)))) (type: boolean)
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: cbigint (type: bigint), cfloat (type: float), ctinyint (type: tinyint)
-                      outputColumnNames: _col0, _col1, _col2
+                      outputColumnNames: cbigint, cfloat, ctinyint
                       Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: avg(_col0), stddev_pop(_col0), var_samp(_col0), count(), sum(_col1), min(_col2)
+                        aggregations: avg(cbigint), stddev_pop(cbigint), var_samp(cbigint), count(), sum(cfloat), min(ctinyint)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                         Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: NONE
@@ -1018,7 +1014,7 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                 Statistics: Num rows: 1 Data size: 44 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: double), (- _col0) (type: double), (-6432.0 + _col0) (type: double), _col1 (type: double), (- (-6432.0 + _col0)) (type: double), ((- (-6432.0 + _col0)) + (-6432.0 + _col0)) (type: double), _col2 (type: double), (- (-6432.0 + _col0)) (type: double), (-6432.0 + (- (-6432.0 + _col0))) (type: double), (- (-6432.0 + _col0)) (type: double), ((- (-6432.0 + _col0)) / (- (-6432.0 + _col0))) (type: double), _col3 (type: bigint), _col4 (type: double), (_col2 % _col1) (type: double), (- _col2) (type: double), ((- (-6432.0 + _col0)) * (- _col0)) (type: double), _col5 (type: tinyint), (- _col5) (type: tinyint)
+                  expressions: _col0 (type: double), (- _col0) (type: double), (-6432 + _col0) (type: double), _col1 (type: double), (- (-6432 + _col0)) (type: double), ((- (-6432 + _col0)) + (-6432 + _col0)) (type: double), _col2 (type: double), (- (-6432 + _col0)) (type: double), (-6432 + (- (-6432 + _col0))) (type: double), (- (-6432 + _col0)) (type: double), ((- (-6432 + _col0)) / (- (-6432 + _col0))) (type: double), _col3 (type: bigint), _col4 (type: double), (_col2 % _col1) (type: double), (- _col2) (type: double), ((- (-6432 + _col0)) * (- _col0)) (type: double), _col5 (type: tinyint), (- _col5) (type: tinyint)
                   outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                   Statistics: Num rows: 1 Data size: 44 Basic stats: COMPLETE Column stats: NONE
                   File Output Operator
diff --git a/ql/src/test/results/clientpositive/spark/vectorization_short_regress.q.out b/ql/src/test/results/clientpositive/spark/vectorization_short_regress.q.out
index 3d17aba..5becf00 100644
--- a/ql/src/test/results/clientpositive/spark/vectorization_short_regress.q.out
+++ b/ql/src/test/results/clientpositive/spark/vectorization_short_regress.q.out
@@ -1,7 +1,5 @@
 WARNING: Comparing a bigint and a double may result in a loss of precision.
-PREHOOK: query: -- SORT_QUERY_RESULTS
-
--- If you look at ql/src/test/org/apache/hadoop/hive/ql/exec/vector/util/OrcFileGenerator.java
+PREHOOK: query: -- If you look at ql/src/test/org/apache/hadoop/hive/ql/exec/vector/util/OrcFileGenerator.java
 -- which is the data generation class you'll see that those values are specified in the
 -- initializeFixedPointValues for each data type. When I created the queries I usedthose values
 -- where I needed scalar values to ensure that when the queries executed their predicates would be
@@ -67,9 +65,7 @@ WHERE  ((762 = cbigint)
                     AND ((79.553 != cint)
                          AND (cboolean2 != cboolean1)))))
 PREHOOK: type: QUERY
-POSTHOOK: query: -- SORT_QUERY_RESULTS
-
--- If you look at ql/src/test/org/apache/hadoop/hive/ql/exec/vector/util/OrcFileGenerator.java
+POSTHOOK: query: -- If you look at ql/src/test/org/apache/hadoop/hive/ql/exec/vector/util/OrcFileGenerator.java
 -- which is the data generation class you'll see that those values are specified in the
 -- initializeFixedPointValues for each data type. When I created the queries I usedthose values
 -- where I needed scalar values to ensure that when the queries executed their predicates would be
@@ -152,14 +148,14 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: ((762 = cbigint) or ((UDFToFloat(csmallint) < cfloat) and (UDFToDouble(ctimestamp2) > -5.0) and (cdouble <> UDFToDouble(cint))) or (cstring1 = 'a') or ((UDFToDouble(cbigint) <= -1.389) and (cstring2 <> 'a') and (79.553 <> UDFToDouble(cint)) and (cboolean2 <> cboolean1))) (type: boolean)
+                    predicate: ((((762 = cbigint) or ((csmallint < cfloat) and ((ctimestamp2 > -5) and (cdouble <> cint)))) or (cstring1 = 'a')) or ((cbigint <= -1.389) and ((cstring2 <> 'a') and ((79.553 <> cint) and (cboolean2 <> cboolean1))))) (type: boolean)
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: cint (type: int), cdouble (type: double), csmallint (type: smallint), cfloat (type: float), ctinyint (type: tinyint)
-                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
+                      outputColumnNames: cint, cdouble, csmallint, cfloat, ctinyint
                       Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: avg(_col0), sum(_col1), stddev_pop(_col0), stddev_samp(_col2), var_samp(_col0), avg(_col3), stddev_samp(_col0), min(_col4), count(_col2)
+                        aggregations: avg(cint), sum(cdouble), stddev_pop(cint), stddev_samp(csmallint), var_samp(cint), avg(cfloat), stddev_samp(cint), min(ctinyint), count(csmallint)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                         Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: NONE
@@ -176,7 +172,7 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                 Statistics: Num rows: 1 Data size: 68 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: double), (_col0 + -3728.0) (type: double), (- (_col0 + -3728.0)) (type: double), (- (- (_col0 + -3728.0))) (type: double), ((- (- (_col0 + -3728.0))) * (_col0 + -3728.0)) (type: double), _col1 (type: double), (- _col0) (type: double), _col2 (type: double), (((- (- (_col0 + -3728.0))) * (_col0 + -3728.0)) * (- (- (_col0 + -3728.0)))) (type: double), _col3 (type: double), (- _col2) (type: double), (_col2 - (- (- (_col0 + -3728.0)))) (type: double), ((_col2 - (- (- (_col0 + -3728.0)))) * _col2) (type: double), _col4 (type: double), _col5 (type: double), (10.175 - _col4) (type: double), (- (10.175 - _col4)) (type: double), ((- _col2) / -563.0) (type: double), _col6 (type: double), (- ((- _col2) / -563.0)) (type: double), (_col0 / _col1) (type: double), _col7 (type: tinyint), _col8 (type: bigint), (UDFToDouble(_col7) / ((- _col2) / -563.0)) (type: double), (- (_col0 / _col1)) (type: double)
+                  expressions: _col0 (type: double), (_col0 + -3728) (type: double), (- (_col0 + -3728)) (type: double), (- (- (_col0 + -3728))) (type: double), ((- (- (_col0 + -3728))) * (_col0 + -3728)) (type: double), _col1 (type: double), (- _col0) (type: double), _col2 (type: double), (((- (- (_col0 + -3728))) * (_col0 + -3728)) * (- (- (_col0 + -3728)))) (type: double), _col3 (type: double), (- _col2) (type: double), (_col2 - (- (- (_col0 + -3728)))) (type: double), ((_col2 - (- (- (_col0 + -3728)))) * _col2) (type: double), _col4 (type: double), _col5 (type: double), (10.175 - _col4) (type: double), (- (10.175 - _col4)) (type: double), ((- _col2) / -563) (type: double), _col6 (type: double), (- ((- _col2) / -563)) (type: double), (_col0 / _col1) (type: double), _col7 (type: tinyint), _col8 (type: bigint), (_col7 / ((- _col2) / -563)) (type: double), (- (_col0 / _col1)) (type: double)
                   outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24
                   Statistics: Num rows: 1 Data size: 68 Basic stats: COMPLETE Column stats: NONE
                   File Output Operator
@@ -364,14 +360,14 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: (((cbigint <= 197) and (UDFToLong(cint) < cbigint)) or ((cdouble >= -26.28) and (UDFToDouble(csmallint) > cdouble)) or ((UDFToFloat(ctinyint) > cfloat) and cstring1 regexp '.*ss.*') or ((cfloat > 79.553) and (cstring2 like '10%'))) (type: boolean)
+                    predicate: (((((cbigint <= 197) and (cint < cbigint)) or ((cdouble >= -26.28) and (csmallint > cdouble))) or ((ctinyint > cfloat) and (cstring1 rlike '.*ss.*'))) or ((cfloat > 79.553) and (cstring2 like '10%'))) (type: boolean)
                     Statistics: Num rows: 6826 Data size: 209555 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: cint (type: int), cbigint (type: bigint), csmallint (type: smallint), cdouble (type: double), ctinyint (type: tinyint)
-                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
+                      outputColumnNames: cint, cbigint, csmallint, cdouble, ctinyint
                       Statistics: Num rows: 6826 Data size: 209555 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: max(_col0), var_pop(_col1), stddev_pop(_col2), max(_col3), avg(_col4), min(_col0), min(_col3), stddev_samp(_col2), var_samp(_col0)
+                        aggregations: max(cint), var_pop(cbigint), stddev_pop(csmallint), max(cdouble), avg(ctinyint), min(cint), min(cdouble), stddev_samp(csmallint), var_samp(cint)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                         Statistics: Num rows: 1 Data size: 24 Basic stats: COMPLETE Column stats: NONE
@@ -388,7 +384,7 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                 Statistics: Num rows: 1 Data size: 64 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: int), (UDFToDouble(_col0) / -3728.0) (type: double), (_col0 * -3728) (type: int), _col1 (type: double), (- (_col0 * -3728)) (type: int), _col2 (type: double), (-563 % (_col0 * -3728)) (type: int), (_col1 / _col2) (type: double), (- _col2) (type: double), _col3 (type: double), _col4 (type: double), (_col2 - 10.175) (type: double), _col5 (type: int), (UDFToDouble((_col0 * -3728)) % (_col2 - 10.175)) (type: double), (- _col3) (type: double), _col6 (type: double), (_col3 % -26.28) (type: double), _col7 (type: double), (- (UDFToDouble(_col0) / -3728.0)) (type: double), ((- (_col0 * -3728)) % (-563 % (_col0 * -3728))) (type: int), ((UDFToDouble(_col0) / -3728.0) - _col4) (type: double), (- (_col0 * -3728)) (type: int), _col8 (type: double)
+                  expressions: _col0 (type: int), (_col0 / -3728) (type: double), (_col0 * -3728) (type: int), _col1 (type: double), (- (_col0 * -3728)) (type: int), _col2 (type: double), (-563 % (_col0 * -3728)) (type: int), (_col1 / _col2) (type: double), (- _col2) (type: double), _col3 (type: double), _col4 (type: double), (_col2 - 10.175) (type: double), _col5 (type: int), ((_col0 * -3728) % (_col2 - 10.175)) (type: double), (- _col3) (type: double), _col6 (type: double), (_col3 % -26.28) (type: double), _col7 (type: double), (- (_col0 / -3728)) (type: double), ((- (_col0 * -3728)) % (-563 % (_col0 * -3728))) (type: int), ((_col0 / -3728) - _col4) (type: double), (- (_col0 * -3728)) (type: int), _col8 (type: double)
                   outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22
                   Statistics: Num rows: 1 Data size: 64 Basic stats: COMPLETE Column stats: NONE
                   File Output Operator
@@ -567,14 +563,14 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: ((ctimestamp1 = ctimestamp2) or (762.0 = cfloat) or (cstring1 = 'ss') or ((UDFToLong(csmallint) <= cbigint) and (1 = cboolean2)) or (cboolean1 is not null and ctimestamp2 is not null and (cstring2 > 'a'))) (type: boolean)
+                    predicate: (((((ctimestamp1 = ctimestamp2) or (762.0 = cfloat)) or (cstring1 = 'ss')) or ((csmallint <= cbigint) and (1 = cboolean2))) or (cboolean1 is not null and (ctimestamp2 is not null and (cstring2 > 'a')))) (type: boolean)
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: cbigint (type: bigint), ctinyint (type: tinyint), csmallint (type: smallint), cint (type: int), cdouble (type: double)
-                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
+                      outputColumnNames: cbigint, ctinyint, csmallint, cint, cdouble
                       Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: var_pop(_col0), count(), max(_col1), stddev_pop(_col2), max(_col3), stddev_samp(_col4), count(_col1), avg(_col1)
+                        aggregations: var_pop(cbigint), count(), max(ctinyint), stddev_pop(csmallint), max(cint), stddev_samp(cdouble), count(ctinyint), avg(ctinyint)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                         Statistics: Num rows: 1 Data size: 24 Basic stats: COMPLETE Column stats: NONE
@@ -591,7 +587,7 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                 Statistics: Num rows: 1 Data size: 56 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: double), (- _col0) (type: double), (_col0 - (- _col0)) (type: double), _col1 (type: bigint), (UDFToDouble(_col1) % 79.553) (type: double), _col2 (type: tinyint), (UDFToDouble(_col1) - (- _col0)) (type: double), (- (- _col0)) (type: double), (-1.0 % (- _col0)) (type: double), _col1 (type: bigint), (- _col1) (type: bigint), _col3 (type: double), (- (- (- _col0))) (type: double), (762 * (- _col1)) (type: bigint), _col4 (type: int), (UDFToLong(_col2) + (762 * (- _col1))) (type: bigint), ((- _col0) + UDFToDouble(_col4)) (type: double), _col5 (type: double), ((- _col1) % _col1) (type: bigint), _col6 (type: bigint), _col7 (type: double), (-3728 % (UDFToLong(_col2) + (762 * (- _col1)))) (type: bigint)
+                  expressions: _col0 (type: double), (- _col0) (type: double), (_col0 - (- _col0)) (type: double), _col1 (type: bigint), (_col1 % 79.553) (type: double), _col2 (type: tinyint), (_col1 - (- _col0)) (type: double), (- (- _col0)) (type: double), (-1 % (- _col0)) (type: double), _col1 (type: bigint), (- _col1) (type: bigint), _col3 (type: double), (- (- (- _col0))) (type: double), (762 * (- _col1)) (type: bigint), _col4 (type: int), (_col2 + (762 * (- _col1))) (type: bigint), ((- _col0) + _col4) (type: double), _col5 (type: double), ((- _col1) % _col1) (type: bigint), _col6 (type: bigint), _col7 (type: double), (-3728 % (_col2 + (762 * (- _col1)))) (type: bigint)
                   outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21
                   Statistics: Num rows: 1 Data size: 56 Basic stats: COMPLETE Column stats: NONE
                   File Output Operator
@@ -749,14 +745,14 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: (((ctimestamp2 <= ctimestamp1) and (UDFToDouble(cbigint) <> cdouble) and ('ss' <= cstring1)) or ((csmallint < UDFToShort(ctinyint)) and (UDFToDouble(ctimestamp1) >= 0.0)) or (cfloat = 17.0)) (type: boolean)
+                    predicate: ((((ctimestamp2 <= ctimestamp1) and ((cbigint <> cdouble) and ('ss' <= cstring1))) or ((csmallint < ctinyint) and (ctimestamp1 >= 0))) or (cfloat = 17.0)) (type: boolean)
                     Statistics: Num rows: 8874 Data size: 272428 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: ctinyint (type: tinyint), cbigint (type: bigint), cint (type: int), cfloat (type: float)
-                      outputColumnNames: _col0, _col1, _col2, _col3
+                      outputColumnNames: ctinyint, cbigint, cint, cfloat
                       Statistics: Num rows: 8874 Data size: 272428 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: avg(_col0), max(_col1), stddev_samp(_col2), var_pop(_col2), var_pop(_col1), max(_col3)
+                        aggregations: avg(ctinyint), max(cbigint), stddev_samp(cint), var_pop(cint), var_pop(cbigint), max(cfloat)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                         Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
@@ -773,7 +769,7 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                 Statistics: Num rows: 1 Data size: 44 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: double), (_col0 + 6981.0) (type: double), ((_col0 + 6981.0) + _col0) (type: double), _col1 (type: bigint), (((_col0 + 6981.0) + _col0) / _col0) (type: double), (- (_col0 + 6981.0)) (type: double), _col2 (type: double), (_col0 % (- (_col0 + 6981.0))) (type: double), _col3 (type: double), _col4 (type: double), (- _col1) (type: bigint), (UDFToDouble((- _col1)) / _col2) (type: double), _col5 (type: float), (_col4 * -26.28) (type: double)
+                  expressions: _col0 (type: double), (_col0 + 6981) (type: double), ((_col0 + 6981) + _col0) (type: double), _col1 (type: bigint), (((_col0 + 6981) + _col0) / _col0) (type: double), (- (_col0 + 6981)) (type: double), _col2 (type: double), (_col0 % (- (_col0 + 6981))) (type: double), _col3 (type: double), _col4 (type: double), (- _col1) (type: bigint), ((- _col1) / _col2) (type: double), _col5 (type: float), (_col4 * -26.28) (type: double)
                   outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                   Statistics: Num rows: 1 Data size: 44 Basic stats: COMPLETE Column stats: NONE
                   File Output Operator
@@ -855,19 +851,19 @@ EXPLAIN SELECT cint,
        ctimestamp1,
        csmallint,
        cbigint,
-       (-3728 * cbigint) as c1,
-       (-(cint)) as c2,
-       (-863.257 - cint) as c3,
-       (-(csmallint)) as c4,
-       (csmallint - (-(csmallint))) as c5,
-       ((csmallint - (-(csmallint))) + (-(csmallint))) as c6,
-       (cint / cint) as c7,
-       ((-863.257 - cint) - -26.28) as c8,
-       (-(cfloat)) as c9,
-       (cdouble * -89010) as c10,
-       (ctinyint / 988888) as c11,
-       (-(ctinyint)) as c12,
-       (79.553 / ctinyint) as c13
+       (-3728 * cbigint),
+       (-(cint)),
+       (-863.257 - cint),
+       (-(csmallint)),
+       (csmallint - (-(csmallint))),
+       ((csmallint - (-(csmallint))) + (-(csmallint))),
+       (cint / cint),
+       ((-863.257 - cint) - -26.28),
+       (-(cfloat)),
+       (cdouble * -89010),
+       (ctinyint / 988888),
+       (-(ctinyint)),
+       (79.553 / ctinyint)
 FROM   alltypesorc
 WHERE  (((cstring1 RLIKE 'a.*')
          AND (cstring2 LIKE '%ss%'))
@@ -878,7 +874,7 @@ WHERE  (((cstring1 RLIKE 'a.*')
             AND (cfloat >= cint))
            OR ((cint < cbigint)
                AND (ctinyint > cbigint)))
-ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint
 LIMIT 50
 PREHOOK: type: QUERY
 POSTHOOK: query: -- TargetTypeClasses: Timestamp, String, Long, Double, Bool
@@ -896,19 +892,19 @@ EXPLAIN SELECT cint,
        ctimestamp1,
        csmallint,
        cbigint,
-       (-3728 * cbigint) as c1,
-       (-(cint)) as c2,
-       (-863.257 - cint) as c3,
-       (-(csmallint)) as c4,
-       (csmallint - (-(csmallint))) as c5,
-       ((csmallint - (-(csmallint))) + (-(csmallint))) as c6,
-       (cint / cint) as c7,
-       ((-863.257 - cint) - -26.28) as c8,
-       (-(cfloat)) as c9,
-       (cdouble * -89010) as c10,
-       (ctinyint / 988888) as c11,
-       (-(ctinyint)) as c12,
-       (79.553 / ctinyint) as c13
+       (-3728 * cbigint),
+       (-(cint)),
+       (-863.257 - cint),
+       (-(csmallint)),
+       (csmallint - (-(csmallint))),
+       ((csmallint - (-(csmallint))) + (-(csmallint))),
+       (cint / cint),
+       ((-863.257 - cint) - -26.28),
+       (-(cfloat)),
+       (cdouble * -89010),
+       (ctinyint / 988888),
+       (-(ctinyint)),
+       (79.553 / ctinyint)
 FROM   alltypesorc
 WHERE  (((cstring1 RLIKE 'a.*')
          AND (cstring2 LIKE '%ss%'))
@@ -919,7 +915,7 @@ WHERE  (((cstring1 RLIKE 'a.*')
             AND (cfloat >= cint))
            OR ((cint < cbigint)
                AND (ctinyint > cbigint)))
-ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint
 LIMIT 50
 POSTHOOK: type: QUERY
 STAGE DEPENDENCIES:
@@ -939,21 +935,22 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: ((cstring1 regexp 'a.*' and (cstring2 like '%ss%')) or ((1 <> cboolean2) and (UDFToDouble(csmallint) < 79.553) and (-257 <> UDFToInteger(ctinyint))) or ((cdouble > UDFToDouble(ctinyint)) and (cfloat >= UDFToFloat(cint))) or ((UDFToLong(cint) < cbigint) and (UDFToLong(ctinyint) > cbigint))) (type: boolean)
+                    predicate: (((((cstring1 rlike 'a.*') and (cstring2 like '%ss%')) or ((1 <> cboolean2) and ((csmallint < 79.553) and (-257 <> ctinyint)))) or ((cdouble > ctinyint) and (cfloat >= cint))) or ((cint < cbigint) and (ctinyint > cbigint))) (type: boolean)
                     Statistics: Num rows: 9898 Data size: 303864 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: cint (type: int), cdouble (type: double), ctimestamp2 (type: timestamp), cstring1 (type: string), cboolean2 (type: boolean), ctinyint (type: tinyint), cfloat (type: float), ctimestamp1 (type: timestamp), csmallint (type: smallint), cbigint (type: bigint), (-3728 * cbigint) (type: bigint), (- cint) (type: int), (-863.257 - UDFToDouble(cint)) (type: double), (- csmallint) (type: smallint), (csmallint - (- csmallint)) (type: smallint), ((csmallint - (- csmallint)) + (- csmallint)) (type: smallint), (UDFToDouble(cint) / UDFToDouble(cint)) (type: double), ((-863.257 - UDFToDouble(cint)) - -26.28) (type: double), (- cfloat) (type: float), (cdouble * -89010.0) (type: double), (UDFToDouble(ctinyint) / 988888.0) (type: double), (- ctinyint) (type: tinyint), (79.553 / UDFToDouble(ctinyint)) (type: double)
+                      expressions: cint (type: int), cdouble (type: double), ctimestamp2 (type: timestamp), cstring1 (type: string), cboolean2 (type: boolean), ctinyint (type: tinyint), cfloat (type: float), ctimestamp1 (type: timestamp), csmallint (type: smallint), cbigint (type: bigint), (-3728 * cbigint) (type: bigint), (- cint) (type: int), (-863.257 - cint) (type: double), (- csmallint) (type: smallint), (csmallint - (- csmallint)) (type: smallint), ((csmallint - (- csmallint)) + (- csmallint)) (type: smallint), (cint / cint) (type: double), ((-863.257 - cint) - -26.28) (type: double), (- cfloat) (type: float), (cdouble * -89010) (type: double), (ctinyint / 988888) (type: double), (- ctinyint) (type: tinyint), (79.553 / ctinyint) (type: double)
                       outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22
                       Statistics: Num rows: 9898 Data size: 303864 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: _col0 (type: int), _col1 (type: double), _col2 (type: timestamp), _col3 (type: string), _col4 (type: boolean), _col5 (type: tinyint), _col6 (type: float), _col7 (type: timestamp), _col8 (type: smallint), _col9 (type: bigint), _col10 (type: bigint), _col11 (type: int), _col12 (type: double), _col13 (type: smallint), _col14 (type: smallint), _col15 (type: smallint), _col16 (type: double), _col17 (type: double), _col18 (type: float), _col19 (type: double), _col20 (type: double), _col21 (type: tinyint), _col22 (type: double)
-                        sort order: +++++++++++++++++++++++
+                        key expressions: _col0 (type: int), _col1 (type: double), _col2 (type: timestamp), _col3 (type: string), _col4 (type: boolean), _col5 (type: tinyint), _col6 (type: float), _col7 (type: timestamp), _col8 (type: smallint), _col9 (type: bigint)
+                        sort order: ++++++++++
                         Statistics: Num rows: 9898 Data size: 303864 Basic stats: COMPLETE Column stats: NONE
+                        value expressions: _col10 (type: bigint), _col11 (type: int), _col12 (type: double), _col13 (type: smallint), _col14 (type: smallint), _col15 (type: smallint), _col16 (type: double), _col17 (type: double), _col18 (type: float), _col19 (type: double), _col20 (type: double), _col21 (type: tinyint), _col22 (type: double)
             Execution mode: vectorized
         Reducer 2 
             Reduce Operator Tree:
               Select Operator
-                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: double), KEY.reducesinkkey2 (type: timestamp), KEY.reducesinkkey3 (type: string), KEY.reducesinkkey4 (type: boolean), KEY.reducesinkkey5 (type: tinyint), KEY.reducesinkkey6 (type: float), KEY.reducesinkkey7 (type: timestamp), KEY.reducesinkkey8 (type: smallint), KEY.reducesinkkey9 (type: bigint), KEY.reducesinkkey10 (type: bigint), KEY.reducesinkkey11 (type: int), KEY.reducesinkkey12 (type: double), KEY.reducesinkkey13 (type: smallint), KEY.reducesinkkey14 (type: smallint), KEY.reducesinkkey15 (type: smallint), KEY.reducesinkkey16 (type: double), KEY.reducesinkkey17 (type: double), KEY.reducesinkkey18 (type: float), KEY.reducesinkkey19 (type: double), KEY.reducesinkkey20 (type: double), KEY.reducesinkkey21 (type: tinyint), KEY.reducesinkkey22 (type: double)
+                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: double), KEY.reducesinkkey2 (type: timestamp), KEY.reducesinkkey3 (type: string), KEY.reducesinkkey4 (type: boolean), KEY.reducesinkkey5 (type: tinyint), KEY.reducesinkkey6 (type: float), KEY.reducesinkkey7 (type: timestamp), KEY.reducesinkkey8 (type: smallint), KEY.reducesinkkey9 (type: bigint), VALUE._col0 (type: bigint), VALUE._col1 (type: int), VALUE._col2 (type: double), VALUE._col3 (type: smallint), VALUE._col4 (type: smallint), VALUE._col5 (type: smallint), VALUE._col6 (type: double), VALUE._col7 (type: double), VALUE._col8 (type: float), VALUE._col9 (type: double), VALUE._col10 (type: double), VALUE._col11 (type: tinyint), VALUE._col12 (type: double)
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22
                 Statistics: Num rows: 9898 Data size: 303864 Basic stats: COMPLETE Column stats: NONE
                 Limit
@@ -984,19 +981,19 @@ PREHOOK: query: SELECT cint,
        ctimestamp1,
        csmallint,
        cbigint,
-       (-3728 * cbigint) as c1,
-       (-(cint)) as c2,
-       (-863.257 - cint) as c3,
-       (-(csmallint)) as c4,
-       (csmallint - (-(csmallint))) as c5,
-       ((csmallint - (-(csmallint))) + (-(csmallint))) as c6,
-       (cint / cint) as c7,
-       ((-863.257 - cint) - -26.28) as c8,
-       (-(cfloat)) as c9,
-       (cdouble * -89010) as c10,
-       (ctinyint / 988888) as c11,
-       (-(ctinyint)) as c12,
-       (79.553 / ctinyint) as c13
+       (-3728 * cbigint),
+       (-(cint)),
+       (-863.257 - cint),
+       (-(csmallint)),
+       (csmallint - (-(csmallint))),
+       ((csmallint - (-(csmallint))) + (-(csmallint))),
+       (cint / cint),
+       ((-863.257 - cint) - -26.28),
+       (-(cfloat)),
+       (cdouble * -89010),
+       (ctinyint / 988888),
+       (-(ctinyint)),
+       (79.553 / ctinyint)
 FROM   alltypesorc
 WHERE  (((cstring1 RLIKE 'a.*')
          AND (cstring2 LIKE '%ss%'))
@@ -1007,7 +1004,7 @@ WHERE  (((cstring1 RLIKE 'a.*')
             AND (cfloat >= cint))
            OR ((cint < cbigint)
                AND (ctinyint > cbigint)))
-ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint
 LIMIT 50
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
@@ -1022,19 +1019,19 @@ POSTHOOK: query: SELECT cint,
        ctimestamp1,
        csmallint,
        cbigint,
-       (-3728 * cbigint) as c1,
-       (-(cint)) as c2,
-       (-863.257 - cint) as c3,
-       (-(csmallint)) as c4,
-       (csmallint - (-(csmallint))) as c5,
-       ((csmallint - (-(csmallint))) + (-(csmallint))) as c6,
-       (cint / cint) as c7,
-       ((-863.257 - cint) - -26.28) as c8,
-       (-(cfloat)) as c9,
-       (cdouble * -89010) as c10,
-       (ctinyint / 988888) as c11,
-       (-(ctinyint)) as c12,
-       (79.553 / ctinyint) as c13
+       (-3728 * cbigint),
+       (-(cint)),
+       (-863.257 - cint),
+       (-(csmallint)),
+       (csmallint - (-(csmallint))),
+       ((csmallint - (-(csmallint))) + (-(csmallint))),
+       (cint / cint),
+       ((-863.257 - cint) - -26.28),
+       (-(cfloat)),
+       (cdouble * -89010),
+       (ctinyint / 988888),
+       (-(ctinyint)),
+       (79.553 / ctinyint)
 FROM   alltypesorc
 WHERE  (((cstring1 RLIKE 'a.*')
          AND (cstring2 LIKE '%ss%'))
@@ -1045,41 +1042,24 @@ WHERE  (((cstring1 RLIKE 'a.*')
             AND (cfloat >= cint))
            OR ((cint < cbigint)
                AND (ctinyint > cbigint)))
-ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cint, cdouble, ctimestamp2, cstring1, cboolean2, ctinyint, cfloat, ctimestamp1, csmallint, cbigint
 LIMIT 50
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-51	-51.0	1969-12-31 15:59:43.64	-7196	-1339164819	4992406445232	NULL	NULL	7196	-14392	-7196	NULL	NULL	51.0	6.4051596E8	-5.157308006568995E-5	51	-1.5598627450980391
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:45.978	-7196	-2128720310	7935869315680	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:47.15	-7196	628698169	-2343786774032	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:57.86	-7196	-26309289	98081029392	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:58.479	-7196	-1379694191	5143499944048	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 16:00:03.963	-7196	95444104	-355815619712	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 16:00:04.518	-7196	-1658319459	6182214943152	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-53	-53.0	1969-12-31 15:59:48.882	-7196	-1560660031	5818140595568	NULL	NULL	7196	-14392	-7196	NULL	NULL	53.0	6.4051596E8	-5.359555379375622E-5	53	-1.501
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-53	-53.0	1969-12-31 15:59:57.663	-7196	898472381	-3349505036368	NULL	NULL	7196	-14392	-7196	NULL	NULL	53.0	6.4051596E8	-5.359555379375622E-5	53	-1.501
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-53	-53.0	1969-12-31 16:00:11.36	-7196	-1357789899	5061840743472	NULL	NULL	7196	-14392	-7196	NULL	NULL	53.0	6.4051596E8	-5.359555379375622E-5	53	-1.501
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 15:59:53.657	-7196	1476582815	-5504700734320	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 16:00:05.688	-7196	1614836149	-6020109163472	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 16:00:06.484	-7196	1605976008	-5987078557824	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 16:00:11.198	-7196	1650677402	-6153725354656	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-55	-55.0	1969-12-31 15:59:43.932	-7196	1982381637	-7390318742736	NULL	NULL	7196	-14392	-7196	NULL	NULL	55.0	6.4051596E8	-5.561802752182249E-5	55	-1.4464181818181818
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-55	-55.0	1969-12-31 16:00:01.138	-7196	888532643	-3312449693104	NULL	NULL	7196	-14392	-7196	NULL	NULL	55.0	6.4051596E8	-5.561802752182249E-5	55	-1.4464181818181818
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-55	-55.0	1969-12-31 16:00:13.249	-7196	-685064281	2553919639568	NULL	NULL	7196	-14392	-7196	NULL	NULL	55.0	6.4051596E8	-5.561802752182249E-5	55	-1.4464181818181818
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-56	-56.0	1969-12-31 16:00:02.298	-7196	-1509994296	5629258735488	NULL	NULL	7196	-14392	-7196	NULL	NULL	56.0	6.4051596E8	-5.6629264385855625E-5	56	-1.4205892857142857
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 15:59:44.539	-7196	1839592407	-6858000493296	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 16:00:04.659	-7196	-1579093262	5886859680736	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 16:00:05.5	-7196	2042351711	-7613887178608	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 16:00:12.626	-7196	248308622	-925694542816	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-58	-58.0	1969-12-31 15:59:47.859	-7196	-1770443874	6600214762272	NULL	NULL	7196	-14392	-7196	NULL	NULL	58.0	6.4051596E8	-5.86517381139219E-5	58	-1.3716034482758621
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-58	-58.0	1969-12-31 15:59:55.857	-7196	-825174557	3076250748496	NULL	NULL	7196	-14392	-7196	NULL	NULL	58.0	6.4051596E8	-5.86517381139219E-5	58	-1.3716034482758621
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-58	-58.0	1969-12-31 16:00:12.065	-7196	1257970504	-4689714038912	NULL	NULL	7196	-14392	-7196	NULL	NULL	58.0	6.4051596E8	-5.86517381139219E-5	58	-1.3716034482758621
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-59	-59.0	1969-12-31 16:00:13.15	-7196	-1604890000	5983029920000	NULL	NULL	7196	-14392	-7196	NULL	NULL	59.0	6.4051596E8	-5.966297497795504E-5	59	-1.3483559322033898
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 15:59:45.385	-7196	1775867066	-6620432422048	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 15:59:52.408	-7196	1516314750	-5652821388000	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 15:59:55.806	-7196	-1802243330	6718763134240	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 16:00:10.618	-7196	-68838726	256630770528	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 15:59:56.048	-7196	406535485	-1515564288080	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 16:00:01.785	-7196	-1639157869	6110780535632	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 16:00:11.912	-7196	-1615920595	6024151978160	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 16:00:12.339	-7196	1805860756	-6732248898368	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-63	-63.0	1969-12-31 16:00:03.552	-7196	-1224023895	4563161080560	NULL	NULL	7196	-14392	-7196	NULL	NULL	63.0	6.4051596E8	-6.370792243408759E-5	63	-1.2627460317460317
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-63	-63.0	1969-12-31 16:00:07.375	-7196	-1711796768	6381578351104	NULL	NULL	7196	-14392	-7196	NULL	NULL	63.0	6.4051596E8	-6.370792243408759E-5	63	-1.2627460317460317
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-63	-63.0	1969-12-31 16:00:11.946	-7196	-994504916	3707514326848	NULL	NULL	7196	-14392	-7196	NULL	NULL	63.0	6.4051596E8	-6.370792243408759E-5	63	-1.2627460317460317
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 15:59:58.395	-7196	-1367753794	5098986144032	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:01.22	-7196	1670449519	-6227435806832	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:02.373	-7196	NULL	NULL	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:03.85	-7196	-642836823	2396495676144	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:09.025	-7196	-840223244	3132352253632	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:12.388	-7196	NULL	NULL	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
 NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-61	-61.0	1969-12-31 15:59:44.823	-7196	NULL	NULL	NULL	NULL	7196	-14392	-7196	NULL	NULL	61.0	6.4051596E8	-6.16854487060213E-5	61	-1.3041475409836065
 NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-61	-61.0	1969-12-31 15:59:48.035	-7196	1237548317	-4613580125776	NULL	NULL	7196	-14392	-7196	NULL	NULL	61.0	6.4051596E8	-6.16854487060213E-5	61	-1.3041475409836065
 NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-61	-61.0	1969-12-31 16:00:03.049	-7196	-1513172815	5641108254320	NULL	NULL	7196	-14392	-7196	NULL	NULL	61.0	6.4051596E8	-6.16854487060213E-5	61	-1.3041475409836065
@@ -1087,19 +1067,36 @@ NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-61	-61.0	1969-12-31 16:00:06.84
 NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-61	-61.0	1969-12-31 16:00:11.842	-7196	NULL	NULL	NULL	NULL	7196	-14392	-7196	NULL	NULL	61.0	6.4051596E8	-6.16854487060213E-5	61	-1.3041475409836065
 NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-61	-61.0	1969-12-31 16:00:12.454	-7196	-2175533	8110387024	NULL	NULL	7196	-14392	-7196	NULL	NULL	61.0	6.4051596E8	-6.16854487060213E-5	61	-1.3041475409836065
 NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-61	-61.0	1969-12-31 16:00:14.192	-7196	-2114172148	7881633767744	NULL	NULL	7196	-14392	-7196	NULL	NULL	61.0	6.4051596E8	-6.16854487060213E-5	61	-1.3041475409836065
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 15:59:58.395	-7196	-1367753794	5098986144032	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:01.22	-7196	1670449519	-6227435806832	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:02.373	-7196	NULL	NULL	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:03.85	-7196	-642836823	2396495676144	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:09.025	-7196	-840223244	3132352253632	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-62	-62.0	1969-12-31 16:00:12.388	-7196	NULL	NULL	NULL	NULL	7196	-14392	-7196	NULL	NULL	62.0	6.4051596E8	-6.269668557005445E-5	62	-1.2831129032258064
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-63	-63.0	1969-12-31 16:00:03.552	-7196	-1224023895	4563161080560	NULL	NULL	7196	-14392	-7196	NULL	NULL	63.0	6.4051596E8	-6.370792243408759E-5	63	-1.2627460317460317
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-63	-63.0	1969-12-31 16:00:07.375	-7196	-1711796768	6381578351104	NULL	NULL	7196	-14392	-7196	NULL	NULL	63.0	6.4051596E8	-6.370792243408759E-5	63	-1.2627460317460317
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-63	-63.0	1969-12-31 16:00:11.946	-7196	-994504916	3707514326848	NULL	NULL	7196	-14392	-7196	NULL	NULL	63.0	6.4051596E8	-6.370792243408759E-5	63	-1.2627460317460317
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 15:59:56.048	-7196	406535485	-1515564288080	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 16:00:01.785	-7196	-1639157869	6110780535632	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 16:00:11.912	-7196	-1615920595	6024151978160	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
-NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-64	-64.0	1969-12-31 16:00:12.339	-7196	1805860756	-6732248898368	NULL	NULL	7196	-14392	-7196	NULL	NULL	64.0	6.4051596E8	-6.471915929812072E-5	64	-1.243015625
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 15:59:45.385	-7196	1775867066	-6620432422048	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 15:59:52.408	-7196	1516314750	-5652821388000	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 15:59:55.806	-7196	-1802243330	6718763134240	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-60	-60.0	1969-12-31 16:00:10.618	-7196	-68838726	256630770528	NULL	NULL	7196	-14392	-7196	NULL	NULL	60.0	6.4051596E8	-6.0674211841988174E-5	60	-1.3258833333333333
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-59	-59.0	1969-12-31 16:00:13.15	-7196	-1604890000	5983029920000	NULL	NULL	7196	-14392	-7196	NULL	NULL	59.0	6.4051596E8	-5.966297497795504E-5	59	-1.3483559322033898
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-58	-58.0	1969-12-31 15:59:47.859	-7196	-1770443874	6600214762272	NULL	NULL	7196	-14392	-7196	NULL	NULL	58.0	6.4051596E8	-5.86517381139219E-5	58	-1.3716034482758621
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-58	-58.0	1969-12-31 15:59:55.857	-7196	-825174557	3076250748496	NULL	NULL	7196	-14392	-7196	NULL	NULL	58.0	6.4051596E8	-5.86517381139219E-5	58	-1.3716034482758621
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-58	-58.0	1969-12-31 16:00:12.065	-7196	1257970504	-4689714038912	NULL	NULL	7196	-14392	-7196	NULL	NULL	58.0	6.4051596E8	-5.86517381139219E-5	58	-1.3716034482758621
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 15:59:44.539	-7196	1839592407	-6858000493296	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 16:00:04.659	-7196	-1579093262	5886859680736	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 16:00:05.5	-7196	2042351711	-7613887178608	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-57	-57.0	1969-12-31 16:00:12.626	-7196	248308622	-925694542816	NULL	NULL	7196	-14392	-7196	NULL	NULL	57.0	6.4051596E8	-5.764050124988876E-5	57	-1.3956666666666666
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-56	-56.0	1969-12-31 16:00:02.298	-7196	-1509994296	5629258735488	NULL	NULL	7196	-14392	-7196	NULL	NULL	56.0	6.4051596E8	-5.6629264385855625E-5	56	-1.4205892857142857
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-55	-55.0	1969-12-31 15:59:43.932	-7196	1982381637	-7390318742736	NULL	NULL	7196	-14392	-7196	NULL	NULL	55.0	6.4051596E8	-5.561802752182249E-5	55	-1.4464181818181818
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-55	-55.0	1969-12-31 16:00:01.138	-7196	888532643	-3312449693104	NULL	NULL	7196	-14392	-7196	NULL	NULL	55.0	6.4051596E8	-5.561802752182249E-5	55	-1.4464181818181818
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-55	-55.0	1969-12-31 16:00:13.249	-7196	-685064281	2553919639568	NULL	NULL	7196	-14392	-7196	NULL	NULL	55.0	6.4051596E8	-5.561802752182249E-5	55	-1.4464181818181818
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 15:59:53.657	-7196	1476582815	-5504700734320	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 16:00:05.688	-7196	1614836149	-6020109163472	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 16:00:06.484	-7196	1605976008	-5987078557824	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-54	-54.0	1969-12-31 16:00:11.198	-7196	1650677402	-6153725354656	NULL	NULL	7196	-14392	-7196	NULL	NULL	54.0	6.4051596E8	-5.4606790657789354E-5	54	-1.4732037037037036
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-53	-53.0	1969-12-31 15:59:48.882	-7196	-1560660031	5818140595568	NULL	NULL	7196	-14392	-7196	NULL	NULL	53.0	6.4051596E8	-5.359555379375622E-5	53	-1.501
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-53	-53.0	1969-12-31 15:59:57.663	-7196	898472381	-3349505036368	NULL	NULL	7196	-14392	-7196	NULL	NULL	53.0	6.4051596E8	-5.359555379375622E-5	53	-1.501
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-53	-53.0	1969-12-31 16:00:11.36	-7196	-1357789899	5061840743472	NULL	NULL	7196	-14392	-7196	NULL	NULL	53.0	6.4051596E8	-5.359555379375622E-5	53	-1.501
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:45.978	-7196	-2128720310	7935869315680	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:47.15	-7196	628698169	-2343786774032	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:57.86	-7196	-26309289	98081029392	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 15:59:58.479	-7196	-1379694191	5143499944048	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 16:00:03.963	-7196	95444104	-355815619712	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-52	-52.0	1969-12-31 16:00:04.518	-7196	-1658319459	6182214943152	NULL	NULL	7196	-14392	-7196	NULL	NULL	52.0	6.4051596E8	-5.258431692972308E-5	52	-1.5298653846153845
+NULL	-7196.0	1969-12-31 15:59:58.174	NULL	false	-51	-51.0	1969-12-31 15:59:43.64	-7196	-1339164819	4992406445232	NULL	NULL	7196	-14392	-7196	NULL	NULL	51.0	6.4051596E8	-5.157308006568995E-5	51	-1.5598627450980391
 PREHOOK: query: -- TargetTypeClasses: Long, String, Double, Bool, Timestamp
 -- Functions: VarP, Var, StDev, StDevP, Max, Sum
 -- ArithmeticOps: Divide, Remainder, Subtract, Multiply
@@ -1115,21 +1112,21 @@ EXPLAIN SELECT cint,
        csmallint,
        cstring2,
        cboolean2,
-       (cint / cbigint) as c1,
-       (cbigint % 79.553) as c2,
-       (-((cint / cbigint))) as c3,
-       (10.175 % cfloat) as c4,
-       (-(cfloat)) as c5,
-       (cfloat - (-(cfloat))) as c6,
-       ((cfloat - (-(cfloat))) % -6432) as c7,
-       (cdouble * csmallint) as c8,
-       (-(cdouble)) as c9,
-       (-(cbigint)) as c10,
-       (cfloat - (cint / cbigint)) as c11,
-       (-(csmallint)) as c12,
-       (3569 % cbigint) as c13,
-       (359 - cdouble) as c14,
-       (-(csmallint)) as c15
+       (cint / cbigint),
+       (cbigint % 79.553),
+       (-((cint / cbigint))),
+       (10.175 % cfloat),
+       (-(cfloat)),
+       (cfloat - (-(cfloat))),
+       ((cfloat - (-(cfloat))) % -6432),
+       (cdouble * csmallint),
+       (-(cdouble)),
+       (-(cbigint)),
+       (cfloat - (cint / cbigint)),
+       (-(csmallint)),
+       (3569 % cbigint),
+       (359 - cdouble),
+       (-(csmallint))
 FROM   alltypesorc
 WHERE  (((197 > ctinyint)
          AND (cint = cbigint))
@@ -1137,7 +1134,7 @@ WHERE  (((197 > ctinyint)
         OR (cboolean1 < 0)
            OR ((cstring1 LIKE '%ss')
                AND (cfloat <= ctinyint)))
-ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15
+ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2
 LIMIT 25
 PREHOOK: type: QUERY
 POSTHOOK: query: -- TargetTypeClasses: Long, String, Double, Bool, Timestamp
@@ -1155,21 +1152,21 @@ EXPLAIN SELECT cint,
        csmallint,
        cstring2,
        cboolean2,
-       (cint / cbigint) as c1,
-       (cbigint % 79.553) as c2,
-       (-((cint / cbigint))) as c3,
-       (10.175 % cfloat) as c4,
-       (-(cfloat)) as c5,
-       (cfloat - (-(cfloat))) as c6,
-       ((cfloat - (-(cfloat))) % -6432) as c7,
-       (cdouble * csmallint) as c8,
-       (-(cdouble)) as c9,
-       (-(cbigint)) as c10,
-       (cfloat - (cint / cbigint)) as c11,
-       (-(csmallint)) as c12,
-       (3569 % cbigint) as c13,
-       (359 - cdouble) as c14,
-       (-(csmallint)) as c15
+       (cint / cbigint),
+       (cbigint % 79.553),
+       (-((cint / cbigint))),
+       (10.175 % cfloat),
+       (-(cfloat)),
+       (cfloat - (-(cfloat))),
+       ((cfloat - (-(cfloat))) % -6432),
+       (cdouble * csmallint),
+       (-(cdouble)),
+       (-(cbigint)),
+       (cfloat - (cint / cbigint)),
+       (-(csmallint)),
+       (3569 % cbigint),
+       (359 - cdouble),
+       (-(csmallint))
 FROM   alltypesorc
 WHERE  (((197 > ctinyint)
          AND (cint = cbigint))
@@ -1177,7 +1174,7 @@ WHERE  (((197 > ctinyint)
         OR (cboolean1 < 0)
            OR ((cstring1 LIKE '%ss')
                AND (cfloat <= ctinyint)))
-ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15
+ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2
 LIMIT 25
 POSTHOOK: type: QUERY
 STAGE DEPENDENCIES:
@@ -1197,21 +1194,22 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: (((197.0 > UDFToDouble(ctinyint)) and (UDFToLong(cint) = cbigint)) or (cbigint = 359) or (cboolean1 < 0) or ((cstring1 like '%ss') and (cfloat <= UDFToFloat(ctinyint)))) (type: boolean)
+                    predicate: (((((197.0 > ctinyint) and (cint = cbigint)) or (cbigint = 359)) or (cboolean1 < 0)) or ((cstring1 like '%ss') and (cfloat <= ctinyint))) (type: boolean)
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: cint (type: int), cbigint (type: bigint), cstring1 (type: string), cboolean1 (type: boolean), cfloat (type: float), cdouble (type: double), ctimestamp2 (type: timestamp), csmallint (type: smallint), cstring2 (type: string), cboolean2 (type: boolean), (UDFToDouble(cint) / UDFToDouble(cbigint)) (type: double), (UDFToDouble(cbigint) % 79.553) (type: double), (- (UDFToDouble(cint) / UDFToDouble(cbigint))) (type: double), (10.175 % UDFToDouble(cfloat)) (type: double), (- cfloat) (type: float), (cfloat - (- cfloat)) (type: float), ((cfloat - (- cfloat)) % -6432.0) (type: float), (cdouble * UDFToDouble(csmallint)) (type: double), (- cdouble) (type: double), (- cbigint) (type: bigint), (UDFToDouble(cfloat) - (UDFToDouble(cint) / UDFToDouble(cbigint))) (type: double), (- csmallint) (type: smallint), (3569 % cbigint) (type: bigint), (359.0 - cdouble) (type: double), (- csmallint) (type: smallint)
-                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24
+                      expressions: cint (type: int), cbigint (type: bigint), (cint / cbigint) (type: double), (cbigint % 79.553) (type: double), (- (cint / cbigint)) (type: double), (10.175 % cfloat) (type: double), (- cfloat) (type: float), (cfloat - (- cfloat)) (type: float), ((cfloat - (- cfloat)) % -6432) (type: float), (cdouble * csmallint) (type: double), (- cdouble) (type: double), (- cbigint) (type: bigint), cstring1 (type: string), (cfloat - (cint / cbigint)) (type: double), (- csmallint) (type: smallint), (3569 % cbigint) (type: bigint), (359 - cdouble) (type: double), cboolean1 (type: boolean), cfloat (type: float), cdouble (type: double), ctimestamp2 (type: timestamp), csmallint (type: smallint), cstring2 (type: string), cboolean2 (type: boolean)
+                      outputColumnNames: _col0, _col1, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col2, _col20, _col21, _col22, _col23, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                       Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: _col0 (type: int), _col1 (type: bigint), _col2 (type: string), _col3 (type: boolean), _col4 (type: float), _col5 (type: double), _col6 (type: timestamp), _col7 (type: smallint), _col8 (type: string), _col9 (type: boolean), _col10 (type: double), _col11 (type: double), _col12 (type: double), _col13 (type: double), _col14 (type: float), _col15 (type: float), _col16 (type: float), _col17 (type: double), _col18 (type: double), _col19 (type: bigint), _col20 (type: double), _col21 (type: smallint), _col22 (type: bigint), _col23 (type: double), _col24 (type: smallint)
-                        sort order: +++++++++++++++++++++++++
+                        key expressions: _col0 (type: int), _col1 (type: bigint), _col2 (type: string), _col3 (type: boolean), _col4 (type: float), _col5 (type: double), _col6 (type: timestamp), _col7 (type: smallint), _col8 (type: string), _col9 (type: boolean)
+                        sort order: ++++++++++
                         Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
+                        value expressions: _col10 (type: double), _col11 (type: double), _col12 (type: double), _col13 (type: double), _col14 (type: float), _col15 (type: float), _col16 (type: float), _col17 (type: double), _col18 (type: double), _col19 (type: bigint), _col20 (type: double), _col21 (type: smallint), _col22 (type: bigint), _col23 (type: double)
             Execution mode: vectorized
         Reducer 2 
             Reduce Operator Tree:
               Select Operator
-                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: bigint), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: boolean), KEY.reducesinkkey4 (type: float), KEY.reducesinkkey5 (type: double), KEY.reducesinkkey6 (type: timestamp), KEY.reducesinkkey7 (type: smallint), KEY.reducesinkkey8 (type: string), KEY.reducesinkkey9 (type: boolean), KEY.reducesinkkey10 (type: double), KEY.reducesinkkey11 (type: double), KEY.reducesinkkey12 (type: double), KEY.reducesinkkey13 (type: double), KEY.reducesinkkey14 (type: float), KEY.reducesinkkey15 (type: float), KEY.reducesinkkey16 (type: float), KEY.reducesinkkey17 (type: double), KEY.reducesinkkey18 (type: double), KEY.reducesinkkey19 (type: bigint), KEY.reducesinkkey20 (type: double), KEY.reducesinkkey21 (type: smallint), KEY.reducesinkkey22 (type: bigint), KEY.reducesinkkey23 (type: double), KEY.reducesinkkey21 (type: smallint)
+                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: bigint), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: boolean), KEY.reducesinkkey4 (type: float), KEY.reducesinkkey5 (type: double), KEY.reducesinkkey6 (type: timestamp), KEY.reducesinkkey7 (type: smallint), KEY.reducesinkkey8 (type: string), KEY.reducesinkkey9 (type: boolean), VALUE._col0 (type: double), VALUE._col1 (type: double), VALUE._col2 (type: double), VALUE._col3 (type: double), VALUE._col4 (type: float), VALUE._col5 (type: float), VALUE._col6 (type: float), VALUE._col7 (type: double), VALUE._col8 (type: double), VALUE._col9 (type: bigint), VALUE._col10 (type: double), VALUE._col11 (type: smallint), VALUE._col12 (type: bigint), VALUE._col13 (type: double), VALUE._col11 (type: smallint)
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24
                 Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                 Limit
@@ -1242,21 +1240,21 @@ PREHOOK: query: SELECT cint,
        csmallint,
        cstring2,
        cboolean2,
-       (cint / cbigint) as c1,
-       (cbigint % 79.553) as c2,
-       (-((cint / cbigint))) as c3,
-       (10.175 % cfloat) as c4,
-       (-(cfloat)) as c5,
-       (cfloat - (-(cfloat))) as c6,
-       ((cfloat - (-(cfloat))) % -6432) as c7,
-       (cdouble * csmallint) as c8,
-       (-(cdouble)) as c9,
-       (-(cbigint)) as c10,
-       (cfloat - (cint / cbigint)) as c11,
-       (-(csmallint)) as c12,
-       (3569 % cbigint) as c13,
-       (359 - cdouble) as c14,
-       (-(csmallint)) as c15
+       (cint / cbigint),
+       (cbigint % 79.553),
+       (-((cint / cbigint))),
+       (10.175 % cfloat),
+       (-(cfloat)),
+       (cfloat - (-(cfloat))),
+       ((cfloat - (-(cfloat))) % -6432),
+       (cdouble * csmallint),
+       (-(cdouble)),
+       (-(cbigint)),
+       (cfloat - (cint / cbigint)),
+       (-(csmallint)),
+       (3569 % cbigint),
+       (359 - cdouble),
+       (-(csmallint))
 FROM   alltypesorc
 WHERE  (((197 > ctinyint)
          AND (cint = cbigint))
@@ -1264,7 +1262,7 @@ WHERE  (((197 > ctinyint)
         OR (cboolean1 < 0)
            OR ((cstring1 LIKE '%ss')
                AND (cfloat <= ctinyint)))
-ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15
+ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2
 LIMIT 25
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
@@ -1279,21 +1277,21 @@ POSTHOOK: query: SELECT cint,
        csmallint,
        cstring2,
        cboolean2,
-       (cint / cbigint) as c1,
-       (cbigint % 79.553) as c2,
-       (-((cint / cbigint))) as c3,
-       (10.175 % cfloat) as c4,
-       (-(cfloat)) as c5,
-       (cfloat - (-(cfloat))) as c6,
-       ((cfloat - (-(cfloat))) % -6432) as c7,
-       (cdouble * csmallint) as c8,
-       (-(cdouble)) as c9,
-       (-(cbigint)) as c10,
-       (cfloat - (cint / cbigint)) as c11,
-       (-(csmallint)) as c12,
-       (3569 % cbigint) as c13,
-       (359 - cdouble) as c14,
-       (-(csmallint)) as c15
+       (cint / cbigint),
+       (cbigint % 79.553),
+       (-((cint / cbigint))),
+       (10.175 % cfloat),
+       (-(cfloat)),
+       (cfloat - (-(cfloat))),
+       ((cfloat - (-(cfloat))) % -6432),
+       (cdouble * csmallint),
+       (-(cdouble)),
+       (-(cbigint)),
+       (cfloat - (cint / cbigint)),
+       (-(csmallint)),
+       (3569 % cbigint),
+       (359 - cdouble),
+       (-(csmallint))
 FROM   alltypesorc
 WHERE  (((197 > ctinyint)
          AND (cint = cbigint))
@@ -1301,13 +1299,13 @@ WHERE  (((197 > ctinyint)
         OR (cboolean1 < 0)
            OR ((cstring1 LIKE '%ss')
                AND (cfloat <= ctinyint)))
-ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15
+ORDER BY cint, cbigint, cstring1, cboolean1, cfloat, cdouble, ctimestamp2, csmallint, cstring2, cboolean2
 LIMIT 25
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
--462839731	988888	ss	false	-51.0	NULL	NULL	NULL	Lml5J2QBU77	false	-468.04059812638036	44.210000000033915	468.04059812638036	10.175	51.0	-102.0	-102.0	NULL	NULL	-988888	417.04059812638036	NULL	3569	NULL	NULL
 -635141101	-89010	ss	false	-51.0	NULL	NULL	NULL	rVWAj4N1MCg8Scyp7wj2C	true	7135.6151106617235	-69.74600000000305	-7135.6151106617235	10.175	51.0	-102.0	-102.0	NULL	NULL	89010	-7186.6151106617235	NULL	3569	NULL	NULL
+-462839731	988888	ss	false	-51.0	NULL	NULL	NULL	Lml5J2QBU77	false	-468.04059812638036	44.210000000033915	468.04059812638036	10.175	51.0	-102.0	-102.0	NULL	NULL	-988888	417.04059812638036	NULL	3569	NULL	NULL
 WARNING: Comparing a bigint and a double may result in a loss of precision.
 PREHOOK: query: -- TargetTypeClasses: String, Bool, Double, Long, Timestamp
 -- Functions: Sum, Max, Avg, Var, StDevP, VarP
@@ -1323,19 +1321,19 @@ EXPLAIN SELECT   cint,
          cbigint,
          csmallint,
          cboolean1,
-         (cint + csmallint) as c1,
-         (cbigint - ctinyint) as c2,
-         (-(cbigint)) as c3,
-         (-(cfloat)) as c4,
-         ((cbigint - ctinyint) + cbigint) as c5,
-         (cdouble / cdouble) as c6,
-         (-(cdouble)) as c7,
-         ((cint + csmallint) * (-(cbigint))) as c8,
-         ((-(cdouble)) + cbigint) as c9,
-         (-1.389 / ctinyint) as c10,
-         (cbigint % cdouble) as c11,
-         (-(csmallint)) as c12,
-         (csmallint + (cint + csmallint)) as c13
+         (cint + csmallint),
+         (cbigint - ctinyint),
+         (-(cbigint)),
+         (-(cfloat)),
+         ((cbigint - ctinyint) + cbigint),
+         (cdouble / cdouble),
+         (-(cdouble)),
+         ((cint + csmallint) * (-(cbigint))),
+         ((-(cdouble)) + cbigint),
+         (-1.389 / ctinyint),
+         (cbigint % cdouble),
+         (-(csmallint)),
+         (csmallint + (cint + csmallint))
 FROM     alltypesorc
 WHERE    (((csmallint > -26.28)
            AND (cstring2 LIKE 'ss'))
@@ -1345,7 +1343,7 @@ WHERE    (((csmallint > -26.28)
           OR (ctinyint = -89010)
              OR ((cbigint <= cfloat)
                  AND (-26.28 <= csmallint)))
-ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble
 LIMIT 75
 PREHOOK: type: QUERY
 POSTHOOK: query: -- TargetTypeClasses: String, Bool, Double, Long, Timestamp
@@ -1362,19 +1360,19 @@ EXPLAIN SELECT   cint,
          cbigint,
          csmallint,
          cboolean1,
-         (cint + csmallint) as c1,
-         (cbigint - ctinyint) as c2,
-         (-(cbigint)) as c3,
-         (-(cfloat)) as c4,
-         ((cbigint - ctinyint) + cbigint) as c5,
-         (cdouble / cdouble) as c6,
-         (-(cdouble)) as c7,
-         ((cint + csmallint) * (-(cbigint))) as c8,
-         ((-(cdouble)) + cbigint) as c9,
-         (-1.389 / ctinyint) as c10,
-         (cbigint % cdouble) as c11,
-         (-(csmallint)) as c12,
-         (csmallint + (cint + csmallint)) as c13
+         (cint + csmallint),
+         (cbigint - ctinyint),
+         (-(cbigint)),
+         (-(cfloat)),
+         ((cbigint - ctinyint) + cbigint),
+         (cdouble / cdouble),
+         (-(cdouble)),
+         ((cint + csmallint) * (-(cbigint))),
+         ((-(cdouble)) + cbigint),
+         (-1.389 / ctinyint),
+         (cbigint % cdouble),
+         (-(csmallint)),
+         (csmallint + (cint + csmallint))
 FROM     alltypesorc
 WHERE    (((csmallint > -26.28)
            AND (cstring2 LIKE 'ss'))
@@ -1384,7 +1382,7 @@ WHERE    (((csmallint > -26.28)
           OR (ctinyint = -89010)
              OR ((cbigint <= cfloat)
                  AND (-26.28 <= csmallint)))
-ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble
 LIMIT 75
 POSTHOOK: type: QUERY
 STAGE DEPENDENCIES:
@@ -1404,22 +1402,22 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: (((UDFToDouble(csmallint) > -26.28) and (cstring2 like 'ss')) or ((cdouble <= UDFToDouble(cbigint)) and (cstring1 >= 'ss') and (UDFToDouble(cint) <> cdouble)) or (UDFToInteger(ctinyint) = -89010) or ((UDFToFloat(cbigint) <= cfloat) and (-26.28 <= UDFToDouble(csmallint)))) (type: boolean)
+                    predicate: (((((csmallint > -26.28) and (cstring2 like 'ss')) or ((cdouble <= cbigint) and ((cstring1 >= 'ss') and (cint <> cdouble)))) or (ctinyint = -89010)) or ((cbigint <= cfloat) and (-26.28 <= csmallint))) (type: boolean)
                     Statistics: Num rows: 10922 Data size: 335301 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: cint (type: int), cstring1 (type: string), cboolean2 (type: boolean), ctimestamp2 (type: timestamp), cdouble (type: double), cfloat (type: float), cbigint (type: bigint), csmallint (type: smallint), cboolean1 (type: boolean), (cint + UDFToInteger(csmallint)) (type: int), (cbigint - UDFToLong(ctinyint)) (type: bigint), (- cbigint) (type: bigint), (- cfloat) (type: float), ((cbigint - UDFToLong(ctinyint)) + cbigint) (type: bigint), (cdouble / cdouble) (type: double), (- cdouble) (type: double), (UDFToLong((cint + UDFToInteger(csmallint))) * (- cbigint)) (type: bigint), ((- cdouble) + UDFToDouble(cbigint)) (type: double), (-1.389 / UDFToDouble(ctinyint)) (type: double), (UDFToDouble(cbigint) % cdouble) (type: double), (- csmallint) (type: smallint), (UDFToInteger(csmallint) + (cint + UDFToInteger(csmallint))) (type: int)
+                      expressions: cint (type: int), cstring1 (type: string), cboolean2 (type: boolean), ctimestamp2 (type: timestamp), cdouble (type: double), cfloat (type: float), cbigint (type: bigint), csmallint (type: smallint), cboolean1 (type: boolean), (cint + csmallint) (type: int), (cbigint - ctinyint) (type: bigint), (- cbigint) (type: bigint), (- cfloat) (type: float), ((cbigint - ctinyint) + cbigint) (type: bigint), (cdouble / cdouble) (type: double), (- cdouble) (type: double), ((cint + csmallint) * (- cbigint)) (type: bigint), ((- cdouble) + cbigint) (type: double), (-1.389 / ctinyint) (type: double), (cbigint % cdouble) (type: double), (- csmallint) (type: smallint), (csmallint + (cint + csmallint)) (type: int)
                       outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21
                       Statistics: Num rows: 10922 Data size: 335301 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: _col8 (type: boolean), _col1 (type: string), _col3 (type: timestamp), _col5 (type: float), _col6 (type: bigint), _col1 (type: string), _col4 (type: double), _col0 (type: int), _col7 (type: smallint), _col4 (type: double), _col9 (type: int), _col10 (type: bigint), _col11 (type: bigint), _col12 (type: float), _col13 (type: bigint), _col14 (type: double), _col15 (type: double), _col16 (type: bigint), _col17 (type: double), _col18 (type: double), _col19 (type: double), _col20 (type: smallint), _col21 (type: int)
-                        sort order: +++++++++++++++++++++++
+                        key expressions: _col8 (type: boolean), _col1 (type: string), _col3 (type: timestamp), _col5 (type: float), _col6 (type: bigint), _col1 (type: string), _col4 (type: double), _col0 (type: int), _col7 (type: smallint), _col4 (type: double)
+                        sort order: ++++++++++
                         Statistics: Num rows: 10922 Data size: 335301 Basic stats: COMPLETE Column stats: NONE
-                        value expressions: _col2 (type: boolean)
+                        value expressions: _col2 (type: boolean), _col9 (type: int), _col10 (type: bigint), _col11 (type: bigint), _col12 (type: float), _col13 (type: bigint), _col14 (type: double), _col15 (type: double), _col16 (type: bigint), _col17 (type: double), _col18 (type: double), _col19 (type: double), _col20 (type: smallint), _col21 (type: int)
             Execution mode: vectorized
         Reducer 2 
             Reduce Operator Tree:
               Select Operator
-                expressions: KEY.reducesinkkey7 (type: int), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: boolean), KEY.reducesinkkey2 (type: timestamp), KEY.reducesinkkey6 (type: double), KEY.reducesinkkey3 (type: float), KEY.reducesinkkey4 (type: bigint), KEY.reducesinkkey8 (type: smallint), KEY.reducesinkkey0 (type: boolean), KEY.reducesinkkey10 (type: int), KEY.reducesinkkey11 (type: bigint), KEY.reducesinkkey12 (type: bigint), KEY.reducesinkkey13 (type: float), KEY.reducesinkkey14 (type: bigint), KEY.reducesinkkey15 (type: double), KEY.reducesinkkey16 (type: double), KEY.reducesinkkey17 (type: bigint), KEY.reducesinkkey18 (type: double), KEY.reducesinkkey19 (type: double), KEY.reducesinkkey20 (type: double), KEY.reducesinkkey21 (type: smallint), KEY.reducesinkkey22 (type: int)
+                expressions: KEY.reducesinkkey7 (type: int), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: boolean), KEY.reducesinkkey2 (type: timestamp), KEY.reducesinkkey6 (type: double), KEY.reducesinkkey3 (type: float), KEY.reducesinkkey4 (type: bigint), KEY.reducesinkkey8 (type: smallint), KEY.reducesinkkey0 (type: boolean), VALUE._col1 (type: int), VALUE._col2 (type: bigint), VALUE._col3 (type: bigint), VALUE._col4 (type: float), VALUE._col5 (type: bigint), VALUE._col6 (type: double), VALUE._col7 (type: double), VALUE._col8 (type: bigint), VALUE._col9 (type: double), VALUE._col10 (type: double), VALUE._col11 (type: double), VALUE._col12 (type: smallint), VALUE._col13 (type: int)
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21
                 Statistics: Num rows: 10922 Data size: 335301 Basic stats: COMPLETE Column stats: NONE
                 Limit
@@ -1450,19 +1448,19 @@ PREHOOK: query: SELECT   cint,
          cbigint,
          csmallint,
          cboolean1,
-         (cint + csmallint) as c1,
-         (cbigint - ctinyint) as c2,
-         (-(cbigint)) as c3,
-         (-(cfloat)) as c4,
-         ((cbigint - ctinyint) + cbigint) as c5,
-         (cdouble / cdouble) as c6,
-         (-(cdouble)) as c7,
-         ((cint + csmallint) * (-(cbigint))) as c8,
-         ((-(cdouble)) + cbigint) as c9,
-         (-1.389 / ctinyint) as c10,
-         (cbigint % cdouble) as c11,
-         (-(csmallint)) as c12,
-         (csmallint + (cint + csmallint)) as c13
+         (cint + csmallint),
+         (cbigint - ctinyint),
+         (-(cbigint)),
+         (-(cfloat)),
+         ((cbigint - ctinyint) + cbigint),
+         (cdouble / cdouble),
+         (-(cdouble)),
+         ((cint + csmallint) * (-(cbigint))),
+         ((-(cdouble)) + cbigint),
+         (-1.389 / ctinyint),
+         (cbigint % cdouble),
+         (-(csmallint)),
+         (csmallint + (cint + csmallint))
 FROM     alltypesorc
 WHERE    (((csmallint > -26.28)
            AND (cstring2 LIKE 'ss'))
@@ -1472,7 +1470,7 @@ WHERE    (((csmallint > -26.28)
           OR (ctinyint = -89010)
              OR ((cbigint <= cfloat)
                  AND (-26.28 <= csmallint)))
-ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble
 LIMIT 75
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
@@ -1486,19 +1484,19 @@ POSTHOOK: query: SELECT   cint,
          cbigint,
          csmallint,
          cboolean1,
-         (cint + csmallint) as c1,
-         (cbigint - ctinyint) as c2,
-         (-(cbigint)) as c3,
-         (-(cfloat)) as c4,
-         ((cbigint - ctinyint) + cbigint) as c5,
-         (cdouble / cdouble) as c6,
-         (-(cdouble)) as c7,
-         ((cint + csmallint) * (-(cbigint))) as c8,
-         ((-(cdouble)) + cbigint) as c9,
-         (-1.389 / ctinyint) as c10,
-         (cbigint % cdouble) as c11,
-         (-(csmallint)) as c12,
-         (csmallint + (cint + csmallint)) as c13
+         (cint + csmallint),
+         (cbigint - ctinyint),
+         (-(cbigint)),
+         (-(cfloat)),
+         ((cbigint - ctinyint) + cbigint),
+         (cdouble / cdouble),
+         (-(cdouble)),
+         ((cint + csmallint) * (-(cbigint))),
+         ((-(cdouble)) + cbigint),
+         (-1.389 / ctinyint),
+         (cbigint % cdouble),
+         (-(csmallint)),
+         (csmallint + (cint + csmallint))
 FROM     alltypesorc
 WHERE    (((csmallint > -26.28)
            AND (cstring2 LIKE 'ss'))
@@ -1508,86 +1506,86 @@ WHERE    (((csmallint > -26.28)
           OR (ctinyint = -89010)
              OR ((cbigint <= cfloat)
                  AND (-26.28 <= csmallint)))
-ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13
+ORDER BY cboolean1, cstring1, ctimestamp2, cfloat, cbigint, cstring1, cdouble, cint, csmallint, cdouble
 LIMIT 75
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-44.0	-1416000760	15601	NULL	NULL	-1416000716	1416000760	44.0	-2832001476	1.0	-15601.0	NULL	-1.416016361E9	0.03156818181818182	-7197.0	-15601	NULL
-NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-48.0	-1683400285	15601	NULL	NULL	-1683400237	1683400285	48.0	-3366800522	1.0	-15601.0	NULL	-1.683415886E9	0.0289375	-5582.0	-15601	NULL
-NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-57.0	-1057361026	15601	NULL	NULL	-1057360969	1057361026	57.0	-2114721995	1.0	-15601.0	NULL	-1.057376627E9	0.02436842105263158	-3251.0	-15601	NULL
-NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-62.0	-1726415169	15601	NULL	NULL	-1726415107	1726415169	62.0	-3452830276	1.0	-15601.0	NULL	-1.72643077E9	0.022403225806451613	-8509.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-64.0	-1809291815	15601	NULL	NULL	-1809291751	1809291815	64.0	-3618583566	1.0	-15601.0	NULL	-1.809307416E9	0.021703125	-12643.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-63.0	-1996001975	15601	NULL	NULL	-1996001912	1996001975	63.0	-3992003887	1.0	-15601.0	NULL	-1.996017576E9	0.02204761904761905	-10035.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-63.0	-1574729892	15601	NULL	NULL	-1574729829	1574729892	63.0	-3149459721	1.0	-15601.0	NULL	-1.574745493E9	0.02204761904761905	-11755.0	-15601	NULL
 NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-63.0	-1167054574	15601	NULL	NULL	-1167054511	1167054574	63.0	-2334109085	1.0	-15601.0	NULL	-1.167070175E9	0.02204761904761905	-6168.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-44.0	-1551649760	15601	NULL	NULL	-1551649716	1551649760	44.0	-3103299476	1.0	-15601.0	NULL	-1.551665361E9	0.03156818181818182	-5502.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-45.0	-1022657523	15601	NULL	NULL	-1022657478	1022657523	45.0	-2045315001	1.0	-15601.0	NULL	-1.022673124E9	0.030866666666666667	-11973.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-45.0	-1291025659	15601	NULL	NULL	-1291025614	1291025659	45.0	-2582051273	1.0	-15601.0	NULL	-1.29104126E9	0.030866666666666667	-11707.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-45.0	-831227593	15601	NULL	NULL	-831227548	831227593	45.0	-1662455141	1.0	-15601.0	NULL	-8.31243194E8	0.030866666666666667	-6313.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-46.0	-208932264	15601	NULL	NULL	-208932218	208932264	46.0	-417864482	1.0	-15601.0	NULL	-2.08947865E8	0.030195652173913044	-3672.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-46.0	-468932050	15601	NULL	NULL	-468932004	468932050	46.0	-937864054	1.0	-15601.0	NULL	-4.68947651E8	0.030195652173913044	-12793.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-47.0	-436916225	15601	NULL	NULL	-436916178	436916225	47.0	-873832403	1.0	-15601.0	NULL	-4.36931826E8	0.029553191489361703	-10220.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-47.0	-493471535	15601	NULL	NULL	-493471488	493471535	47.0	-986943023	1.0	-15601.0	NULL	-4.93487136E8	0.029553191489361703	-11905.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-1228417392	15601	NULL	NULL	-1228417344	1228417392	48.0	-2456834736	1.0	-15601.0	NULL	-1.228432993E9	0.0289375	-10253.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-1294837001	15601	NULL	NULL	-1294836953	1294837001	48.0	-2589673954	1.0	-15601.0	NULL	-1.294852602E9	0.0289375	-804.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-1427685796	15601	NULL	NULL	-1427685748	1427685796	48.0	-2855371544	1.0	-15601.0	NULL	-1.427701397E9	0.0289375	-7084.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-803222928	15601	NULL	NULL	-803222880	803222928	48.0	-1606445808	1.0	-15601.0	NULL	-8.03238529E8	0.0289375	-5443.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-49.0	-1841324115	15601	NULL	NULL	-1841324066	1841324115	49.0	-3682648181	1.0	-15601.0	NULL	-1.841339716E9	0.028346938775510203	-489.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-49.0	-230127703	15601	NULL	NULL	-230127654	230127703	49.0	-460255357	1.0	-15601.0	NULL	-2.30143304E8	0.028346938775510203	-12953.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-50.0	-596103241	15601	NULL	NULL	-596103191	596103241	50.0	-1192206432	1.0	-15601.0	NULL	-5.96118842E8	0.02778	-4632.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-51.0	-546830045	15601	NULL	NULL	-546829994	546830045	51.0	-1093660039	1.0	-15601.0	NULL	-5.46845646E8	0.02723529411764706	-14995.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-52.0	-2097289702	15601	NULL	NULL	-2097289650	2097289702	52.0	-4194579352	1.0	-15601.0	NULL	-2.097305303E9	0.02671153846153846	-469.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-52.0	-886068046	15601	NULL	NULL	-886067994	886068046	52.0	-1772136040	1.0	-15601.0	NULL	-8.86083647E8	0.02671153846153846	-9251.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-54.0	-1114169807	15601	NULL	NULL	-1114169753	1114169807	54.0	-2228339560	1.0	-15601.0	NULL	-1.114185408E9	0.025722222222222223	-8791.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-54.0	-1754189160	15601	NULL	NULL	-1754189106	1754189160	54.0	-3508378266	1.0	-15601.0	NULL	-1.754204761E9	0.025722222222222223	-12720.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-54.0	-989710558	15601	NULL	NULL	-989710504	989710558	54.0	-1979421062	1.0	-15601.0	NULL	-9.89726159E8	0.025722222222222223	-14320.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-56.0	-1105322173	15601	NULL	NULL	-1105322117	1105322173	56.0	-2210644290	1.0	-15601.0	NULL	-1.105337774E9	0.02480357142857143	-6924.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-56.0	-1466363382	15601	NULL	NULL	-1466363326	1466363382	56.0	-2932726708	1.0	-15601.0	NULL	-1.466378983E9	0.02480357142857143	-9791.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-56.0	-865054294	15601	NULL	NULL	-865054238	865054294	56.0	-1730108532	1.0	-15601.0	NULL	-8.65069895E8	0.02480357142857143	-10046.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-1698345590	15601	NULL	NULL	-1698345533	1698345590	57.0	-3396691123	1.0	-15601.0	NULL	-1.698361191E9	0.02436842105263158	-5129.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-2123576095	15601	NULL	NULL	-2123576038	2123576095	57.0	-4247152133	1.0	-15601.0	NULL	-2.123591696E9	0.02436842105263158	-14778.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-304247740	15601	NULL	NULL	-304247683	304247740	57.0	-608495423	1.0	-15601.0	NULL	-3.04263341E8	0.02436842105263158	-12639.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-365505703	15601	NULL	NULL	-365505646	365505703	57.0	-731011349	1.0	-15601.0	NULL	-3.65521304E8	0.02436842105263158	-5475.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-59.0	-2021724111	15601	NULL	NULL	-2021724052	2021724111	59.0	-4043448163	1.0	-15601.0	NULL	-2.021739712E9	0.02354237288135593	-6122.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-60.0	-1016256928	15601	NULL	NULL	-1016256868	1016256928	60.0	-2032513796	1.0	-15601.0	NULL	-1.016272529E9	0.02315	-7788.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-63.0	-721244708	15601	NULL	NULL	-721244645	721244708	63.0	-1442489353	1.0	-15601.0	NULL	-7.21260309E8	0.02204761904761905	-10478.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-63.0	-200542601	15601	NULL	NULL	-200542538	200542601	63.0	-401085139	1.0	-15601.0	NULL	-2.00558202E8	0.02204761904761905	-7347.0	-15601	NULL
+NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-62.0	-1726415169	15601	NULL	NULL	-1726415107	1726415169	62.0	-3452830276	1.0	-15601.0	NULL	-1.72643077E9	0.022403225806451613	-8509.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-62.0	-1592016120	15601	NULL	NULL	-1592016058	1592016120	62.0	-3184032178	1.0	-15601.0	NULL	-1.592031721E9	0.022403225806451613	-12075.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-62.0	667693308	15601	NULL	NULL	667693370	-667693308	62.0	1335386678	1.0	-15601.0	NULL	6.67677707E8	0.022403225806451613	1710.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-61.0	-1022679553	15601	NULL	NULL	-1022679492	1022679553	61.0	-2045359045	1.0	-15601.0	NULL	-1.022695154E9	0.02277049180327869	-2801.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-61.0	-982179838	15601	NULL	NULL	-982179777	982179838	61.0	-1964359615	1.0	-15601.0	NULL	-9.82195439E8	0.02277049180327869	-3282.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-61.0	-854893578	15601	NULL	NULL	-854893517	854893578	61.0	-1709787095	1.0	-15601.0	NULL	-8.54909179E8	0.02277049180327869	-5581.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-60.0	-2041965187	15601	NULL	NULL	-2041965127	2041965187	60.0	-4083930314	1.0	-15601.0	NULL	-2.041980788E9	0.02315	-12701.0	-15601	NULL
 NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-60.0	-1743144280	15601	NULL	NULL	-1743144220	1743144280	60.0	-3486288500	1.0	-15601.0	NULL	-1.743159881E9	0.02315	-13348.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-60.0	-1016256928	15601	NULL	NULL	-1016256868	1016256928	60.0	-2032513796	1.0	-15601.0	NULL	-1.016272529E9	0.02315	-7788.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-60.0	-903925845	15601	NULL	NULL	-903925785	903925845	60.0	-1807851630	1.0	-15601.0	NULL	-9.03941446E8	0.02315	-3905.0	-15601	NULL
 NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-60.0	-519753851	15601	NULL	NULL	-519753791	519753851	60.0	-1039507642	1.0	-15601.0	NULL	-5.19769452E8	0.02315	-6536.0	-15601	NULL
 NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-60.0	-5953872	15601	NULL	NULL	-5953812	5953872	60.0	-11907684	1.0	-15601.0	NULL	-5969473.0	0.02315	-9891.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-61.0	-982179838	15601	NULL	NULL	-982179777	982179838	61.0	-1964359615	1.0	-15601.0	NULL	-9.82195439E8	0.02277049180327869	-3282.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-63.0	-1574729892	15601	NULL	NULL	-1574729829	1574729892	63.0	-3149459721	1.0	-15601.0	NULL	-1.574745493E9	0.02204761904761905	-11755.0	-15601	NULL
-NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-63.0	-1996001975	15601	NULL	NULL	-1996001912	1996001975	63.0	-3992003887	1.0	-15601.0	NULL	-1.996017576E9	0.02204761904761905	-10035.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-44.0	-1447719201	15601	NULL	NULL	-1447719157	1447719201	44.0	-2895438358	1.0	-15601.0	NULL	-1.447734802E9	0.03156818181818182	-8805.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-47.0	-1828371599	15601	NULL	NULL	-1828371552	1828371599	47.0	-3656743151	1.0	-15601.0	NULL	-1.8283872E9	0.029553191489361703	-12404.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-48.0	-1465907371	15601	NULL	NULL	-1465907323	1465907371	48.0	-2931814694	1.0	-15601.0	NULL	-1.465922972E9	0.0289375	-6209.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-48.0	-1666377780	15601	NULL	NULL	-1666377732	1666377780	48.0	-3332755512	1.0	-15601.0	NULL	-1.666393381E9	0.0289375	-3768.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-48.0	-652336471	15601	NULL	NULL	-652336423	652336471	48.0	-1304672894	1.0	-15601.0	NULL	-6.52352072E8	0.0289375	-11858.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-197652849	15601	NULL	NULL	-197652800	197652849	49.0	-395305649	1.0	-15601.0	NULL	-1.9766845E8	0.028346938775510203	-3780.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-211726367	15601	NULL	NULL	-211726318	211726367	49.0	-423452685	1.0	-15601.0	NULL	-2.11741968E8	0.028346938775510203	-5196.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-57200424	15601	NULL	NULL	-57200375	57200424	49.0	-114400799	1.0	-15601.0	NULL	-5.7216025E7	0.028346938775510203	-7158.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-668597606	15601	NULL	NULL	-668597557	668597606	49.0	-1337195163	1.0	-15601.0	NULL	-6.68613207E8	0.028346938775510203	-1150.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-990904667	15601	NULL	NULL	-990904618	990904667	49.0	-1981809285	1.0	-15601.0	NULL	-9.90920268E8	0.028346938775510203	-7152.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-50.0	-458110015	15601	NULL	NULL	-458109965	458110015	50.0	-916219980	1.0	-15601.0	NULL	-4.58125616E8	0.02778	-2251.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-52.0	-2074134645	15601	NULL	NULL	-2074134593	2074134645	52.0	-4148269238	1.0	-15601.0	NULL	-2.074150246E9	0.02671153846153846	-12897.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-54.0	-1795674990	15601	NULL	NULL	-1795674936	1795674990	54.0	-3591349926	1.0	-15601.0	NULL	-1.795690591E9	0.025722222222222223	-15491.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-54.0	-1984659810	15601	NULL	NULL	-1984659756	1984659810	54.0	-3969319566	1.0	-15601.0	NULL	-1.984675411E9	0.025722222222222223	-9797.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-54.0	-641670659	15601	NULL	NULL	-641670605	641670659	54.0	-1283341264	1.0	-15601.0	NULL	-6.4168626E8	0.025722222222222223	-1529.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-55.0	-1062767051	15601	NULL	NULL	-1062766996	1062767051	55.0	-2125534047	1.0	-15601.0	NULL	-1.062782652E9	0.025254545454545453	-11330.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-55.0	-1338667765	15601	NULL	NULL	-1338667710	1338667765	55.0	-2677335475	1.0	-15601.0	NULL	-1.338683366E9	0.025254545454545453	-8359.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-55.0	-1483320156	15601	NULL	NULL	-1483320101	1483320156	55.0	-2966640257	1.0	-15601.0	NULL	-1.483335757E9	0.025254545454545453	-8278.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-56.0	-1683701844	15601	NULL	NULL	-1683701788	1683701844	56.0	-3367403632	1.0	-15601.0	NULL	-1.683717445E9	0.02480357142857143	-10722.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-56.0	-971846497	15601	NULL	NULL	-971846441	971846497	56.0	-1943692938	1.0	-15601.0	NULL	-9.71862098E8	0.02480357142857143	-13404.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-57.0	-585350546	15601	NULL	NULL	-585350489	585350546	57.0	-1170701035	1.0	-15601.0	NULL	-5.85366147E8	0.02436842105263158	-1026.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-58.0	-1072335429	15601	NULL	NULL	-1072335371	1072335429	58.0	-2144670800	1.0	-15601.0	NULL	-1.07235103E9	0.023948275862068966	-694.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-58.0	-1560616588	15601	NULL	NULL	-1560616530	1560616588	58.0	-3121233118	1.0	-15601.0	NULL	-1.560632189E9	0.023948275862068966	-1755.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-59.0	-2021724111	15601	NULL	NULL	-2021724052	2021724111	59.0	-4043448163	1.0	-15601.0	NULL	-2.021739712E9	0.02354237288135593	-6122.0	-15601	NULL
 NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-59.0	-1315413812	15601	NULL	NULL	-1315413753	1315413812	59.0	-2630827565	1.0	-15601.0	NULL	-1.315429413E9	0.02354237288135593	-15497.0	-15601	NULL
 NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-59.0	-133287350	15601	NULL	NULL	-133287291	133287350	59.0	-266574641	1.0	-15601.0	NULL	-1.33302951E8	0.02354237288135593	-8007.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-60.0	-2041965187	15601	NULL	NULL	-2041965127	2041965187	60.0	-4083930314	1.0	-15601.0	NULL	-2.041980788E9	0.02315	-12701.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-60.0	-903925845	15601	NULL	NULL	-903925785	903925845	60.0	-1807851630	1.0	-15601.0	NULL	-9.03941446E8	0.02315	-3905.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-61.0	-1022679553	15601	NULL	NULL	-1022679492	1022679553	61.0	-2045359045	1.0	-15601.0	NULL	-1.022695154E9	0.02277049180327869	-2801.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-61.0	-854893578	15601	NULL	NULL	-854893517	854893578	61.0	-1709787095	1.0	-15601.0	NULL	-8.54909179E8	0.02277049180327869	-5581.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-62.0	-1592016120	15601	NULL	NULL	-1592016058	1592016120	62.0	-3184032178	1.0	-15601.0	NULL	-1.592031721E9	0.022403225806451613	-12075.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-62.0	667693308	15601	NULL	NULL	667693370	-667693308	62.0	1335386678	1.0	-15601.0	NULL	6.67677707E8	0.022403225806451613	1710.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-63.0	-200542601	15601	NULL	NULL	-200542538	200542601	63.0	-401085139	1.0	-15601.0	NULL	-2.00558202E8	0.02204761904761905	-7347.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-63.0	-721244708	15601	NULL	NULL	-721244645	721244708	63.0	-1442489353	1.0	-15601.0	NULL	-7.21260309E8	0.02204761904761905	-10478.0	-15601	NULL
-NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-64.0	-1809291815	15601	NULL	NULL	-1809291751	1809291815	64.0	-3618583566	1.0	-15601.0	NULL	-1.809307416E9	0.021703125	-12643.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-58.0	-1560616588	15601	NULL	NULL	-1560616530	1560616588	58.0	-3121233118	1.0	-15601.0	NULL	-1.560632189E9	0.023948275862068966	-1755.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-58.0	-1072335429	15601	NULL	NULL	-1072335371	1072335429	58.0	-2144670800	1.0	-15601.0	NULL	-1.07235103E9	0.023948275862068966	-694.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-2123576095	15601	NULL	NULL	-2123576038	2123576095	57.0	-4247152133	1.0	-15601.0	NULL	-2.123591696E9	0.02436842105263158	-14778.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-1698345590	15601	NULL	NULL	-1698345533	1698345590	57.0	-3396691123	1.0	-15601.0	NULL	-1.698361191E9	0.02436842105263158	-5129.0	-15601	NULL
+NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-57.0	-1057361026	15601	NULL	NULL	-1057360969	1057361026	57.0	-2114721995	1.0	-15601.0	NULL	-1.057376627E9	0.02436842105263158	-3251.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-57.0	-585350546	15601	NULL	NULL	-585350489	585350546	57.0	-1170701035	1.0	-15601.0	NULL	-5.85366147E8	0.02436842105263158	-1026.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-365505703	15601	NULL	NULL	-365505646	365505703	57.0	-731011349	1.0	-15601.0	NULL	-3.65521304E8	0.02436842105263158	-5475.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-57.0	-304247740	15601	NULL	NULL	-304247683	304247740	57.0	-608495423	1.0	-15601.0	NULL	-3.04263341E8	0.02436842105263158	-12639.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-56.0	-1683701844	15601	NULL	NULL	-1683701788	1683701844	56.0	-3367403632	1.0	-15601.0	NULL	-1.683717445E9	0.02480357142857143	-10722.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-56.0	-1466363382	15601	NULL	NULL	-1466363326	1466363382	56.0	-2932726708	1.0	-15601.0	NULL	-1.466378983E9	0.02480357142857143	-9791.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-56.0	-1105322173	15601	NULL	NULL	-1105322117	1105322173	56.0	-2210644290	1.0	-15601.0	NULL	-1.105337774E9	0.02480357142857143	-6924.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-56.0	-971846497	15601	NULL	NULL	-971846441	971846497	56.0	-1943692938	1.0	-15601.0	NULL	-9.71862098E8	0.02480357142857143	-13404.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-56.0	-865054294	15601	NULL	NULL	-865054238	865054294	56.0	-1730108532	1.0	-15601.0	NULL	-8.65069895E8	0.02480357142857143	-10046.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-55.0	-1483320156	15601	NULL	NULL	-1483320101	1483320156	55.0	-2966640257	1.0	-15601.0	NULL	-1.483335757E9	0.025254545454545453	-8278.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-55.0	-1338667765	15601	NULL	NULL	-1338667710	1338667765	55.0	-2677335475	1.0	-15601.0	NULL	-1.338683366E9	0.025254545454545453	-8359.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-55.0	-1062767051	15601	NULL	NULL	-1062766996	1062767051	55.0	-2125534047	1.0	-15601.0	NULL	-1.062782652E9	0.025254545454545453	-11330.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-54.0	-1984659810	15601	NULL	NULL	-1984659756	1984659810	54.0	-3969319566	1.0	-15601.0	NULL	-1.984675411E9	0.025722222222222223	-9797.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-54.0	-1795674990	15601	NULL	NULL	-1795674936	1795674990	54.0	-3591349926	1.0	-15601.0	NULL	-1.795690591E9	0.025722222222222223	-15491.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-54.0	-1754189160	15601	NULL	NULL	-1754189106	1754189160	54.0	-3508378266	1.0	-15601.0	NULL	-1.754204761E9	0.025722222222222223	-12720.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-54.0	-1114169807	15601	NULL	NULL	-1114169753	1114169807	54.0	-2228339560	1.0	-15601.0	NULL	-1.114185408E9	0.025722222222222223	-8791.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-54.0	-989710558	15601	NULL	NULL	-989710504	989710558	54.0	-1979421062	1.0	-15601.0	NULL	-9.89726159E8	0.025722222222222223	-14320.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-54.0	-641670659	15601	NULL	NULL	-641670605	641670659	54.0	-1283341264	1.0	-15601.0	NULL	-6.4168626E8	0.025722222222222223	-1529.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-52.0	-2097289702	15601	NULL	NULL	-2097289650	2097289702	52.0	-4194579352	1.0	-15601.0	NULL	-2.097305303E9	0.02671153846153846	-469.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-52.0	-2074134645	15601	NULL	NULL	-2074134593	2074134645	52.0	-4148269238	1.0	-15601.0	NULL	-2.074150246E9	0.02671153846153846	-12897.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-52.0	-886068046	15601	NULL	NULL	-886067994	886068046	52.0	-1772136040	1.0	-15601.0	NULL	-8.86083647E8	0.02671153846153846	-9251.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-51.0	-546830045	15601	NULL	NULL	-546829994	546830045	51.0	-1093660039	1.0	-15601.0	NULL	-5.46845646E8	0.02723529411764706	-14995.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-50.0	-596103241	15601	NULL	NULL	-596103191	596103241	50.0	-1192206432	1.0	-15601.0	NULL	-5.96118842E8	0.02778	-4632.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-50.0	-458110015	15601	NULL	NULL	-458109965	458110015	50.0	-916219980	1.0	-15601.0	NULL	-4.58125616E8	0.02778	-2251.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-49.0	-1841324115	15601	NULL	NULL	-1841324066	1841324115	49.0	-3682648181	1.0	-15601.0	NULL	-1.841339716E9	0.028346938775510203	-489.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-990904667	15601	NULL	NULL	-990904618	990904667	49.0	-1981809285	1.0	-15601.0	NULL	-9.90920268E8	0.028346938775510203	-7152.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-668597606	15601	NULL	NULL	-668597557	668597606	49.0	-1337195163	1.0	-15601.0	NULL	-6.68613207E8	0.028346938775510203	-1150.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-49.0	-230127703	15601	NULL	NULL	-230127654	230127703	49.0	-460255357	1.0	-15601.0	NULL	-2.30143304E8	0.028346938775510203	-12953.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-211726367	15601	NULL	NULL	-211726318	211726367	49.0	-423452685	1.0	-15601.0	NULL	-2.11741968E8	0.028346938775510203	-5196.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-197652849	15601	NULL	NULL	-197652800	197652849	49.0	-395305649	1.0	-15601.0	NULL	-1.9766845E8	0.028346938775510203	-3780.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-49.0	-57200424	15601	NULL	NULL	-57200375	57200424	49.0	-114400799	1.0	-15601.0	NULL	-5.7216025E7	0.028346938775510203	-7158.0	-15601	NULL
+NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-48.0	-1683400285	15601	NULL	NULL	-1683400237	1683400285	48.0	-3366800522	1.0	-15601.0	NULL	-1.683415886E9	0.0289375	-5582.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-48.0	-1666377780	15601	NULL	NULL	-1666377732	1666377780	48.0	-3332755512	1.0	-15601.0	NULL	-1.666393381E9	0.0289375	-3768.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-48.0	-1465907371	15601	NULL	NULL	-1465907323	1465907371	48.0	-2931814694	1.0	-15601.0	NULL	-1.465922972E9	0.0289375	-6209.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-1427685796	15601	NULL	NULL	-1427685748	1427685796	48.0	-2855371544	1.0	-15601.0	NULL	-1.427701397E9	0.0289375	-7084.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-1294837001	15601	NULL	NULL	-1294836953	1294837001	48.0	-2589673954	1.0	-15601.0	NULL	-1.294852602E9	0.0289375	-804.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-1228417392	15601	NULL	NULL	-1228417344	1228417392	48.0	-2456834736	1.0	-15601.0	NULL	-1.228432993E9	0.0289375	-10253.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-48.0	-803222928	15601	NULL	NULL	-803222880	803222928	48.0	-1606445808	1.0	-15601.0	NULL	-8.03238529E8	0.0289375	-5443.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-48.0	-652336471	15601	NULL	NULL	-652336423	652336471	48.0	-1304672894	1.0	-15601.0	NULL	-6.52352072E8	0.0289375	-11858.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-47.0	-1828371599	15601	NULL	NULL	-1828371552	1828371599	47.0	-3656743151	1.0	-15601.0	NULL	-1.8283872E9	0.029553191489361703	-12404.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-47.0	-493471535	15601	NULL	NULL	-493471488	493471535	47.0	-986943023	1.0	-15601.0	NULL	-4.93487136E8	0.029553191489361703	-11905.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-47.0	-436916225	15601	NULL	NULL	-436916178	436916225	47.0	-873832403	1.0	-15601.0	NULL	-4.36931826E8	0.029553191489361703	-10220.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-46.0	-468932050	15601	NULL	NULL	-468932004	468932050	46.0	-937864054	1.0	-15601.0	NULL	-4.68947651E8	0.030195652173913044	-12793.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-46.0	-208932264	15601	NULL	NULL	-208932218	208932264	46.0	-417864482	1.0	-15601.0	NULL	-2.08947865E8	0.030195652173913044	-3672.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-45.0	-1291025659	15601	NULL	NULL	-1291025614	1291025659	45.0	-2582051273	1.0	-15601.0	NULL	-1.29104126E9	0.030866666666666667	-11707.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-45.0	-1022657523	15601	NULL	NULL	-1022657478	1022657523	45.0	-2045315001	1.0	-15601.0	NULL	-1.022673124E9	0.030866666666666667	-11973.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-45.0	-831227593	15601	NULL	NULL	-831227548	831227593	45.0	-1662455141	1.0	-15601.0	NULL	-8.31243194E8	0.030866666666666667	-6313.0	-15601	NULL
+NULL	NULL	false	1969-12-31 15:59:58.456	15601.0	-44.0	-1551649760	15601	NULL	NULL	-1551649716	1551649760	44.0	-3103299476	1.0	-15601.0	NULL	-1.551665361E9	0.03156818181818182	-5502.0	-15601	NULL
+NULL	NULL	true	1969-12-31 15:59:58.456	15601.0	-44.0	-1447719201	15601	NULL	NULL	-1447719157	1447719201	44.0	-2895438358	1.0	-15601.0	NULL	-1.447734802E9	0.03156818181818182	-8805.0	-15601	NULL
+NULL	NULL	NULL	1969-12-31 15:59:58.456	15601.0	-44.0	-1416000760	15601	NULL	NULL	-1416000716	1416000760	44.0	-2832001476	1.0	-15601.0	NULL	-1.416016361E9	0.03156818181818182	-7197.0	-15601	NULL
 WARNING: Comparing a bigint and a double may result in a loss of precision.
 PREHOOK: query: -- TargetTypeClasses: Long, String, Double, Timestamp
 -- Functions: Avg, Min, StDevP, Sum, Var
@@ -1600,16 +1598,16 @@ EXPLAIN SELECT   ctimestamp1,
          cfloat,
          cbigint,
          csmallint,
-         (cbigint / 3569) as c1,
-         (-257 - csmallint) as c2,
-         (-6432 * cfloat) as c3,
-         (-(cdouble)) as c4,
-         (cdouble * 10.175) as c5,
-         ((-6432 * cfloat) / cfloat) as c6,
-         (-(cfloat)) as c7,
-         (cint % csmallint) as c8,
-         (-(cdouble)) as c9,
-         (cdouble * (-(cdouble))) as c10
+         (cbigint / 3569),
+         (-257 - csmallint),
+         (-6432 * cfloat),
+         (-(cdouble)),
+         (cdouble * 10.175),
+         ((-6432 * cfloat) / cfloat),
+         (-(cfloat)),
+         (cint % csmallint),
+         (-(cdouble)),
+         (cdouble * (-(cdouble)))
 FROM     alltypesorc
 WHERE    (((-1.389 >= cint)
            AND ((csmallint < ctinyint)
@@ -1618,7 +1616,7 @@ WHERE    (((-1.389 >= cint)
               AND (cstring2 <= 'a'))
              OR ((cstring1 LIKE 'ss%')
                  AND (10.175 > cbigint)))
-ORDER BY csmallint, cstring2, cdouble, cfloat, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint, cstring2, cdouble
 LIMIT 45
 PREHOOK: type: QUERY
 POSTHOOK: query: -- TargetTypeClasses: Long, String, Double, Timestamp
@@ -1632,16 +1630,16 @@ EXPLAIN SELECT   ctimestamp1,
          cfloat,
          cbigint,
          csmallint,
-         (cbigint / 3569) as c1,
-         (-257 - csmallint) as c2,
-         (-6432 * cfloat) as c3,
-         (-(cdouble)) as c4,
-         (cdouble * 10.175) as c5,
-         ((-6432 * cfloat) / cfloat) as c6,
-         (-(cfloat)) as c7,
-         (cint % csmallint) as c8,
-         (-(cdouble)) as c9,
-         (cdouble * (-(cdouble))) as c10
+         (cbigint / 3569),
+         (-257 - csmallint),
+         (-6432 * cfloat),
+         (-(cdouble)),
+         (cdouble * 10.175),
+         ((-6432 * cfloat) / cfloat),
+         (-(cfloat)),
+         (cint % csmallint),
+         (-(cdouble)),
+         (cdouble * (-(cdouble)))
 FROM     alltypesorc
 WHERE    (((-1.389 >= cint)
            AND ((csmallint < ctinyint)
@@ -1650,7 +1648,7 @@ WHERE    (((-1.389 >= cint)
               AND (cstring2 <= 'a'))
              OR ((cstring1 LIKE 'ss%')
                  AND (10.175 > cbigint)))
-ORDER BY csmallint, cstring2, cdouble, cfloat, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint, cstring2, cdouble
 LIMIT 45
 POSTHOOK: type: QUERY
 STAGE DEPENDENCIES:
@@ -1670,22 +1668,22 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: (((-1.389 >= UDFToDouble(cint)) and (csmallint < UDFToShort(ctinyint)) and (-6432 > UDFToInteger(csmallint))) or ((cdouble >= UDFToDouble(cfloat)) and (cstring2 <= 'a')) or ((cstring1 like 'ss%') and (10.175 > UDFToDouble(cbigint)))) (type: boolean)
+                    predicate: ((((-1.389 >= cint) and ((csmallint < ctinyint) and (-6432 > csmallint))) or ((cdouble >= cfloat) and (cstring2 <= 'a'))) or ((cstring1 like 'ss%') and (10.175 > cbigint))) (type: boolean)
                     Statistics: Num rows: 3868 Data size: 118746 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: ctimestamp1 (type: timestamp), cstring2 (type: string), cdouble (type: double), cfloat (type: float), cbigint (type: bigint), csmallint (type: smallint), (UDFToDouble(cbigint) / 3569.0) (type: double), (-257 - UDFToInteger(csmallint)) (type: int), (-6432.0 * cfloat) (type: float), (- cdouble) (type: double), (cdouble * 10.175) (type: double), (UDFToDouble((-6432.0 * cfloat)) / UDFToDouble(cfloat)) (type: double), (- cfloat) (type: float), (cint % UDFToInteger(csmallint)) (type: int), (- cdouble) (type: double), (cdouble * (- cdouble)) (type: double)
-                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15
+                      expressions: ctimestamp1 (type: timestamp), cstring2 (type: string), (cdouble * 10.175) (type: double), ((-6432 * cfloat) / cfloat) (type: double), (- cfloat) (type: float), (cint % csmallint) (type: int), (cdouble * (- cdouble)) (type: double), cdouble (type: double), cfloat (type: float), cbigint (type: bigint), csmallint (type: smallint), (cbigint / 3569) (type: double), (-257 - csmallint) (type: int), (-6432 * cfloat) (type: float), (- cdouble) (type: double)
+                      outputColumnNames: _col0, _col1, _col10, _col11, _col12, _col13, _col15, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                       Statistics: Num rows: 3868 Data size: 118746 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: _col5 (type: smallint), _col1 (type: string), _col2 (type: double), _col3 (type: float), _col4 (type: bigint), _col6 (type: double), _col7 (type: int), _col8 (type: float), _col9 (type: double), _col10 (type: double), _col11 (type: double), _col12 (type: float), _col13 (type: int), _col14 (type: double), _col15 (type: double)
-                        sort order: +++++++++++++++
+                        key expressions: _col5 (type: smallint), _col1 (type: string), _col2 (type: double)
+                        sort order: +++
                         Statistics: Num rows: 3868 Data size: 118746 Basic stats: COMPLETE Column stats: NONE
-                        value expressions: _col0 (type: timestamp)
+                        value expressions: _col0 (type: timestamp), _col3 (type: float), _col4 (type: bigint), _col6 (type: double), _col7 (type: int), _col8 (type: float), _col9 (type: double), _col10 (type: double), _col11 (type: double), _col12 (type: float), _col13 (type: int), _col15 (type: double)
             Execution mode: vectorized
         Reducer 2 
             Reduce Operator Tree:
               Select Operator
-                expressions: VALUE._col0 (type: timestamp), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: double), KEY.reducesinkkey3 (type: float), KEY.reducesinkkey4 (type: bigint), KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey5 (type: double), KEY.reducesinkkey6 (type: int), KEY.reducesinkkey7 (type: float), KEY.reducesinkkey8 (type: double), KEY.reducesinkkey9 (type: double), KEY.reducesinkkey10 (type: double), KEY.reducesinkkey11 (type: float), KEY.reducesinkkey12 (type: int), KEY.reducesinkkey8 (type: double), KEY.reducesinkkey14 (type: double)
+                expressions: VALUE._col0 (type: timestamp), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: double), VALUE._col1 (type: float), VALUE._col2 (type: bigint), KEY.reducesinkkey0 (type: smallint), VALUE._col3 (type: double), VALUE._col4 (type: int), VALUE._col5 (type: float), VALUE._col6 (type: double), VALUE._col7 (type: double), VALUE._col8 (type: double), VALUE._col9 (type: float), VALUE._col10 (type: int), VALUE._col6 (type: double), VALUE._col11 (type: double)
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15
                 Statistics: Num rows: 3868 Data size: 118746 Basic stats: COMPLETE Column stats: NONE
                 Limit
@@ -1713,16 +1711,16 @@ PREHOOK: query: SELECT   ctimestamp1,
          cfloat,
          cbigint,
          csmallint,
-         (cbigint / 3569) as c1,
-         (-257 - csmallint) as c2,
-         (-6432 * cfloat) as c3,
-         (-(cdouble)) as c4,
-         (cdouble * 10.175) as c5,
-         ((-6432 * cfloat) / cfloat) as c6,
-         (-(cfloat)) as c7,
-         (cint % csmallint) as c8,
-         (-(cdouble)) as c9,
-         (cdouble * (-(cdouble))) as c10
+         (cbigint / 3569),
+         (-257 - csmallint),
+         (-6432 * cfloat),
+         (-(cdouble)),
+         (cdouble * 10.175),
+         ((-6432 * cfloat) / cfloat),
+         (-(cfloat)),
+         (cint % csmallint),
+         (-(cdouble)),
+         (cdouble * (-(cdouble)))
 FROM     alltypesorc
 WHERE    (((-1.389 >= cint)
            AND ((csmallint < ctinyint)
@@ -1731,7 +1729,7 @@ WHERE    (((-1.389 >= cint)
               AND (cstring2 <= 'a'))
              OR ((cstring1 LIKE 'ss%')
                  AND (10.175 > cbigint)))
-ORDER BY csmallint, cstring2, cdouble, cfloat, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint, cstring2, cdouble
 LIMIT 45
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
@@ -1742,16 +1740,16 @@ POSTHOOK: query: SELECT   ctimestamp1,
          cfloat,
          cbigint,
          csmallint,
-         (cbigint / 3569) as c1,
-         (-257 - csmallint) as c2,
-         (-6432 * cfloat) as c3,
-         (-(cdouble)) as c4,
-         (cdouble * 10.175) as c5,
-         ((-6432 * cfloat) / cfloat) as c6,
-         (-(cfloat)) as c7,
-         (cint % csmallint) as c8,
-         (-(cdouble)) as c9,
-         (cdouble * (-(cdouble))) as c10
+         (cbigint / 3569),
+         (-257 - csmallint),
+         (-6432 * cfloat),
+         (-(cdouble)),
+         (cdouble * 10.175),
+         ((-6432 * cfloat) / cfloat),
+         (-(cfloat)),
+         (cint % csmallint),
+         (-(cdouble)),
+         (cdouble * (-(cdouble)))
 FROM     alltypesorc
 WHERE    (((-1.389 >= cint)
            AND ((csmallint < ctinyint)
@@ -1760,79 +1758,79 @@ WHERE    (((-1.389 >= cint)
               AND (cstring2 <= 'a'))
              OR ((cstring1 LIKE 'ss%')
                  AND (10.175 > cbigint)))
-ORDER BY csmallint, cstring2, cdouble, cfloat, cbigint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint, cstring2, cdouble
 LIMIT 45
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-1969-12-31 15:59:44.115	0p6665Ys81o1ITrC5DSoHV	15601.0	-20.0	-258993110	15601	-72567.41664331745	-15858	128640.0	-15601.0	158740.17500000002	-6432.0	20.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:44.661	10mF5gYR5Fey1vTEHx	15601.0	25.0	-2030132877	15601	-568824.0058840011	-15858	-160800.0	-15601.0	158740.17500000002	-6432.0	-25.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:45.655	0QVeMpE1JOCOS1427vP47tk0	15601.0	-23.0	649202618	15601	181900.4253292239	-15858	147936.0	-15601.0	158740.17500000002	-6432.0	23.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:46.258	0E6V6dPe00Ort5Ia6Ha8	15601.0	-26.0	1351243372	15601	378605.5959652564	-15858	167232.0	-15601.0	158740.17500000002	-6432.0	26.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:46.33	0e8O8CeLi	15601.0	24.0	-1740312484	15601	-487619.0764920146	-15858	-154368.0	-15601.0	158740.17500000002	-6432.0	-24.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:46.351	155506i0h358vma3m1tGku	15601.0	-57.0	1328883886	15601	372340.6797422247	-15858	366624.0	-15601.0	158740.17500000002	-6432.0	57.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:08.451	rVWAj4N1MCg8Scyp7wj2C	NULL	-51.0	-89010	NULL	-24.93975903614458	NULL	328032.0	NULL	NULL	-6432.0	51.0	NULL	NULL	NULL
+NULL	4hA4KQj2vD3fI6gX82220d	477.0	NULL	-1887561756	477	-528876.9279910339	-734	NULL	-477.0	4853.475	NULL	NULL	-326	-477.0	-227529.0
+NULL	xH7445Rals48VOulSyR5F	10221.0	NULL	-1645852809	10221	-461152.37013168953	-10478	NULL	-10221.0	103998.675	NULL	NULL	5022	-10221.0	-1.04468841E8
+NULL	4hA4KQj2vD3fI6gX82220d	12329.0	NULL	-1887561756	12329	-528876.9279910339	-12586	NULL	-12329.0	125447.57500000001	NULL	NULL	-3104	-12329.0	-1.52004241E8
 1969-12-31 15:59:46.443	0034fkcXMQI3	15601.0	-43.0	-223687300	15601	-62675.06304286915	-15858	276576.0	-15601.0	158740.17500000002	-6432.0	43.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:46.82	0bsH6qR	15601.0	-46.0	-208932264	15601	-58540.8416923508	-15858	295872.0	-15601.0	158740.17500000002	-6432.0	46.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:52.778	00d5kr1wEB7evExG	15601.0	4.0	-941884962	15601	-263907.24628747546	-15858	-25728.0	-15601.0	158740.17500000002	-6432.0	-4.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:57.729	020gtq4CLjybO3F40kpyXi	15601.0	30.0	-1986754040	15601	-556669.6665732699	-15858	-192960.0	-15601.0	158740.17500000002	-6432.0	-30.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:58.704	041Ph15F	15601.0	-55.0	-1338667765	15601	-375082.02998038667	-15858	353760.0	-15601.0	158740.17500000002	-6432.0	55.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:54.253	047TAc3t6f6rU8M7Dk7Gh8	15601.0	-44.0	272368436	15601	76315.05631829644	-15858	283008.0	-15601.0	158740.17500000002	-6432.0	44.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:04.063	04XP4DrTCblC7885	15601.0	79.553	-1452617198	15601	-407009.58195572987	-15858	-511684.9	-15601.0	158740.17500000002	-6432.0	-79.553	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:09.123	064GHv0UW8	15601.0	-14.0	1007181336	15601	282202.67189688986	-15858	90048.0	-15601.0	158740.17500000002	-6432.0	14.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:05.83	06Tj8f5xNhpaiE71AWqJ7b5	15601.0	-49.0	226841234	15601	63558.76548052676	-15858	315168.0	-15601.0	158740.17500000002	-6432.0	49.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 15:59:47.436	08wTUR832pDS4Hd8O40	15601.0	-51.0	69448698	15601	19458.86746987952	-15858	328032.0	-15601.0	158740.17500000002	-6432.0	51.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:46.258	0E6V6dPe00Ort5Ia6Ha8	15601.0	-26.0	1351243372	15601	378605.5959652564	-15858	167232.0	-15601.0	158740.17500000002	-6432.0	26.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 15:59:48.552	0Ef374	15601.0	62.0	-1488190636	15601	-416976.9223872233	-15858	-398784.0	-15601.0	158740.17500000002	-6432.0	-62.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:48.71	0h046K61PUKMqHs6v4	15601.0	-30.0	1221840945	15601	342348.26141776406	-15858	192960.0	-15601.0	158740.17500000002	-6432.0	30.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:48.932	10	15601.0	16.0	NULL	15601	NULL	-15858	-102912.0	-15601.0	158740.17500000002	-6432.0	-16.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:50.575	0q1A0HR4Q8Cd6r	15601.0	29.0	-221039350	15601	-61933.132530120485	-15858	-186528.0	-15601.0	158740.17500000002	-6432.0	-29.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:51.153	0Yo1dcEr7D57no22Tiv2TXR	15601.0	-44.0	-399793337	15601	-112018.30680862987	-15858	283008.0	-15601.0	158740.17500000002	-6432.0	44.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:56.481	0IJJNV0BH	15601.0	10.0	-1230115822	15601	-344666.80358643876	-15858	-64320.0	-15601.0	158740.17500000002	-6432.0	-10.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 15:59:51.535	0JA4aw00Rkv1mSy	15601.0	55.0	-1044215393	15601	-292579.26393947884	-15858	-353760.0	-15601.0	158740.17500000002	-6432.0	-55.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:03.888	0KoLN8L6Iih8ej2sW7JF	15601.0	-23.0	-2104361963	15601	-589622.2927991034	-15858	147936.0	-15601.0	158740.17500000002	-6432.0	23.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 15:59:51.645	0ORX152g18fL0nI10TVqI	15601.0	10.0	-1043251982	15601	-292309.3253012048	-15858	-64320.0	-15601.0	158740.17500000002	-6432.0	-10.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:52.617	16NIx33qB1Thp5q	15601.0	-9.0	1660201497	15601	465172.7366209022	-15858	57888.0	-15601.0	158740.17500000002	-6432.0	9.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:52.778	00d5kr1wEB7evExG	15601.0	4.0	-941884962	15601	-263907.24628747546	-15858	-25728.0	-15601.0	158740.17500000002	-6432.0	-4.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:52.786	0to563s4g3qycP5T8	15601.0	-1.0	672512361	15601	188431.59456430373	-15858	6432.0	-15601.0	158740.17500000002	-6432.0	1.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:53.279	0vC4nYJsnNgXvL5	15601.0	-11.0	1778089631	15601	498203.87531521433	-15858	70752.0	-15601.0	158740.17500000002	-6432.0	11.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:14.175	0Q7LP3644p	15601.0	-50.0	716349726	15601	200714.40907817316	-15858	321600.0	-15601.0	158740.17500000002	-6432.0	50.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:45.655	0QVeMpE1JOCOS1427vP47tk0	15601.0	-23.0	649202618	15601	181900.4253292239	-15858	147936.0	-15601.0	158740.17500000002	-6432.0	23.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:11.928	0UugmY0R5hI	15601.0	-32.0	1701987317	15601	476880.7276548053	-15858	205824.0	-15601.0	158740.17500000002	-6432.0	32.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:51.153	0Yo1dcEr7D57no22Tiv2TXR	15601.0	-44.0	-399793337	15601	-112018.30680862987	-15858	283008.0	-15601.0	158740.17500000002	-6432.0	44.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 15:59:53.715	0aQBRP67JY0gpi	15601.0	-44.0	-75975416	15601	-21287.59204258896	-15858	283008.0	-15601.0	158740.17500000002	-6432.0	44.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:54.253	047TAc3t6f6rU8M7Dk7Gh8	15601.0	-44.0	272368436	15601	76315.05631829644	-15858	283008.0	-15601.0	158740.17500000002	-6432.0	44.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:54.384	0uO20	15601.0	-59.0	1850076369	15601	518373.87755673856	-15858	379488.0	-15601.0	158740.17500000002	-6432.0	59.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:46.82	0bsH6qR	15601.0	-46.0	-208932264	15601	-58540.8416923508	-15858	295872.0	-15601.0	158740.17500000002	-6432.0	46.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:46.33	0e8O8CeLi	15601.0	24.0	-1740312484	15601	-487619.0764920146	-15858	-154368.0	-15601.0	158740.17500000002	-6432.0	-24.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:48.71	0h046K61PUKMqHs6v4	15601.0	-30.0	1221840945	15601	342348.26141776406	-15858	192960.0	-15601.0	158740.17500000002	-6432.0	30.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 15:59:54.524	0ltFl7	15601.0	52.0	1551262646	15601	434649.1022695433	-15858	-334464.0	-15601.0	158740.17500000002	-6432.0	-52.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:56.481	0IJJNV0BH	15601.0	10.0	-1230115822	15601	-344666.80358643876	-15858	-64320.0	-15601.0	158740.17500000002	-6432.0	-10.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:57.729	020gtq4CLjybO3F40kpyXi	15601.0	30.0	-1986754040	15601	-556669.6665732699	-15858	-192960.0	-15601.0	158740.17500000002	-6432.0	-30.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 15:59:58.704	041Ph15F	15601.0	-55.0	-1338667765	15601	-375082.02998038667	-15858	353760.0	-15601.0	158740.17500000002	-6432.0	55.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:02.401	0q4ykcW1A0SyL68L2FH45a	15601.0	30.0	2033485401	15601	569763.3513589241	-15858	-192960.0	-15601.0	158740.17500000002	-6432.0	-30.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:03.888	0KoLN8L6Iih8ej2sW7JF	15601.0	-23.0	-2104361963	15601	-589622.2927991034	-15858	147936.0	-15601.0	158740.17500000002	-6432.0	23.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:04.063	04XP4DrTCblC7885	15601.0	79.553	-1452617198	15601	-407009.58195572987	-15858	-511684.9	-15601.0	158740.17500000002	-6432.0	-79.553	NULL	-15601.0	-2.43391201E8
 1969-12-31 16:00:05.007	0nur4r8MV673GcJp3h765I	15601.0	35.0	2123136080	15601	594882.6225833567	-15858	-225120.0	-15601.0	158740.17500000002	-6432.0	-35.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:44.115	0p6665Ys81o1ITrC5DSoHV	15601.0	-20.0	-258993110	15601	-72567.41664331745	-15858	128640.0	-15601.0	158740.17500000002	-6432.0	20.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:50.575	0q1A0HR4Q8Cd6r	15601.0	29.0	-221039350	15601	-61933.132530120485	-15858	-186528.0	-15601.0	158740.17500000002	-6432.0	-29.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:02.401	0q4ykcW1A0SyL68L2FH45a	15601.0	30.0	2033485401	15601	569763.3513589241	-15858	-192960.0	-15601.0	158740.17500000002	-6432.0	-30.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:52.786	0to563s4g3qycP5T8	15601.0	-1.0	672512361	15601	188431.59456430373	-15858	6432.0	-15601.0	158740.17500000002	-6432.0	1.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 16:00:05.334	0u7Jba8i21vWm	15601.0	22.0	-1875861804	15601	-525598.7122443261	-15858	-141504.0	-15601.0	158740.17500000002	-6432.0	-22.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:05.83	06Tj8f5xNhpaiE71AWqJ7b5	15601.0	-49.0	226841234	15601	63558.76548052676	-15858	315168.0	-15601.0	158740.17500000002	-6432.0	49.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:54.384	0uO20	15601.0	-59.0	1850076369	15601	518373.87755673856	-15858	379488.0	-15601.0	158740.17500000002	-6432.0	59.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:53.279	0vC4nYJsnNgXvL5	15601.0	-11.0	1778089631	15601	498203.87531521433	-15858	70752.0	-15601.0	158740.17500000002	-6432.0	11.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:48.932	10	15601.0	16.0	NULL	15601	NULL	-15858	-102912.0	-15601.0	158740.17500000002	-6432.0	-16.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:44.661	10mF5gYR5Fey1vTEHx	15601.0	25.0	-2030132877	15601	-568824.0058840011	-15858	-160800.0	-15601.0	158740.17500000002	-6432.0	-25.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 16:00:05.997	12AEw	15601.0	-64.0	1421812187	15601	398378.30961053516	-15858	411648.0	-15601.0	158740.17500000002	-6432.0	64.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:07.499	14MDiWrX	15601.0	-33.0	42147119	15601	11809.223592042588	-15858	212256.0	-15601.0	158740.17500000002	-6432.0	33.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:08.451	rVWAj4N1MCg8Scyp7wj2C	NULL	-51.0	-89010	NULL	-24.93975903614458	NULL	328032.0	NULL	NULL	-6432.0	51.0	NULL	NULL	NULL
-1969-12-31 16:00:09.123	064GHv0UW8	15601.0	-14.0	1007181336	15601	282202.67189688986	-15858	90048.0	-15601.0	158740.17500000002	-6432.0	14.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:11.928	0UugmY0R5hI	15601.0	-32.0	1701987317	15601	476880.7276548053	-15858	205824.0	-15601.0	158740.17500000002	-6432.0	32.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 16:00:12.853	12gbSP4px465TdXmV5F2apmC	15601.0	28.0	-1556827241	15601	-436208.2490893808	-15858	-180096.0	-15601.0	158740.17500000002	-6432.0	-28.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:14.175	0Q7LP3644p	15601.0	-50.0	716349726	15601	200714.40907817316	-15858	321600.0	-15601.0	158740.17500000002	-6432.0	50.0	NULL	-15601.0	-2.43391201E8
-1969-12-31 16:00:15.522	1618frAK6kL	15601.0	-44.0	1296727292	15601	363330.70664051553	-15858	283008.0	-15601.0	158740.17500000002	-6432.0	44.0	NULL	-15601.0	-2.43391201E8
 1969-12-31 16:00:15.671	1434C61RVhlDmptMem1X	15601.0	-4.0	913861995	15601	256055.47632390025	-15858	25728.0	-15601.0	158740.17500000002	-6432.0	4.0	NULL	-15601.0	-2.43391201E8
-NULL	4hA4KQj2vD3fI6gX82220d	12329.0	NULL	-1887561756	12329	-528876.9279910339	-12586	NULL	-12329.0	125447.57500000001	NULL	NULL	-3104	-12329.0	-1.52004241E8
-NULL	4hA4KQj2vD3fI6gX82220d	477.0	NULL	-1887561756	477	-528876.9279910339	-734	NULL	-477.0	4853.475	NULL	NULL	-326	-477.0	-227529.0
-NULL	xH7445Rals48VOulSyR5F	10221.0	NULL	-1645852809	10221	-461152.37013168953	-10478	NULL	-10221.0	103998.675	NULL	NULL	5022	-10221.0	-1.04468841E8
+1969-12-31 16:00:07.499	14MDiWrX	15601.0	-33.0	42147119	15601	11809.223592042588	-15858	212256.0	-15601.0	158740.17500000002	-6432.0	33.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:46.351	155506i0h358vma3m1tGku	15601.0	-57.0	1328883886	15601	372340.6797422247	-15858	366624.0	-15601.0	158740.17500000002	-6432.0	57.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 16:00:15.522	1618frAK6kL	15601.0	-44.0	1296727292	15601	363330.70664051553	-15858	283008.0	-15601.0	158740.17500000002	-6432.0	44.0	NULL	-15601.0	-2.43391201E8
+1969-12-31 15:59:52.617	16NIx33qB1Thp5q	15601.0	-9.0	1660201497	15601	465172.7366209022	-15858	57888.0	-15601.0	158740.17500000002	-6432.0	9.0	NULL	-15601.0	-2.43391201E8
 PREHOOK: query: -- TargetTypeClasses: Double, String, Long
 -- Functions: StDev, Sum, VarP, Count
 -- ArithmeticOps: Remainder, Divide, Subtract
 -- FilterOps: GreaterThanOrEqual, Equal, LessThanOrEqual
 -- GroupBy: GroupBy
 EXPLAIN SELECT   csmallint,
-         (csmallint % -75) as c1,
-         STDDEV_SAMP(csmallint) as c2,
-         (-1.389 / csmallint) as c3,
-         SUM(cbigint) as c4,
-         ((csmallint % -75) / SUM(cbigint)) as c5,
-         (-((csmallint % -75))) as c6,
-         VAR_POP(ctinyint) as c7,
-         (-((-((csmallint % -75))))) as c8,
-         COUNT(*) as c9,
-         (COUNT(*) - -89010) as c10
+         (csmallint % -75),
+         STDDEV_SAMP(csmallint),
+         (-1.389 / csmallint),
+         SUM(cbigint),
+         ((csmallint % -75) / SUM(cbigint)),
+         (-((csmallint % -75))),
+         VAR_POP(ctinyint),
+         (-((-((csmallint % -75))))),
+         COUNT(*),
+         (COUNT(*) - -89010)
 FROM     alltypesorc
 WHERE    (((csmallint >= -257))
           AND ((-6432 = csmallint)
                OR ((cint >= cdouble)
                    AND (ctinyint <= cint))))
 GROUP BY csmallint
-ORDER BY csmallint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint
 LIMIT 20
 PREHOOK: type: QUERY
 POSTHOOK: query: -- TargetTypeClasses: Double, String, Long
@@ -1841,23 +1839,23 @@ POSTHOOK: query: -- TargetTypeClasses: Double, String, Long
 -- FilterOps: GreaterThanOrEqual, Equal, LessThanOrEqual
 -- GroupBy: GroupBy
 EXPLAIN SELECT   csmallint,
-         (csmallint % -75) as c1,
-         STDDEV_SAMP(csmallint) as c2,
-         (-1.389 / csmallint) as c3,
-         SUM(cbigint) as c4,
-         ((csmallint % -75) / SUM(cbigint)) as c5,
-         (-((csmallint % -75))) as c6,
-         VAR_POP(ctinyint) as c7,
-         (-((-((csmallint % -75))))) as c8,
-         COUNT(*) as c9,
-         (COUNT(*) - -89010) as c10
+         (csmallint % -75),
+         STDDEV_SAMP(csmallint),
+         (-1.389 / csmallint),
+         SUM(cbigint),
+         ((csmallint % -75) / SUM(cbigint)),
+         (-((csmallint % -75))),
+         VAR_POP(ctinyint),
+         (-((-((csmallint % -75))))),
+         COUNT(*),
+         (COUNT(*) - -89010)
 FROM     alltypesorc
 WHERE    (((csmallint >= -257))
           AND ((-6432 = csmallint)
                OR ((cint >= cdouble)
                    AND (ctinyint <= cint))))
 GROUP BY csmallint
-ORDER BY csmallint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint
 LIMIT 20
 POSTHOOK: type: QUERY
 STAGE DEPENDENCIES:
@@ -1878,15 +1876,15 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: ((UDFToInteger(csmallint) >= -257) and ((-6432 = UDFToInteger(csmallint)) or ((UDFToDouble(cint) >= cdouble) and (UDFToInteger(ctinyint) <= cint)))) (type: boolean)
+                    predicate: ((csmallint >= -257) and ((-6432 = csmallint) or ((cint >= cdouble) and (ctinyint <= cint)))) (type: boolean)
                     Statistics: Num rows: 2503 Data size: 76841 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: csmallint (type: smallint), cbigint (type: bigint), ctinyint (type: tinyint)
-                      outputColumnNames: _col0, _col1, _col2
+                      outputColumnNames: csmallint, cbigint, ctinyint
                       Statistics: Num rows: 2503 Data size: 76841 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: stddev_samp(_col0), sum(_col1), var_pop(_col2), count()
-                        keys: _col0 (type: smallint)
+                        aggregations: stddev_samp(csmallint), sum(cbigint), var_pop(ctinyint), count()
+                        keys: csmallint (type: smallint)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4
                         Statistics: Num rows: 2503 Data size: 76841 Basic stats: COMPLETE Column stats: NONE
@@ -1906,17 +1904,18 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4
                 Statistics: Num rows: 1251 Data size: 38405 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: smallint), (UDFToInteger(_col0) % -75) (type: int), _col1 (type: double), (-1.389 / UDFToDouble(_col0)) (type: double), _col2 (type: bigint), (UDFToDouble((UDFToInteger(_col0) % -75)) / UDFToDouble(_col2)) (type: double), (- (UDFToInteger(_col0) % -75)) (type: int), _col3 (type: double), (- (- (UDFToInteger(_col0) % -75))) (type: int), _col4 (type: bigint), (_col4 - -89010) (type: bigint)
+                  expressions: _col0 (type: smallint), (_col0 % -75) (type: int), _col1 (type: double), (-1.389 / _col0) (type: double), _col2 (type: bigint), ((_col0 % -75) / _col2) (type: double), (- (_col0 % -75)) (type: int), _col3 (type: double), (- (- (_col0 % -75))) (type: int), _col4 (type: bigint), (_col4 - -89010) (type: bigint)
                   outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                   Statistics: Num rows: 1251 Data size: 38405 Basic stats: COMPLETE Column stats: NONE
                   Reduce Output Operator
-                    key expressions: _col0 (type: smallint), _col1 (type: int), _col2 (type: double), _col3 (type: double), _col4 (type: bigint), _col5 (type: double), _col6 (type: int), _col7 (type: double), _col8 (type: int), _col9 (type: bigint), _col10 (type: bigint)
-                    sort order: +++++++++++
+                    key expressions: _col0 (type: smallint)
+                    sort order: +
                     Statistics: Num rows: 1251 Data size: 38405 Basic stats: COMPLETE Column stats: NONE
+                    value expressions: _col1 (type: int), _col2 (type: double), _col3 (type: double), _col4 (type: bigint), _col5 (type: double), _col6 (type: int), _col7 (type: double), _col8 (type: int), _col9 (type: bigint), _col10 (type: bigint)
         Reducer 3 
             Reduce Operator Tree:
               Select Operator
-                expressions: KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey1 (type: int), KEY.reducesinkkey2 (type: double), KEY.reducesinkkey3 (type: double), KEY.reducesinkkey4 (type: bigint), KEY.reducesinkkey5 (type: double), KEY.reducesinkkey6 (type: int), KEY.reducesinkkey7 (type: double), KEY.reducesinkkey8 (type: int), KEY.reducesinkkey9 (type: bigint), KEY.reducesinkkey10 (type: bigint)
+                expressions: KEY.reducesinkkey0 (type: smallint), VALUE._col0 (type: int), VALUE._col1 (type: double), VALUE._col2 (type: double), VALUE._col3 (type: bigint), VALUE._col4 (type: double), VALUE._col5 (type: int), VALUE._col6 (type: double), VALUE._col7 (type: int), VALUE._col8 (type: bigint), VALUE._col9 (type: bigint)
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                 Statistics: Num rows: 1251 Data size: 38405 Basic stats: COMPLETE Column stats: NONE
                 Limit
@@ -1938,69 +1937,69 @@ STAGE PLANS:
         ListSink
 
 PREHOOK: query: SELECT   csmallint,
-         (csmallint % -75) as c1,
-         STDDEV_SAMP(csmallint) as c2,
-         (-1.389 / csmallint) as c3,
-         SUM(cbigint) as c4,
-         ((csmallint % -75) / SUM(cbigint)) as c5,
-         (-((csmallint % -75))) as c6,
-         VAR_POP(ctinyint) as c7,
-         (-((-((csmallint % -75))))) as c8,
-         COUNT(*) as c9,
-         (COUNT(*) - -89010) as c10
+         (csmallint % -75),
+         STDDEV_SAMP(csmallint),
+         (-1.389 / csmallint),
+         SUM(cbigint),
+         ((csmallint % -75) / SUM(cbigint)),
+         (-((csmallint % -75))),
+         VAR_POP(ctinyint),
+         (-((-((csmallint % -75))))),
+         COUNT(*),
+         (COUNT(*) - -89010)
 FROM     alltypesorc
 WHERE    (((csmallint >= -257))
           AND ((-6432 = csmallint)
                OR ((cint >= cdouble)
                    AND (ctinyint <= cint))))
 GROUP BY csmallint
-ORDER BY csmallint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint
 LIMIT 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT   csmallint,
-         (csmallint % -75) as c1,
-         STDDEV_SAMP(csmallint) as c2,
-         (-1.389 / csmallint) as c3,
-         SUM(cbigint) as c4,
-         ((csmallint % -75) / SUM(cbigint)) as c5,
-         (-((csmallint % -75))) as c6,
-         VAR_POP(ctinyint) as c7,
-         (-((-((csmallint % -75))))) as c8,
-         COUNT(*) as c9,
-         (COUNT(*) - -89010) as c10
+         (csmallint % -75),
+         STDDEV_SAMP(csmallint),
+         (-1.389 / csmallint),
+         SUM(cbigint),
+         ((csmallint % -75) / SUM(cbigint)),
+         (-((csmallint % -75))),
+         VAR_POP(ctinyint),
+         (-((-((csmallint % -75))))),
+         COUNT(*),
+         (COUNT(*) - -89010)
 FROM     alltypesorc
 WHERE    (((csmallint >= -257))
           AND ((-6432 = csmallint)
                OR ((cint >= cdouble)
                    AND (ctinyint <= cint))))
 GROUP BY csmallint
-ORDER BY csmallint, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10
+ORDER BY csmallint
 LIMIT 20
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
--100	-25	0.0	0.01389	NULL	NULL	25	0.0	-25	1	89011
--113	-38	0.0	0.01229203539823009	NULL	NULL	38	0.0	-38	1	89011
--118	-43	0.0	0.011771186440677966	NULL	NULL	43	0.0	-43	1	89011
--165	-15	0.0	0.008418181818181818	NULL	NULL	15	0.0	-15	1	89011
--168	-18	0.0	0.008267857142857143	NULL	NULL	18	0.0	-18	1	89011
--171	-21	0.0	0.00812280701754386	NULL	NULL	21	0.0	-21	1	89011
--180	-30	0.0	0.007716666666666667	NULL	NULL	30	0.0	-30	1	89011
--203	-53	0.0	0.006842364532019704	NULL	NULL	53	0.0	-53	1	89011
--217	-67	0.0	0.006400921658986175	NULL	NULL	67	0.0	-67	1	89011
--220	-70	0.0	0.006313636363636363	NULL	NULL	70	0.0	-70	1	89011
 -257	-32	0.0	0.005404669260700389	NULL	NULL	32	0.0	-32	2	89012
--29	-29	0.0	0.04789655172413793	NULL	NULL	29	0.0	-29	1	89011
--42	-42	0.0	0.03307142857142857	NULL	NULL	42	0.0	-42	1	89011
--49	-49	0.0	0.028346938775510203	NULL	NULL	49	0.0	-49	1	89011
--62	-62	0.0	0.022403225806451613	NULL	NULL	62	0.0	-62	1	89011
--75	0	0.0	0.018520000000000002	NULL	NULL	0	107.55555555555556	0	3	89013
--77	-2	0.0	0.01803896103896104	NULL	NULL	2	0.0	-2	1	89011
--84	-9	0.0	0.016535714285714286	NULL	NULL	9	0.0	-9	1	89011
--89	-14	0.0	0.015606741573033708	NULL	NULL	14	0.0	-14	1	89011
+-220	-70	0.0	0.006313636363636363	NULL	NULL	70	0.0	-70	1	89011
+-217	-67	0.0	0.006400921658986175	NULL	NULL	67	0.0	-67	1	89011
+-203	-53	0.0	0.006842364532019704	NULL	NULL	53	0.0	-53	1	89011
+-180	-30	0.0	0.007716666666666667	NULL	NULL	30	0.0	-30	1	89011
+-171	-21	0.0	0.00812280701754386	NULL	NULL	21	0.0	-21	1	89011
+-168	-18	0.0	0.008267857142857143	NULL	NULL	18	0.0	-18	1	89011
+-165	-15	0.0	0.008418181818181818	NULL	NULL	15	0.0	-15	1	89011
+-118	-43	0.0	0.011771186440677966	NULL	NULL	43	0.0	-43	1	89011
+-113	-38	0.0	0.01229203539823009	NULL	NULL	38	0.0	-38	1	89011
+-100	-25	0.0	0.01389	NULL	NULL	25	0.0	-25	1	89011
 -95	-20	0.0	0.014621052631578948	NULL	NULL	20	0.0	-20	1	89011
+-89	-14	0.0	0.015606741573033708	NULL	NULL	14	0.0	-14	1	89011
+-84	-9	0.0	0.016535714285714286	NULL	NULL	9	0.0	-9	1	89011
+-77	-2	0.0	0.01803896103896104	NULL	NULL	2	0.0	-2	1	89011
+-75	0	0.0	0.018520000000000002	NULL	NULL	0	107.55555555555556	0	3	89013
+-62	-62	0.0	0.022403225806451613	NULL	NULL	62	0.0	-62	1	89011
+-49	-49	0.0	0.028346938775510203	NULL	NULL	49	0.0	-49	1	89011
+-42	-42	0.0	0.03307142857142857	NULL	NULL	42	0.0	-42	1	89011
+-29	-29	0.0	0.04789655172413793	NULL	NULL	29	0.0	-29	1	89011
 WARNING: Comparing a bigint and a double may result in a loss of precision.
 WARNING: Comparing a bigint and a double may result in a loss of precision.
 PREHOOK: query: -- TargetTypeClasses: Long, Double, Timestamp
@@ -2085,15 +2084,15 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: ((cdouble > 2563.58) and (((cbigint >= UDFToLong(cint)) and (UDFToInteger(csmallint) < cint) and (UDFToDouble(cfloat) < -5638.15)) or (2563.58 = UDFToDouble(ctinyint)) or ((cdouble <= UDFToDouble(cbigint)) and (-5638.15 > UDFToDouble(cbigint))))) (type: boolean)
+                    predicate: ((cdouble > 2563.58) and ((((cbigint >= cint) and ((csmallint < cint) and (cfloat < -5638.15))) or (2563.58 = ctinyint)) or ((cdouble <= cbigint) and (-5638.15 > cbigint)))) (type: boolean)
                     Statistics: Num rows: 2654 Data size: 81476 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: cdouble (type: double), cfloat (type: float)
-                      outputColumnNames: _col0, _col1
+                      outputColumnNames: cdouble, cfloat
                       Statistics: Num rows: 2654 Data size: 81476 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: var_samp(_col0), count(_col1), sum(_col1), var_pop(_col0), stddev_pop(_col0), sum(_col0)
-                        keys: _col0 (type: double)
+                        aggregations: var_samp(cdouble), count(cfloat), sum(cfloat), var_pop(cdouble), stddev_pop(cdouble), sum(cdouble)
+                        keys: cdouble (type: double)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                         Statistics: Num rows: 2654 Data size: 81476 Basic stats: COMPLETE Column stats: NONE
@@ -2113,7 +2112,7 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                 Statistics: Num rows: 1327 Data size: 40738 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: double), _col1 (type: double), _col5 (type: double), (_col0 + _col1) (type: double), (_col0 * 762.0) (type: double), _col6 (type: double), (-863.257 % (_col0 * 762.0)) (type: double), (2563.58 * _col1) (type: double), (- _col1) (type: double), _col2 (type: bigint), ((2563.58 * _col1) + -5638.15) (type: double), ((- _col1) * ((2563.58 * _col1) + -5638.15)) (type: double), _col3 (type: double), _col4 (type: double), (_col0 - (- _col1)) (type: double)
+                  expressions: _col0 (type: double), _col1 (type: double), _col5 (type: double), (_col0 + _col1) (type: double), (_col0 * 762) (type: double), _col6 (type: double), (-863.257 % (_col0 * 762)) (type: double), (2563.58 * _col1) (type: double), (- _col1) (type: double), _col2 (type: bigint), ((2563.58 * _col1) + -5638.15) (type: double), ((- _col1) * ((2563.58 * _col1) + -5638.15)) (type: double), _col3 (type: double), _col4 (type: double), (_col0 - (- _col1)) (type: double)
                   outputColumnNames: _col0, _col1, _col10, _col11, _col12, _col13, _col14, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                   Statistics: Num rows: 1327 Data size: 40738 Basic stats: COMPLETE Column stats: NONE
                   Reduce Output Operator
@@ -2209,43 +2208,43 @@ PREHOOK: query: -- TargetTypeClasses: Bool, Timestamp, String, Double, Long
 -- GroupBy: GroupBy
 EXPLAIN SELECT   ctimestamp1,
          cstring1,
-         STDDEV_POP(cint) as c1,
-         (STDDEV_POP(cint) * 10.175) as c2,
-         (-(STDDEV_POP(cint))) as c3,
-         AVG(csmallint) as c4,
-         (-(STDDEV_POP(cint))) as c5,
-         (-26.28 - STDDEV_POP(cint)) as c6,
-         COUNT(*) as c7,
-         (-(COUNT(*))) as c8,
-         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) as c9,
-         MIN(ctinyint) as c10,
-         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))) as c11,
-         (-((STDDEV_POP(cint) * 10.175))) as c12,
-         VAR_SAMP(csmallint) as c13,
-         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c14,
-         (-((-(STDDEV_POP(cint))))) as c15,
-         ((-(COUNT(*))) / STDDEV_POP(cint)) as c16,
-         VAR_POP(cfloat) as c17,
-         (10.175 / AVG(csmallint)) as c18,
-         AVG(cint) as c19,
-         VAR_SAMP(cfloat) as c20,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c21,
-         (-((-((STDDEV_POP(cint) * 10.175))))) as c22,
-         AVG(cfloat) as c23,
-         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175) as c24,
-         (10.175 % (10.175 / AVG(csmallint))) as c25,
-         (-(MIN(ctinyint))) as c26,
-         MIN(cdouble) as c27,
-         VAR_POP(csmallint) as c28,
-         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))) as c29,
-         ((-(STDDEV_POP(cint))) % AVG(cfloat)) as c30,
-         (-26.28 / (-(MIN(ctinyint)))) as c31,
-         STDDEV_POP(ctinyint) as c32,
-         SUM(cint) as c33,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)) as c34,
-         (-((-(COUNT(*))))) as c35,
-         COUNT(*) as c36,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28) as c37
+         STDDEV_POP(cint),
+         (STDDEV_POP(cint) * 10.175),
+         (-(STDDEV_POP(cint))),
+         AVG(csmallint),
+         (-(STDDEV_POP(cint))),
+         (-26.28 - STDDEV_POP(cint)),
+         COUNT(*),
+         (-(COUNT(*))),
+         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))),
+         MIN(ctinyint),
+         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))),
+         (-((STDDEV_POP(cint) * 10.175))),
+         VAR_SAMP(csmallint),
+         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-(STDDEV_POP(cint))))),
+         ((-(COUNT(*))) / STDDEV_POP(cint)),
+         VAR_POP(cfloat),
+         (10.175 / AVG(csmallint)),
+         AVG(cint),
+         VAR_SAMP(cfloat),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-((STDDEV_POP(cint) * 10.175))))),
+         AVG(cfloat),
+         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175),
+         (10.175 % (10.175 / AVG(csmallint))),
+         (-(MIN(ctinyint))),
+         MIN(cdouble),
+         VAR_POP(csmallint),
+         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))),
+         ((-(STDDEV_POP(cint))) % AVG(cfloat)),
+         (-26.28 / (-(MIN(ctinyint)))),
+         STDDEV_POP(ctinyint),
+         SUM(cint),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)),
+         (-((-(COUNT(*))))),
+         COUNT(*),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28)
 FROM     alltypesorc
 WHERE    (((ctimestamp1 != 0))
           AND ((((-257 != ctinyint)
@@ -2259,7 +2258,7 @@ WHERE    (((ctimestamp1 != 0))
                      OR ((cboolean1 IS NULL)
                          AND (cfloat < cint))))
 GROUP BY ctimestamp1, cstring1
-ORDER BY ctimestamp1, cstring1, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37
+ORDER BY ctimestamp1, cstring1
 LIMIT 50
 PREHOOK: type: QUERY
 POSTHOOK: query: -- TargetTypeClasses: Bool, Timestamp, String, Double, Long
@@ -2269,43 +2268,43 @@ POSTHOOK: query: -- TargetTypeClasses: Bool, Timestamp, String, Double, Long
 -- GroupBy: GroupBy
 EXPLAIN SELECT   ctimestamp1,
          cstring1,
-         STDDEV_POP(cint) as c1,
-         (STDDEV_POP(cint) * 10.175) as c2,
-         (-(STDDEV_POP(cint))) as c3,
-         AVG(csmallint) as c4,
-         (-(STDDEV_POP(cint))) as c5,
-         (-26.28 - STDDEV_POP(cint)) as c6,
-         COUNT(*) as c7,
-         (-(COUNT(*))) as c8,
-         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) as c9,
-         MIN(ctinyint) as c10,
-         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))) as c11,
-         (-((STDDEV_POP(cint) * 10.175))) as c12,
-         VAR_SAMP(csmallint) as c13,
-         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c14,
-         (-((-(STDDEV_POP(cint))))) as c15,
-         ((-(COUNT(*))) / STDDEV_POP(cint)) as c16,
-         VAR_POP(cfloat) as c17,
-         (10.175 / AVG(csmallint)) as c18,
-         AVG(cint) as c19,
-         VAR_SAMP(cfloat) as c20,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c21,
-         (-((-((STDDEV_POP(cint) * 10.175))))) as c22,
-         AVG(cfloat) as c23,
-         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175) as c24,
-         (10.175 % (10.175 / AVG(csmallint))) as c25,
-         (-(MIN(ctinyint))) as c26,
-         MIN(cdouble) as c27,
-         VAR_POP(csmallint) as c28,
-         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))) as c29,
-         ((-(STDDEV_POP(cint))) % AVG(cfloat)) as c30,
-         (-26.28 / (-(MIN(ctinyint)))) as c31,
-         STDDEV_POP(ctinyint) as c32,
-         SUM(cint) as c33,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)) as c34,
-         (-((-(COUNT(*))))) as c35,
-         COUNT(*) as c36,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28) as c37
+         STDDEV_POP(cint),
+         (STDDEV_POP(cint) * 10.175),
+         (-(STDDEV_POP(cint))),
+         AVG(csmallint),
+         (-(STDDEV_POP(cint))),
+         (-26.28 - STDDEV_POP(cint)),
+         COUNT(*),
+         (-(COUNT(*))),
+         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))),
+         MIN(ctinyint),
+         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))),
+         (-((STDDEV_POP(cint) * 10.175))),
+         VAR_SAMP(csmallint),
+         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-(STDDEV_POP(cint))))),
+         ((-(COUNT(*))) / STDDEV_POP(cint)),
+         VAR_POP(cfloat),
+         (10.175 / AVG(csmallint)),
+         AVG(cint),
+         VAR_SAMP(cfloat),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-((STDDEV_POP(cint) * 10.175))))),
+         AVG(cfloat),
+         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175),
+         (10.175 % (10.175 / AVG(csmallint))),
+         (-(MIN(ctinyint))),
+         MIN(cdouble),
+         VAR_POP(csmallint),
+         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))),
+         ((-(STDDEV_POP(cint))) % AVG(cfloat)),
+         (-26.28 / (-(MIN(ctinyint)))),
+         STDDEV_POP(ctinyint),
+         SUM(cint),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)),
+         (-((-(COUNT(*))))),
+         COUNT(*),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28)
 FROM     alltypesorc
 WHERE    (((ctimestamp1 != 0))
           AND ((((-257 != ctinyint)
@@ -2319,7 +2318,7 @@ WHERE    (((ctimestamp1 != 0))
                      OR ((cboolean1 IS NULL)
                          AND (cfloat < cint))))
 GROUP BY ctimestamp1, cstring1
-ORDER BY ctimestamp1, cstring1, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37
+ORDER BY ctimestamp1, cstring1
 LIMIT 50
 POSTHOOK: type: QUERY
 STAGE DEPENDENCIES:
@@ -2340,15 +2339,15 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: ((UDFToDouble(ctimestamp1) <> 0.0) and (((-257 <> UDFToInteger(ctinyint)) and cboolean2 is not null and cstring1 regexp '.*ss' and (-3.0 < UDFToDouble(ctimestamp1))) or (UDFToDouble(ctimestamp2) = -5.0) or ((UDFToDouble(ctimestamp1) < 0.0) and (cstring2 like '%b%')) or (cdouble = UDFToDouble(cint)) or (cboolean1 is null and (cfloat < UDFToFloat(cint))))) (type: boolean)
+                    predicate: ((ctimestamp1 <> 0) and (((((((-257 <> ctinyint) and cboolean2 is not null) and ((cstring1 rlike '.*ss') and (-3 < ctimestamp1))) or (ctimestamp2 = -5)) or ((ctimestamp1 < 0) and (cstring2 like '%b%'))) or (cdouble = cint)) or (cboolean1 is null and (cfloat < cint)))) (type: boolean)
                     Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: ctimestamp1 (type: timestamp), cstring1 (type: string), cint (type: int), csmallint (type: smallint), ctinyint (type: tinyint), cfloat (type: float), cdouble (type: double)
-                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
+                      outputColumnNames: ctimestamp1, cstring1, cint, csmallint, ctinyint, cfloat, cdouble
                       Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: stddev_pop(_col2), avg(_col3), count(), min(_col4), var_samp(_col3), var_pop(_col5), avg(_col2), var_samp(_col5), avg(_col5), min(_col6), var_pop(_col3), stddev_pop(_col4), sum(_col2)
-                        keys: _col0 (type: timestamp), _col1 (type: string)
+                        aggregations: stddev_pop(cint), avg(csmallint), count(), min(ctinyint), var_samp(csmallint), var_pop(cfloat), avg(cint), var_samp(cfloat), avg(cfloat), min(cdouble), var_pop(csmallint), stddev_pop(ctinyint), sum(cint)
+                        keys: ctimestamp1 (type: timestamp), cstring1 (type: string)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
                         Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
@@ -2368,17 +2367,18 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
                 Statistics: Num rows: 6144 Data size: 188618 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: timestamp), _col1 (type: string), _col2 (type: double), (_col2 * 10.175) (type: double), (- _col2) (type: double), _col3 (type: double), (- _col2) (type: double), (-26.28 - _col2) (type: double), _col4 (type: bigint), (- _col4) (type: bigint), ((-26.28 - _col2) * (- _col2)) (type: double), _col5 (type: tinyint), (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4))) (type: double), (- (_col2 * 10.175)) (type: double), _col6 (type: double), (_col6 + (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4)))) (type: double), (- (- _col2)) (type: double), (UDFToDouble((- _col4)) / _col2) (type: double), _col7 (type: double), (10.175 / _col3) (type: double), _col8 (type: double), _col9 (type: double), ((_col6 + (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4)))) - (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4)))) (type: double), (- (- (_col2 * 10.175))) (type: double), _col10 (type: double), (((_col6 + (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4)))) - (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4)))) * 10.175) (type: double), (10.175 % (10.175 / _col3)) (type: double), (- _col5) (type: tinyint), _col11 (type: double), _col12 (type: double), (- ((-26.28 - _col2) * (- _col2))) (type: double), ((- _col2) % _col10) (type: double), (-26.28 / UDFToDouble((- _col5))) (type: double), _col13 (type: double), _col14 (type: bigint), ((_col6 + (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4)))) / _col7) (type: double), (- (- _col4)) (type: bigint), _col4 (type: bigint), ((_col6 + (((-26.28 - _col2) * (- _col2)) * UDFToDouble((- _col4)))) % -26.28) (type: double)
-                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38
+                  expressions: _col0 (type: timestamp), _col1 (type: string), ((-26.28 - _col2) * (- _col2)) (type: double), _col5 (type: tinyint), (((-26.28 - _col2) * (- _col2)) * (- _col4)) (type: double), (- (_col2 * 10.175)) (type: double), _col6 (type: double), (_col6 + (((-26.28 - _col2) * (- _col2)) * (- _col4))) (type: double), (- (- _col2)) (type: double), ((- _col4) / _col2) (type: double), _col7 (type: double), (10.175 / _col3) (type: double), _col2 (type: double), _col8 (type: double), _col9 (type: double), ((_col6 + (((-26.28 - _col2) * (- _col2)) * (- _col4))) - (((-26.28 - _col2) * (- _col2)) * (- _col4))) (type: double), (- (- (_col2 * 10.175))) (type: double), _col10 (type: double), (((_col6 + (((-26.28 - _col2) * (- _col2)) * (- _col4))) - (((-26.28 - _col2) * (- _col2)) * (- _col4))) * 10.175) (type: double), (10.175 % (10.175 / _col3)) (type: double), (- _col5) (type: tinyint), _col11 (type: double), _col12 (type: double), (_col2 * 10.175) (type: double), (- ((-26.28 - _col2) * (- _col2))) (type: double), ((- _col2) % _col10) (type: double), (-26.28 / (- _col5)) (type: double), _col13 (type: double), _col14 (type: bigint), ((_col6 + (((-26.28 - _col2) * (- _col2)) * (- _col4))) / _col7) (type: double), (- (- _col4)) (type: bigint), ((_col6 + (((-26.28 - _col2) * (- _col2)) * (- _col4))) % -26.28) (type: double), (- _col2) (type: double), _col3 (type: double), (-26.28 - _col2) (type: double), _col4 (type: bigint), (- _col4) (type: bigint)
+                  outputColumnNames: _col0, _col1, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col2, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col3, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col38, _col4, _col5, _col7, _col8, _col9
                   Statistics: Num rows: 6144 Data size: 188618 Basic stats: COMPLETE Column stats: NONE
                   Reduce Output Operator
-                    key expressions: _col0 (type: timestamp), _col1 (type: string), _col2 (type: double), _col3 (type: double), _col4 (type: double), _col5 (type: double), _col6 (type: double), _col7 (type: double), _col8 (type: bigint), _col9 (type: bigint), _col10 (type: double), _col11 (type: tinyint), _col12 (type: double), _col13 (type: double), _col14 (type: double), _col15 (type: double), _col16 (type: double), _col17 (type: double), _col18 (type: double), _col19 (type: double), _col20 (type: double), _col21 (type: double), _col22 (type: double), _col23 (type: double), _col24 (type: double), _col25 (type: double), _col26 (type: double), _col27 (type: tinyint), _col28 (type: double), _col29 (type: double), _col30 (type: double), _col31 (type: double), _col32 (type: double), _col33 (type: double), _col34 (type: bigint), _col35 (type: double), _col36 (type: bigint), _col37 (type: bigint), _col38 (type: double)
-                    sort order: +++++++++++++++++++++++++++++++++++++++
+                    key expressions: _col0 (type: timestamp), _col1 (type: string)
+                    sort order: ++
                     Statistics: Num rows: 6144 Data size: 188618 Basic stats: COMPLETE Column stats: NONE
+                    value expressions: _col2 (type: double), _col3 (type: double), _col4 (type: double), _col5 (type: double), _col7 (type: double), _col8 (type: bigint), _col9 (type: bigint), _col10 (type: double), _col11 (type: tinyint), _col12 (type: double), _col13 (type: double), _col14 (type: double), _col15 (type: double), _col16 (type: double), _col17 (type: double), _col18 (type: double), _col19 (type: double), _col20 (type: double), _col21 (type: double), _col22 (type: double), _col23 (type: double), _col24 (type: double), _col25 (type: double), _col26 (type: double), _col27 (type: tinyint), _col28 (type: double), _col29 (type: double), _col30 (type: double), _col31 (type: double), _col32 (type: double), _col33 (type: double), _col34 (type: bigint), _col35 (type: double), _col36 (type: bigint), _col38 (type: double)
         Reducer 3 
             Reduce Operator Tree:
               Select Operator
-                expressions: KEY.reducesinkkey0 (type: timestamp), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: double), KEY.reducesinkkey3 (type: double), KEY.reducesinkkey4 (type: double), KEY.reducesinkkey5 (type: double), KEY.reducesinkkey4 (type: double), KEY.reducesinkkey7 (type: double), KEY.reducesinkkey8 (type: bigint), KEY.reducesinkkey9 (type: bigint), KEY.reducesinkkey10 (type: double), KEY.reducesinkkey11 (type: tinyint), KEY.reducesinkkey12 (type: double), KEY.reducesinkkey13 (type: double), KEY.reducesinkkey14 (type: double), KEY.reducesinkkey15 (type: double), KEY.reducesinkkey16 (type: double), KEY.reducesinkkey17 (type: double), KEY.reducesinkkey18 (type: double), KEY.reducesinkkey19 (type: double), KEY.reducesinkkey20 (type: double), KEY.reducesinkkey21 (type: double), KEY.reducesinkkey22 (type: double), KEY.reducesinkkey23 (type: double), KEY.reducesinkkey24 (type: double), KEY.reducesinkkey25 (type: double), KEY.reducesinkkey26 (type: double), KEY.reducesinkkey27 (type: tinyint), KEY.reducesinkkey28 (type: double), KEY.reducesinkkey29 (type: double), KEY.reducesinkkey30 (type: double), KEY.reducesinkkey31 (type: double), KEY.reducesinkkey32 (type: double), KEY.reducesinkkey33 (type: double), KEY.reducesinkkey34 (type: bigint), KEY.reducesinkkey35 (type: double), KEY.reducesinkkey36 (type: bigint), KEY.reducesinkkey8 (type: bigint), KEY.reducesinkkey38 (type: double)
+                expressions: KEY.reducesinkkey0 (type: timestamp), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: double), VALUE._col1 (type: double), VALUE._col2 (type: double), VALUE._col3 (type: double), VALUE._col2 (type: double), VALUE._col4 (type: double), VALUE._col5 (type: bigint), VALUE._col6 (type: bigint), VALUE._col7 (type: double), VALUE._col8 (type: tinyint), VALUE._col9 (type: double), VALUE._col10 (type: double), VALUE._col11 (type: double), VALUE._col12 (type: double), VALUE._col13 (type: double), VALUE._col14 (type: double), VALUE._col15 (type: double), VALUE._col16 (type: double), VALUE._col17 (type: double), VALUE._col18 (type: double), VALUE._col19 (type: double), VALUE._col20 (type: double), VALUE._col21 (type: double), VALUE._col22 (type: double), VALUE._col23 (type: double), VALUE._col24 (type: tinyint), VALUE._col25 (type: double), VALUE._col26 (type: double), VALUE._col27 (type: double), VALUE._col28 (type: double), VALUE._col29 (type: double), VALUE._col30 (type: double), VALUE._col31 (type: bigint), VALUE._col32 (type: double), VALUE._col33 (type: bigint), VALUE._col5 (type: bigint), VALUE._col34 (type: double)
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38
                 Statistics: Num rows: 6144 Data size: 188618 Basic stats: COMPLETE Column stats: NONE
                 Limit
@@ -2401,43 +2401,43 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT   ctimestamp1,
          cstring1,
-         STDDEV_POP(cint) as c1,
-         (STDDEV_POP(cint) * 10.175) as c2,
-         (-(STDDEV_POP(cint))) as c3,
-         AVG(csmallint) as c4,
-         (-(STDDEV_POP(cint))) as c5,
-         (-26.28 - STDDEV_POP(cint)) as c6,
-         COUNT(*) as c7,
-         (-(COUNT(*))) as c8,
-         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) as c9,
-         MIN(ctinyint) as c10,
-         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))) as c11,
-         (-((STDDEV_POP(cint) * 10.175))) as c12,
-         VAR_SAMP(csmallint) as c13,
-         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c14,
-         (-((-(STDDEV_POP(cint))))) as c15,
-         ((-(COUNT(*))) / STDDEV_POP(cint)) as c16,
-         VAR_POP(cfloat) as c17,
-         (10.175 / AVG(csmallint)) as c18,
-         AVG(cint) as c19,
-         VAR_SAMP(cfloat) as c20,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c21,
-         (-((-((STDDEV_POP(cint) * 10.175))))) as c22,
-         AVG(cfloat) as c23,
-         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175) as c24,
-         (10.175 % (10.175 / AVG(csmallint))) as c25,
-         (-(MIN(ctinyint))) as c26,
-         MIN(cdouble) as c27,
-         VAR_POP(csmallint) as c28,
-         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))) as c29,
-         ((-(STDDEV_POP(cint))) % AVG(cfloat)) as c30,
-         (-26.28 / (-(MIN(ctinyint)))) as c31,
-         STDDEV_POP(ctinyint) as c32,
-         SUM(cint) as c33,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)) as c34,
-         (-((-(COUNT(*))))) as c35,
-         COUNT(*) as c36,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28) as c37
+         STDDEV_POP(cint),
+         (STDDEV_POP(cint) * 10.175),
+         (-(STDDEV_POP(cint))),
+         AVG(csmallint),
+         (-(STDDEV_POP(cint))),
+         (-26.28 - STDDEV_POP(cint)),
+         COUNT(*),
+         (-(COUNT(*))),
+         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))),
+         MIN(ctinyint),
+         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))),
+         (-((STDDEV_POP(cint) * 10.175))),
+         VAR_SAMP(csmallint),
+         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-(STDDEV_POP(cint))))),
+         ((-(COUNT(*))) / STDDEV_POP(cint)),
+         VAR_POP(cfloat),
+         (10.175 / AVG(csmallint)),
+         AVG(cint),
+         VAR_SAMP(cfloat),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-((STDDEV_POP(cint) * 10.175))))),
+         AVG(cfloat),
+         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175),
+         (10.175 % (10.175 / AVG(csmallint))),
+         (-(MIN(ctinyint))),
+         MIN(cdouble),
+         VAR_POP(csmallint),
+         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))),
+         ((-(STDDEV_POP(cint))) % AVG(cfloat)),
+         (-26.28 / (-(MIN(ctinyint)))),
+         STDDEV_POP(ctinyint),
+         SUM(cint),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)),
+         (-((-(COUNT(*))))),
+         COUNT(*),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28)
 FROM     alltypesorc
 WHERE    (((ctimestamp1 != 0))
           AND ((((-257 != ctinyint)
@@ -2451,50 +2451,50 @@ WHERE    (((ctimestamp1 != 0))
                      OR ((cboolean1 IS NULL)
                          AND (cfloat < cint))))
 GROUP BY ctimestamp1, cstring1
-ORDER BY ctimestamp1, cstring1, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37
+ORDER BY ctimestamp1, cstring1
 LIMIT 50
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT   ctimestamp1,
          cstring1,
-         STDDEV_POP(cint) as c1,
-         (STDDEV_POP(cint) * 10.175) as c2,
-         (-(STDDEV_POP(cint))) as c3,
-         AVG(csmallint) as c4,
-         (-(STDDEV_POP(cint))) as c5,
-         (-26.28 - STDDEV_POP(cint)) as c6,
-         COUNT(*) as c7,
-         (-(COUNT(*))) as c8,
-         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) as c9,
-         MIN(ctinyint) as c10,
-         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))) as c11,
-         (-((STDDEV_POP(cint) * 10.175))) as c12,
-         VAR_SAMP(csmallint) as c13,
-         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c14,
-         (-((-(STDDEV_POP(cint))))) as c15,
-         ((-(COUNT(*))) / STDDEV_POP(cint)) as c16,
-         VAR_POP(cfloat) as c17,
-         (10.175 / AVG(csmallint)) as c18,
-         AVG(cint) as c19,
-         VAR_SAMP(cfloat) as c20,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) as c21,
-         (-((-((STDDEV_POP(cint) * 10.175))))) as c22,
-         AVG(cfloat) as c23,
-         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175) as c24,
-         (10.175 % (10.175 / AVG(csmallint))) as c25,
-         (-(MIN(ctinyint))) as c26,
-         MIN(cdouble) as c27,
-         VAR_POP(csmallint) as c28,
-         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))) as c29,
-         ((-(STDDEV_POP(cint))) % AVG(cfloat)) as c30,
-         (-26.28 / (-(MIN(ctinyint)))) as c31,
-         STDDEV_POP(ctinyint) as c32,
-         SUM(cint) as c33,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)) as c34,
-         (-((-(COUNT(*))))) as c35,
-         COUNT(*) as c36,
-         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28) as c37
+         STDDEV_POP(cint),
+         (STDDEV_POP(cint) * 10.175),
+         (-(STDDEV_POP(cint))),
+         AVG(csmallint),
+         (-(STDDEV_POP(cint))),
+         (-26.28 - STDDEV_POP(cint)),
+         COUNT(*),
+         (-(COUNT(*))),
+         ((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))),
+         MIN(ctinyint),
+         (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*)))),
+         (-((STDDEV_POP(cint) * 10.175))),
+         VAR_SAMP(csmallint),
+         (VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-(STDDEV_POP(cint))))),
+         ((-(COUNT(*))) / STDDEV_POP(cint)),
+         VAR_POP(cfloat),
+         (10.175 / AVG(csmallint)),
+         AVG(cint),
+         VAR_SAMP(cfloat),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))),
+         (-((-((STDDEV_POP(cint) * 10.175))))),
+         AVG(cfloat),
+         (((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) - (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) * 10.175),
+         (10.175 % (10.175 / AVG(csmallint))),
+         (-(MIN(ctinyint))),
+         MIN(cdouble),
+         VAR_POP(csmallint),
+         (-(((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))))),
+         ((-(STDDEV_POP(cint))) % AVG(cfloat)),
+         (-26.28 / (-(MIN(ctinyint)))),
+         STDDEV_POP(ctinyint),
+         SUM(cint),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) / VAR_POP(cfloat)),
+         (-((-(COUNT(*))))),
+         COUNT(*),
+         ((VAR_SAMP(csmallint) + (((-26.28 - STDDEV_POP(cint)) * (-(STDDEV_POP(cint)))) * (-(COUNT(*))))) % -26.28)
 FROM     alltypesorc
 WHERE    (((ctimestamp1 != 0))
           AND ((((-257 != ctinyint)
@@ -2508,7 +2508,7 @@ WHERE    (((ctimestamp1 != 0))
                      OR ((cboolean1 IS NULL)
                          AND (cfloat < cint))))
 GROUP BY ctimestamp1, cstring1
-ORDER BY ctimestamp1, cstring1, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37
+ORDER BY ctimestamp1, cstring1
 LIMIT 50
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
@@ -2672,15 +2672,15 @@ STAGE PLANS:
                   alias: alltypesorc
                   Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                   Filter Operator
-                    predicate: (cboolean1 is not null and (((cdouble < UDFToDouble(csmallint)) and (cboolean2 = cboolean1) and (UDFToDouble(cbigint) <= -863.257)) or ((cint >= -257) and cstring1 is not null and (cboolean1 >= 1)) or cstring2 regexp 'b' or ((csmallint >= UDFToShort(ctinyint)) and ctimestamp2 is null))) (type: boolean)
+                    predicate: (cboolean1 is not null and (((((cdouble < csmallint) and ((cboolean2 = cboolean1) and (cbigint <= -863.257))) or ((cint >= -257) and (cstring1 is not null and (cboolean1 >= 1)))) or (cstring2 rlike 'b')) or ((csmallint >= ctinyint) and ctimestamp2 is null))) (type: boolean)
                     Statistics: Num rows: 4778 Data size: 146682 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
                       expressions: cboolean1 (type: boolean), cfloat (type: float), cbigint (type: bigint), cint (type: int), cdouble (type: double), ctinyint (type: tinyint), csmallint (type: smallint)
-                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
+                      outputColumnNames: cboolean1, cfloat, cbigint, cint, cdouble, ctinyint, csmallint
                       Statistics: Num rows: 4778 Data size: 146682 Basic stats: COMPLETE Column stats: NONE
                       Group By Operator
-                        aggregations: max(_col1), sum(_col2), var_samp(_col3), avg(_col4), min(_col2), var_pop(_col2), sum(_col3), stddev_samp(_col5), stddev_pop(_col6), avg(_col3)
-                        keys: _col0 (type: boolean)
+                        aggregations: max(cfloat), sum(cbigint), var_samp(cint), avg(cdouble), min(cbigint), var_pop(cbigint), sum(cint), stddev_samp(ctinyint), stddev_pop(csmallint), avg(cint)
+                        keys: cboolean1 (type: boolean)
                         mode: hash
                         outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                         Statistics: Num rows: 4778 Data size: 146682 Basic stats: COMPLETE Column stats: NONE
@@ -2700,7 +2700,7 @@ STAGE PLANS:
                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                 Statistics: Num rows: 2389 Data size: 73341 Basic stats: COMPLETE Column stats: NONE
                 Select Operator
-                  expressions: _col0 (type: boolean), _col1 (type: float), ((UDFToDouble(_col2) - 10.175) + _col3) (type: double), _col5 (type: bigint), _col6 (type: double), (- (10.175 + UDFToDouble((- _col1)))) (type: double), (79.553 / _col6) (type: double), (_col3 % (79.553 / _col6)) (type: double), _col7 (type: bigint), _col8 (type: double), (-1.389 * UDFToDouble(_col5)) (type: double), (- _col1) (type: float), (UDFToDouble(_col7) - (-1.389 * UDFToDouble(_col5))) (type: double), _col9 (type: double), (- (UDFToDouble(_col7) - (-1.389 * UDFToDouble(_col5)))) (type: double), _col10 (type: double), (- _col10) (type: double), (_col10 * UDFToDouble(_col7)) (type: double), (-26.28 / UDFToDouble(_col1)) (type: double), _col2 (type: bigint), (UDFToDouble(_col2) - 10.175) (type: double), _col3 (type: double), (_col3 % UDFToDouble(_col1)) (type: double), (10.175 + UDFToDouble((- _col1))) (type: double), _col4 (type: double)
+                  expressions: _col0 (type: boolean), _col1 (type: float), ((_col2 - 10.175) + _col3) (type: double), _col5 (type: bigint), _col6 (type: double), (- (10.175 + (- _col1))) (type: double), (79.553 / _col6) (type: double), (_col3 % (79.553 / _col6)) (type: double), _col7 (type: bigint), _col8 (type: double), (-1.389 * _col5) (type: double), (- _col1) (type: float), (_col7 - (-1.389 * _col5)) (type: double), _col9 (type: double), (- (_col7 - (-1.389 * _col5))) (type: double), _col10 (type: double), (- _col10) (type: double), (_col10 * _col7) (type: double), (-26.28 / _col1) (type: double), _col2 (type: bigint), (_col2 - 10.175) (type: double), _col3 (type: double), (_col3 % _col1) (type: double), (10.175 + (- _col1)) (type: double), _col4 (type: double)
                   outputColumnNames: _col0, _col1, _col10, _col11, _col12, _col13, _col14, _col15, _col17, _col18, _col19, _col2, _col20, _col21, _col22, _col23, _col24, _col25, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                   Statistics: Num rows: 2389 Data size: 73341 Basic stats: COMPLETE Column stats: NONE
                   Reduce Output Operator
@@ -2847,9 +2847,9 @@ STAGE PLANS:
             Map Operator Tree:
                 TableScan
                   alias: test_count
-                  Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: COMPLETE
+                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE
                   Select Operator
-                    Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: COMPLETE
+                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE
                     Group By Operator
                       aggregations: count()
                       mode: hash
@@ -2912,13 +2912,13 @@ STAGE PLANS:
             Map Operator Tree:
                 TableScan
                   alias: test_count
-                  Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
+                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                   Select Operator
                     expressions: i (type: int)
-                    outputColumnNames: _col0
-                    Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
+                    outputColumnNames: i
+                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                     Group By Operator
-                      aggregations: count(_col0)
+                      aggregations: count(i)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -3093,10 +3093,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: ctinyint (type: tinyint)
-                    outputColumnNames: _col0
+                    outputColumnNames: ctinyint
                     Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: count(_col0)
+                      aggregations: count(ctinyint)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -3160,10 +3160,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: cint (type: int)
-                    outputColumnNames: _col0
+                    outputColumnNames: cint
                     Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: count(_col0)
+                      aggregations: count(cint)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -3227,10 +3227,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: cfloat (type: float)
-                    outputColumnNames: _col0
+                    outputColumnNames: cfloat
                     Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: count(_col0)
+                      aggregations: count(cfloat)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -3294,10 +3294,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: cstring1 (type: string)
-                    outputColumnNames: _col0
+                    outputColumnNames: cstring1
                     Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: count(_col0)
+                      aggregations: count(cstring1)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
@@ -3361,10 +3361,10 @@ STAGE PLANS:
                   Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                   Select Operator
                     expressions: cboolean1 (type: boolean)
-                    outputColumnNames: _col0
+                    outputColumnNames: cboolean1
                     Statistics: Num rows: 12288 Data size: 168 Basic stats: COMPLETE Column stats: NONE
                     Group By Operator
-                      aggregations: count(_col0)
+                      aggregations: count(cboolean1)
                       mode: hash
                       outputColumnNames: _col0
                       Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
-- 
1.7.9.5


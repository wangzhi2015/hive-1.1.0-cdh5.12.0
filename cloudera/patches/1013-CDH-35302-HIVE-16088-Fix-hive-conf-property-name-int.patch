From 3b4f2605d50b17171a00117027075025567a6481 Mon Sep 17 00:00:00 2001
From: Barna Zsombor Klara <zsombor.klara@cloudera.com>
Date: Thu, 2 Mar 2017 13:31:19 -0600
Subject: [PATCH 1013/1164] CDH-35302: HIVE-16088: Fix hive conf property name
 introduced in HIVE-12767 (Barna Zsombor Klara,
 reviewed by Sergio Pena)

Change-Id: I7adc2e47c18babf2fe13f46797615d219abfb929
---
 .../java/org/apache/hadoop/hive/conf/HiveConf.java |    2 +-
 .../org/apache/hadoop/hive/ql/exec/DDLTask.java    |    4 ++--
 .../clientpositive/parquet_int96_timestamp.q       |    4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
index 100531d..9f0e64b 100644
--- a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
+++ b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
@@ -924,7 +924,7 @@ public void setSparkConfigUpdated(boolean isSparkConfigUpdated) {
     HIVE_PARQUET_TIMESTAMP_SKIP_CONVERSION("hive.parquet.timestamp.skip.conversion", true,
       "Current Hive implementation of parquet stores timestamps to UTC, this flag allows skipping of the conversion" +
       "on reading parquet files from other tools"),
-    PARQUET_INT96_DEFAULT_UTC_WRITE_ZONE("parquet.mr.int96.enable.utc.write.zone", false,
+    HIVE_PARQUET_INT96_DEFAULT_UTC_WRITE_ZONE("hive.parquet.mr.int96.enable.utc.write.zone", false,
         "Enable this variable to use UTC as the default timezone for new Parquet tables."),
     HIVE_ORC_FILE_MEMORY_POOL("hive.exec.orc.memory.pool", 0.5f,
         "Maximum fraction of heap that can be used by ORC file writers"),
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
index 9fc4f14..7aef5db 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
@@ -4123,11 +4123,11 @@ private int createTable(Hive db, CreateTableDesc crtTbl) throws HiveException {
       }
     }
 
-    // If PARQUET_INT96_DEFAULT_UTC_WRITE_ZONE is set to True, then set new Parquet tables timezone
+    // If HIVE_PARQUET_INT96_DEFAULT_UTC_WRITE_ZONE is set to True, then set new Parquet tables timezone
     // to UTC by default (only if the table property is not set)
     if (tbl.getSerializationLib().equals(ParquetHiveSerDe.class.getName())) {
       SessionState ss = SessionState.get();
-      if (ss.getConf().getBoolVar(ConfVars.PARQUET_INT96_DEFAULT_UTC_WRITE_ZONE)) {
+      if (ss.getConf().getBoolVar(ConfVars.HIVE_PARQUET_INT96_DEFAULT_UTC_WRITE_ZONE)) {
         String parquetTimezone = tbl.getProperty(ParquetTableUtils.PARQUET_INT96_WRITE_ZONE_PROPERTY);
         if (parquetTimezone == null || parquetTimezone.isEmpty()) {
           tbl.setProperty(ParquetTableUtils.PARQUET_INT96_WRITE_ZONE_PROPERTY, ParquetTableUtils.PARQUET_INT96_NO_ADJUSTMENT_ZONE);
diff --git a/ql/src/test/queries/clientpositive/parquet_int96_timestamp.q b/ql/src/test/queries/clientpositive/parquet_int96_timestamp.q
index e5eb610..5de2c3f 100644
--- a/ql/src/test/queries/clientpositive/parquet_int96_timestamp.q
+++ b/ql/src/test/queries/clientpositive/parquet_int96_timestamp.q
@@ -1,7 +1,7 @@
 create table dummy (id int);
 insert into table dummy values (1);
 
-set parquet.mr.int96.enable.utc.write.zone=true;
+set hive.parquet.mr.int96.enable.utc.write.zone=true;
 set hive.parquet.timestamp.skip.conversion=false;
 
 -- read/write timestamps using UTC as default write zone
@@ -18,7 +18,7 @@ select * from timestamps;
 describe formatted timestamps;
 drop table timestamps;
 
-set parquet.mr.int96.enable.utc.write.zone=false;
+set hive.parquet.mr.int96.enable.utc.write.zone=false;
 
 -- read/write timestamps using local timezone
 create table timestamps (ts timestamp) stored as parquet;
-- 
1.7.9.5


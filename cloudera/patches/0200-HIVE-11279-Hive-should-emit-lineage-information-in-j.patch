From 0b332d9a12d14f6c9c7be8bf2a0c12de4e4bac22 Mon Sep 17 00:00:00 2001
From: Szehon Ho <szehon@cloudera.com>
Date: Fri, 17 Jul 2015 11:19:25 -0700
Subject: [PATCH 0200/1164] HIVE-11279 : Hive should emit lineage information
 in json compact format (Lenni Kuff via Szehon)

No code conflicts, just regenerated the test output

Conflicts:
	ql/src/test/results/clientpositive/lineage2.q.out
	ql/src/test/results/clientpositive/lineage3.q.out
---
 .../apache/hadoop/hive/ql/hooks/LineageLogger.java |    4 +-
 ql/src/test/results/clientpositive/lineage2.q.out  | 2259 +-------------------
 ql/src/test/results/clientpositive/lineage3.q.out  | 2002 +----------------
 3 files changed, 56 insertions(+), 4209 deletions(-)

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/hooks/LineageLogger.java b/ql/src/java/org/apache/hadoop/hive/ql/hooks/LineageLogger.java
index fc32af7..d615372 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/hooks/LineageLogger.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/hooks/LineageLogger.java
@@ -137,9 +137,7 @@ public void run(HookContext hookContext) {
       try {
         StringBuilderWriter out = new StringBuilderWriter(1024);
         JsonWriter writer = new JsonWriter(out);
-        writer.setIndent("  ");
 
-        out.append("POSTHOOK: LINEAGE: ");
         String queryStr = plan.getQueryStr().trim();
         writer.beginObject();
         writer.name("version").value(FORMAT_VERSION);
@@ -182,7 +180,7 @@ public void run(HookContext hookContext) {
           // Log to console
           log(lineage);
         } else {
-          // In none test mode, emit to a log file,
+          // In non-test mode, emit to a log file,
           // which can be different from the normal hive.log.
           // For example, using NoDeleteRollingFileAppender to
           // log to some file with different rolling policy.
diff --git a/ql/src/test/results/clientpositive/lineage2.q.out b/ql/src/test/results/clientpositive/lineage2.q.out
index c94d69a..bdf32b1 100644
--- a/ql/src/test/results/clientpositive/lineage2.q.out
+++ b/ql/src/test/results/clientpositive/lineage2.q.out
@@ -5,118 +5,12 @@ PREHOOK: type: CREATETABLE_AS_SELECT
 PREHOOK: Input: default@src1
 PREHOOK: Output: database:default
 PREHOOK: Output: default@src2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "3a39d46286e4c2cd2139c9bb248f7b4f",
-  "queryText": "create table src2 as select key key2, value value2 from src1",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"3a39d46286e4c2cd2139c9bb248f7b4f","queryText":"create table src2 as select key key2, value value2 from src1","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":1,"vertexType":"COLUMN","vertexId":"default.src2.value2"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 PREHOOK: query: select * from src1 where key is not null and value is not null limit 3
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "b5b224847b2333e790a2c229434a04c8",
-  "queryText": "select * from src1 where key is not null and value is not null limit 3",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2,
-        3
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(src1.key is not null and src1.value is not null)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"b5b224847b2333e790a2c229434a04c8","queryText":"select * from src1 where key is not null and value is not null limit 3","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2,3],"targets":[0,1],"expression":"(src1.key is not null and src1.value is not null)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"src1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"src1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 238	val_238
 	
 311	val_311
@@ -124,66 +18,7 @@ PREHOOK: query: select * from src1 where key > 10 and value > 'val' order by key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "773d9d0ea92e797eae292ae1eeea11ab",
-  "queryText": "select * from src1 where key > 10 and value > 'val' order by key limit 5",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2,
-        3
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "((UDFToDouble(src1.key) > UDFToDouble(10)) and (src1.value > 'val'))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"773d9d0ea92e797eae292ae1eeea11ab","queryText":"select * from src1 where key > 10 and value > 'val' order by key limit 5","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2,3],"targets":[0,1],"expression":"((UDFToDouble(src1.key) > UDFToDouble(10)) and (src1.value > 'val'))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"src1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"src1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 146	val_146
 150	val_150
 213	val_213
@@ -196,158 +31,17 @@ PREHOOK: type: CREATETABLE_AS_SELECT
 PREHOOK: Input: default@src1
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest1
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "712fe958c357bcfc978b95c43eb19084",
-  "queryText": "create table dest1 as select * from src1",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"712fe958c357bcfc978b95c43eb19084","queryText":"create table dest1 as select * from src1","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 PREHOOK: query: insert into table dest1 select * from src2
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src2
 PREHOOK: Output: default@dest1
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "ecc718a966d8887b18084a55dd96f0bc",
-  "queryText": "insert into table dest1 select * from src2",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"ecc718a966d8887b18084a55dd96f0bc","queryText":"insert into table dest1 select * from src2","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src2.value2"}]}
 PREHOOK: query: select key k, dest1.value from dest1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "416b6f4cd63edd4f9d8213d2d7819d21",
-  "queryText": "select key k, dest1.value from dest1",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "k"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "dest1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"416b6f4cd63edd4f9d8213d2d7819d21","queryText":"select key k, dest1.value from dest1","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"k"},{"id":1,"vertexType":"COLUMN","vertexId":"dest1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest1.value"}]}
 238	val_238
 	
 311	val_311
@@ -405,42 +99,7 @@ PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 PREHOOK: Input: default@src2
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "9b90d32255b615ccf680aaa080e0fade",
-  "queryText": "select key from src1 order by key\nunion all\nselect key2 key from src2 order by key",
-  "edges": [
-    {
-      "sources": [
-        1,
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "u1.key",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "u1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"9b90d32255b615ccf680aaa080e0fade","queryText":"select key from src1 order by key\nunion all\nselect key2 key from src2 order by key","edges":[{"sources":[1,2],"targets":[0],"expression":"u1.key","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"u1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src2.key2"}]}
 
 
 
@@ -495,55 +154,7 @@ PREHOOK: query: select key, count(1) a from dest1 group by key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "3901b5e3a164064736b3234355046340",
-  "queryText": "select key, count(1) a from dest1 group by key",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "count(1)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "a"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "TABLE",
-      "vertexId": "default.dest1"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"3901b5e3a164064736b3234355046340","queryText":"select key, count(1) a from dest1 group by key","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"count(1)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"key"},{"id":1,"vertexType":"COLUMN","vertexId":"a"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest1.key"},{"id":3,"vertexType":"TABLE","vertexId":"default.dest1"}]}
 	20
 128	2
 146	2
@@ -564,55 +175,7 @@ PREHOOK: query: select key k, count(*) from dest1 group by key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "0d5a212f10847aeaab31e8c31121e6d4",
-  "queryText": "select key k, count(*) from dest1 group by key",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "count(*)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "k"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "TABLE",
-      "vertexId": "default.dest1"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"0d5a212f10847aeaab31e8c31121e6d4","queryText":"select key k, count(*) from dest1 group by key","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"count(*)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"k"},{"id":1,"vertexType":"COLUMN","vertexId":"c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest1.key"},{"id":3,"vertexType":"TABLE","vertexId":"default.dest1"}]}
 	20
 128	2
 146	2
@@ -633,55 +196,7 @@ PREHOOK: query: select key k, count(value) from dest1 group by key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "56429eccb04ded722f5bd9d9d8cf7260",
-  "queryText": "select key k, count(value) from dest1 group by key",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "count(default.dest1.value)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "k"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"56429eccb04ded722f5bd9d9d8cf7260","queryText":"select key k, count(value) from dest1 group by key","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"count(default.dest1.value)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"k"},{"id":1,"vertexType":"COLUMN","vertexId":"c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest1.value"}]}
 	20
 128	2
 146	2
@@ -702,55 +217,7 @@ PREHOOK: query: select value, max(length(key)) from dest1 group by value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "7e1cfc3dece85b41b6f7c46365580cde",
-  "queryText": "select value, max(length(key)) from dest1 group by value",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "max(length(dest1.key))",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "value"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"7e1cfc3dece85b41b6f7c46365580cde","queryText":"select value, max(length(key)) from dest1 group by value","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"max(length(dest1.key))","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"value"},{"id":1,"vertexType":"COLUMN","vertexId":"c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest1.value"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest1.key"}]}
 	3
 val_146	3
 val_150	3
@@ -774,55 +241,7 @@ PREHOOK: query: select value, max(length(key)) from dest1 group by value order b
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "c6578ce1dd72498c4af33f20f164e483",
-  "queryText": "select value, max(length(key)) from dest1 group by value order by value limit 5",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "max(length(dest1.key))",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "value"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"c6578ce1dd72498c4af33f20f164e483","queryText":"select value, max(length(key)) from dest1 group by value order by value limit 5","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"max(length(dest1.key))","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"value"},{"id":1,"vertexType":"COLUMN","vertexId":"c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest1.value"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest1.key"}]}
 	3
 val_146	3
 val_150	3
@@ -832,55 +251,7 @@ PREHOOK: query: select key, length(value) from dest1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "91fbcea5cb34362071555cd93e8d0abe",
-  "queryText": "select key, length(value) from dest1",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "length(dest1.value)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"91fbcea5cb34362071555cd93e8d0abe","queryText":"select key, length(value) from dest1","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"length(dest1.value)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"key"},{"id":1,"vertexType":"COLUMN","vertexId":"c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest1.value"}]}
 238	7
 	0
 311	7
@@ -935,36 +306,7 @@ PREHOOK: query: select length(value) + 3 from dest1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "3d8a347cc9052111cb328938d37b9b03",
-  "queryText": "select length(value) + 3 from dest1",
-  "edges": [
-    {
-      "sources": [
-        1
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "(length(dest1.value) + 3)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "c0"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"3d8a347cc9052111cb328938d37b9b03","queryText":"select length(value) + 3 from dest1","edges":[{"sources":[1],"targets":[0],"expression":"(length(dest1.value) + 3)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"c0"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest1.value"}]}
 10
 3
 10
@@ -1019,29 +361,7 @@ PREHOOK: query: select 5 from dest1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "bae960bf4376ec00e37258469b17360d",
-  "queryText": "select 5 from dest1",
-  "edges": [
-    {
-      "sources": [],
-      "targets": [
-        0
-      ],
-      "expression": "5",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "c0"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"bae960bf4376ec00e37258469b17360d","queryText":"select 5 from dest1","edges":[{"sources":[],"targets":[0],"expression":"5","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"c0"}]}
 5
 5
 5
@@ -1096,29 +416,7 @@ PREHOOK: query: select 3 * 5 from dest1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "753abad4d55afd3df34fdc73abfcd44d",
-  "queryText": "select 3 * 5 from dest1",
-  "edges": [
-    {
-      "sources": [],
-      "targets": [
-        0
-      ],
-      "expression": "(3 * 5)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "c0"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"753abad4d55afd3df34fdc73abfcd44d","queryText":"select 3 * 5 from dest1","edges":[{"sources":[],"targets":[0],"expression":"(3 * 5)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"c0"}]}
 15
 15
 15
@@ -1177,485 +475,31 @@ PREHOOK: Input: default@src1
 PREHOOK: Input: default@src2
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "386791c174a4999fc916e300b5e76bf2",
-  "queryText": "create table dest2 as select * from src1 JOIN src2 ON src1.key = src2.key2",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4,
-        6
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(src1.key = src2.key2)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value2"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"386791c174a4999fc916e300b5e76bf2","queryText":"create table dest2 as select * from src1 JOIN src2 ON src1.key = src2.key2","edges":[{"sources":[4],"targets":[0],"edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[4,6],"targets":[0,1,2,3],"expression":"(src1.key = src2.key2)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest2.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest2.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest2.key2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest2.value2"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":5,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":6,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":7,"vertexType":"COLUMN","vertexId":"default.src2.value2"}]}
 PREHOOK: query: insert overwrite table dest2 select * from src1 JOIN src2 ON src1.key = src2.key2
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 PREHOOK: Input: default@src2
 PREHOOK: Output: default@dest2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "e494b771d94800dc3430bf5d0810cd9f",
-  "queryText": "insert overwrite table dest2 select * from src1 JOIN src2 ON src1.key = src2.key2",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4,
-        6
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(src1.key = src2.key2)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value2"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"e494b771d94800dc3430bf5d0810cd9f","queryText":"insert overwrite table dest2 select * from src1 JOIN src2 ON src1.key = src2.key2","edges":[{"sources":[4],"targets":[0],"edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[4,6],"targets":[0,1,2,3],"expression":"(src1.key = src2.key2)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest2.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest2.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest2.key2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest2.value2"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":5,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":6,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":7,"vertexType":"COLUMN","vertexId":"default.src2.value2"}]}
 PREHOOK: query: insert into table dest2 select * from src1 JOIN src2 ON src1.key = src2.key2
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 PREHOOK: Input: default@src2
 PREHOOK: Output: default@dest2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "efeaddd0d36105b1013b414627850dc2",
-  "queryText": "insert into table dest2 select * from src1 JOIN src2 ON src1.key = src2.key2",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4,
-        6
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(src1.key = src2.key2)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value2"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"efeaddd0d36105b1013b414627850dc2","queryText":"insert into table dest2 select * from src1 JOIN src2 ON src1.key = src2.key2","edges":[{"sources":[4],"targets":[0],"edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[4,6],"targets":[0,1,2,3],"expression":"(src1.key = src2.key2)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest2.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest2.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest2.key2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest2.value2"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":5,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":6,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":7,"vertexType":"COLUMN","vertexId":"default.src2.value2"}]}
 PREHOOK: query: insert into table dest2
   select * from src1 JOIN src2 ON length(src1.value) = length(src2.value2) + 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 PREHOOK: Input: default@src2
 PREHOOK: Output: default@dest2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "e9450a56b3d103642e06bef0e4f0d482",
-  "queryText": "insert into table dest2\n  select * from src1 JOIN src2 ON length(src1.value) = length(src2.value2) + 1",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5,
-        7
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(length(src1.value) = (length(src2.value2) + 1))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value2"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"e9450a56b3d103642e06bef0e4f0d482","queryText":"insert into table dest2\n  select * from src1 JOIN src2 ON length(src1.value) = length(src2.value2) + 1","edges":[{"sources":[4],"targets":[0],"edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[5,7],"targets":[0,1,2,3],"expression":"(length(src1.value) = (length(src2.value2) + 1))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest2.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest2.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest2.key2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest2.value2"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":5,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":6,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":7,"vertexType":"COLUMN","vertexId":"default.src2.value2"}]}
 PREHOOK: query: select * from src1 where length(key) > 2
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "4028c94d222d5dd221f651d414386972",
-  "queryText": "select * from src1 where length(key) > 2",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(length(src1.key) > 2)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"4028c94d222d5dd221f651d414386972","queryText":"select * from src1 where length(key) > 2","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2],"targets":[0,1],"expression":"(length(src1.key) > 2)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"src1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"src1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 238	val_238
 311	val_311
 255	val_255
@@ -1673,66 +517,7 @@ PREHOOK: query: select * from src1 where length(key) > 2 and value > 'a'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "5727531f7743cfcd60d634d8c835515f",
-  "queryText": "select * from src1 where length(key) > 2 and value > 'a'",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2,
-        3
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "((length(src1.key) > 2) and (src1.value > 'a'))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "src1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"5727531f7743cfcd60d634d8c835515f","queryText":"select * from src1 where length(key) > 2 and value > 'a'","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2,3],"targets":[0,1],"expression":"((length(src1.key) > 2) and (src1.value > 'a'))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"src1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"src1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 238	val_238
 311	val_311
 255	val_255
@@ -1752,238 +537,14 @@ PREHOOK: Input: default@src1
 PREHOOK: Input: default@src2
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest3
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "a2c4e9a3ec678039814f5d84b1e38ce4",
-  "queryText": "create table dest3 as\n  select * from src1 JOIN src2 ON src1.key = src2.key2 WHERE length(key) > 1",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(length(src1._col0) > 1)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4,
-        6
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(src1.key = src2.key2)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest3.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest3.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest3.key2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest3.value2"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"a2c4e9a3ec678039814f5d84b1e38ce4","queryText":"create table dest3 as\n  select * from src1 JOIN src2 ON src1.key = src2.key2 WHERE length(key) > 1","edges":[{"sources":[4],"targets":[0],"edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[4],"targets":[0,1,2,3],"expression":"(length(src1._col0) > 1)","edgeType":"PREDICATE"},{"sources":[4,6],"targets":[0,1,2,3],"expression":"(src1.key = src2.key2)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest3.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest3.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest3.key2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest3.value2"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":5,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":6,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":7,"vertexType":"COLUMN","vertexId":"default.src2.value2"}]}
 PREHOOK: query: insert overwrite table dest2
   select * from src1 JOIN src2 ON src1.key = src2.key2 WHERE length(key) > 3
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 PREHOOK: Input: default@src2
 PREHOOK: Output: default@dest2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "76d84512204ddc576ad4d93f252e4358",
-  "queryText": "insert overwrite table dest2\n  select * from src1 JOIN src2 ON src1.key = src2.key2 WHERE length(key) > 3",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(length(src1._col0) > 3)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4,
-        6
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(src1.key = src2.key2)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.key2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest2.value2"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.key2"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src2.value2"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"76d84512204ddc576ad4d93f252e4358","queryText":"insert overwrite table dest2\n  select * from src1 JOIN src2 ON src1.key = src2.key2 WHERE length(key) > 3","edges":[{"sources":[4],"targets":[0],"edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[4],"targets":[0,1,2,3],"expression":"(length(src1._col0) > 3)","edgeType":"PREDICATE"},{"sources":[4,6],"targets":[0,1,2,3],"expression":"(src1.key = src2.key2)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest2.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest2.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest2.key2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest2.value2"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":5,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":6,"vertexType":"COLUMN","vertexId":"default.src2.key2"},{"id":7,"vertexType":"COLUMN","vertexId":"default.src2.value2"}]}
 PREHOOK: query: drop table if exists dest_l1
 PREHOOK: type: DROPTABLE
 PREHOOK: query: CREATE TABLE dest_l1(key INT, value STRING) STORED AS TEXTFILE
@@ -2005,73 +566,7 @@ PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
 PREHOOK: Output: default@dest_l1
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "60b589744e2527dd235a6c8168d6a653",
-  "queryText": "INSERT OVERWRITE TABLE dest_l1\nSELECT j.*\nFROM (SELECT t1.key, p1.value\n      FROM src1 t1\n      LEFT OUTER JOIN src p1\n      ON (t1.key = p1.key)\n      UNION ALL\n      SELECT t2.key, p2.value\n      FROM src1 t2\n      LEFT OUTER JOIN src p2\n      ON (t2.key = p2.key)) j",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "UDFToInteger(_col0)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "_col1",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4,
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(p1.key = t1.key)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l1.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l1.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src.value"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src.key"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"60b589744e2527dd235a6c8168d6a653","queryText":"INSERT OVERWRITE TABLE dest_l1\nSELECT j.*\nFROM (SELECT t1.key, p1.value\n      FROM src1 t1\n      LEFT OUTER JOIN src p1\n      ON (t1.key = p1.key)\n      UNION ALL\n      SELECT t2.key, p2.value\n      FROM src1 t2\n      LEFT OUTER JOIN src p2\n      ON (t2.key = p2.key)) j","edges":[{"sources":[2],"targets":[0],"expression":"UDFToInteger(_col0)","edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"_col1","edgeType":"PROJECTION"},{"sources":[4,2],"targets":[0,1],"expression":"(p1.key = t1.key)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_l1.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_l1.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src.value"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src.key"}]}
 PREHOOK: query: drop table if exists emp
 PREHOOK: type: DROPTABLE
 PREHOOK: query: drop table if exists dept
@@ -2112,185 +607,7 @@ PREHOOK: Input: default@dept
 PREHOOK: Input: default@emp
 PREHOOK: Input: default@project
 PREHOOK: Output: default@tgt
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "f59797e0422d2e51515063374dfac361",
-  "queryText": "INSERT INTO TABLE tgt\nSELECT emd.dept_name, emd.name, emd.emp_id, emd.mgr_id, p.project_id, p.project_name\nFROM (\n  SELECT d.dept_name, em.name, em.emp_id, em.mgr_id, em.dept_id\n  FROM (\n    SELECT e.name, e.dept_id, e.emp_id emp_id, m.emp_id mgr_id\n    FROM emp e JOIN emp m ON e.emp_id = m.emp_id\n    ) em\n  JOIN dept d ON d.dept_id = em.dept_id\n  ) emd JOIN project p ON emd.dept_id = p.project_id",
-  "edges": [
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "emd._col1",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        8
-      ],
-      "targets": [
-        2
-      ],
-      "expression": "emd._col2",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        8
-      ],
-      "targets": [
-        3
-      ],
-      "expression": "emd._col3",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        9
-      ],
-      "targets": [
-        4
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        10
-      ],
-      "targets": [
-        5
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        8
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3,
-        4,
-        5
-      ],
-      "expression": "(e.emp_id = m.emp_id)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        11,
-        12
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3,
-        4,
-        5
-      ],
-      "expression": "(e._col1 = d.dept_id)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        11,
-        9
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3,
-        4,
-        5
-      ],
-      "expression": "(em._col4 = p.project_id)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.tgt.dept_name"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.tgt.name"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.tgt.emp_id"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.tgt.mgr_id"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.tgt.proj_id"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.tgt.proj_name"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dept.dept_name"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.emp.name"
-    },
-    {
-      "id": 8,
-      "vertexType": "COLUMN",
-      "vertexId": "default.emp.emp_id"
-    },
-    {
-      "id": 9,
-      "vertexType": "COLUMN",
-      "vertexId": "default.project.project_id"
-    },
-    {
-      "id": 10,
-      "vertexType": "COLUMN",
-      "vertexId": "default.project.project_name"
-    },
-    {
-      "id": 11,
-      "vertexType": "COLUMN",
-      "vertexId": "default.emp.dept_id"
-    },
-    {
-      "id": 12,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dept.dept_id"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"f59797e0422d2e51515063374dfac361","queryText":"INSERT INTO TABLE tgt\nSELECT emd.dept_name, emd.name, emd.emp_id, emd.mgr_id, p.project_id, p.project_name\nFROM (\n  SELECT d.dept_name, em.name, em.emp_id, em.mgr_id, em.dept_id\n  FROM (\n    SELECT e.name, e.dept_id, e.emp_id emp_id, m.emp_id mgr_id\n    FROM emp e JOIN emp m ON e.emp_id = m.emp_id\n    ) em\n  JOIN dept d ON d.dept_id = em.dept_id\n  ) emd JOIN project p ON emd.dept_id = p.project_id","edges":[{"sources":[6],"targets":[0],"edgeType":"PROJECTION"},{"sources":[7],"targets":[1],"expression":"emd._col1","edgeType":"PROJECTION"},{"sources":[8],"targets":[2],"expression":"emd._col2","edgeType":"PROJECTION"},{"sources":[8],"targets":[3],"expression":"emd._col3","edgeType":"PROJECTION"},{"sources":[9],"targets":[4],"edgeType":"PROJECTION"},{"sources":[10],"targets":[5],"edgeType":"PROJECTION"},{"sources":[8],"targets":[0,1,2,3,4,5],"expression":"(e.emp_id = m.emp_id)","edgeType":"PREDICATE"},{"sources":[11,12],"targets":[0,1,2,3,4,5],"expression":"(e._col1 = d.dept_id)","edgeType":"PREDICATE"},{"sources":[11,9],"targets":[0,1,2,3,4,5],"expression":"(em._col4 = p.project_id)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.tgt.dept_name"},{"id":1,"vertexType":"COLUMN","vertexId":"default.tgt.name"},{"id":2,"vertexType":"COLUMN","vertexId":"default.tgt.emp_id"},{"id":3,"vertexType":"COLUMN","vertexId":"default.tgt.mgr_id"},{"id":4,"vertexType":"COLUMN","vertexId":"default.tgt.proj_id"},{"id":5,"vertexType":"COLUMN","vertexId":"default.tgt.proj_name"},{"id":6,"vertexType":"COLUMN","vertexId":"default.dept.dept_name"},{"id":7,"vertexType":"COLUMN","vertexId":"default.emp.name"},{"id":8,"vertexType":"COLUMN","vertexId":"default.emp.emp_id"},{"id":9,"vertexType":"COLUMN","vertexId":"default.project.project_id"},{"id":10,"vertexType":"COLUMN","vertexId":"default.project.project_name"},{"id":11,"vertexType":"COLUMN","vertexId":"default.emp.dept_id"},{"id":12,"vertexType":"COLUMN","vertexId":"default.dept.dept_id"}]}
 PREHOOK: query: drop table if exists dest_l2
 PREHOOK: type: DROPTABLE
 PREHOOK: query: create table dest_l2 (id int, c1 tinyint, c2 int, c3 bigint) stored as textfile
@@ -2301,68 +618,7 @@ PREHOOK: query: insert into dest_l2 values(0, 1, 100, 10000)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@values__tmp__table__1
 PREHOOK: Output: default@dest_l2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "e001334e3f8384806b0f25a7c303045f",
-  "queryText": "insert into dest_l2 values(0, 1, 100, 10000)",
-  "edges": [
-    {
-      "sources": [],
-      "targets": [
-        0
-      ],
-      "expression": "UDFToInteger(_col0)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        1
-      ],
-      "expression": "UDFToByte(_col1)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        2
-      ],
-      "expression": "UDFToInteger(_col2)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        3
-      ],
-      "expression": "UDFToLong(_col3)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.id"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c3"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"e001334e3f8384806b0f25a7c303045f","queryText":"insert into dest_l2 values(0, 1, 100, 10000)","edges":[{"sources":[],"targets":[0],"expression":"UDFToInteger(_col0)","edgeType":"PROJECTION"},{"sources":[],"targets":[1],"expression":"UDFToByte(_col1)","edgeType":"PROJECTION"},{"sources":[],"targets":[2],"expression":"UDFToInteger(_col2)","edgeType":"PROJECTION"},{"sources":[],"targets":[3],"expression":"UDFToLong(_col3)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_l2.id"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_l2.c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest_l2.c2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest_l2.c3"}]}
 PREHOOK: query: select * from (
   select c1 + c2 x from dest_l2
   union all
@@ -2370,48 +626,7 @@ PREHOOK: query: select * from (
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest_l2
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "15bd053955badc6aa6262d20d52a41c8",
-  "queryText": "select * from (\n  select c1 + c2 x from dest_l2\n  union all\n  select sum(c3) x from (select c3 from dest_l2) v1) v2 order by x",
-  "edges": [
-    {
-      "sources": [
-        1,
-        2,
-        3
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "_col0",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "v2.x"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c3"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"15bd053955badc6aa6262d20d52a41c8","queryText":"select * from (\n  select c1 + c2 x from dest_l2\n  union all\n  select sum(c3) x from (select c3 from dest_l2) v1) v2 order by x","edges":[{"sources":[1,2,3],"targets":[0],"expression":"_col0","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"v2.x"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_l2.c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest_l2.c2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest_l2.c3"}]}
 101
 10000
 PREHOOK: query: drop table if exists dest_l3
@@ -2424,60 +639,7 @@ PREHOOK: query: insert into dest_l3 values(0, "s1", "s2", 15)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@values__tmp__table__2
 PREHOOK: Output: default@dest_l3
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "09df51ba6ba2d07f2304523ee505f094",
-  "queryText": "insert into dest_l3 values(0, \"s1\", \"s2\", 15)",
-  "edges": [
-    {
-      "sources": [],
-      "targets": [
-        0
-      ],
-      "expression": "UDFToInteger(_col0)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        1,
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        3
-      ],
-      "expression": "UDFToInteger(_col3)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.id"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.c3"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"09df51ba6ba2d07f2304523ee505f094","queryText":"insert into dest_l3 values(0, \"s1\", \"s2\", 15)","edges":[{"sources":[],"targets":[0],"expression":"UDFToInteger(_col0)","edgeType":"PROJECTION"},{"sources":[],"targets":[1,2],"edgeType":"PROJECTION"},{"sources":[],"targets":[3],"expression":"UDFToInteger(_col3)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_l3.id"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_l3.c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest_l3.c2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest_l3.c3"}]}
 PREHOOK: query: select sum(a.c1) over (partition by a.c1 order by a.id)
 from dest_l2 a
 where a.c2 <> 10
@@ -2486,68 +648,7 @@ having count(a.c2) > 0
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest_l2
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "4f9de2166bf3f94848a96e9642c60683",
-  "queryText": "select sum(a.c1) over (partition by a.c1 order by a.id)\nfrom dest_l2 a\nwhere a.c2 <> 10\ngroup by a.c1, a.c2, a.id\nhaving count(a.c2) > 0",
-  "edges": [
-    {
-      "sources": [
-        1,
-        2,
-        3
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "_wcol0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "(a.c2 <> 10)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "(count(default.dest_l2.c2) > 0)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "c0"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.id"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"4f9de2166bf3f94848a96e9642c60683","queryText":"select sum(a.c1) over (partition by a.c1 order by a.id)\nfrom dest_l2 a\nwhere a.c2 <> 10\ngroup by a.c1, a.c2, a.id\nhaving count(a.c2) > 0","edges":[{"sources":[1,2,3],"targets":[0],"expression":"_wcol0","edgeType":"PROJECTION"},{"sources":[2],"targets":[0],"expression":"(a.c2 <> 10)","edgeType":"PREDICATE"},{"sources":[2],"targets":[0],"expression":"(count(default.dest_l2.c2) > 0)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"c0"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_l2.c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest_l2.c2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest_l2.id"}]}
 1
 PREHOOK: query: select sum(a.c1), count(b.c1), b.c2, b.c3
 from dest_l2 a join dest_l3 b on (a.id = b.id)
@@ -2559,150 +660,7 @@ PREHOOK: type: QUERY
 PREHOOK: Input: default@dest_l2
 PREHOOK: Input: default@dest_l3
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "0bcc04b33793003741a9d49c2ccc285f",
-  "queryText": "select sum(a.c1), count(b.c1), b.c2, b.c3\nfrom dest_l2 a join dest_l3 b on (a.id = b.id)\nwhere a.c2 <> 10 and b.c3 > 0\ngroup by a.c1, a.c2, a.id, b.c1, b.c2, b.c3\nhaving count(a.c2) > 0\norder by b.c3 limit 5",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "sum(default.dest_l2.c1)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "count(default.dest_l3.c1)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        8,
-        7
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "((a._col2 <> 10) and (b._col10 > 0))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        8
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(count(default.dest_l2.c2) > 0)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        9,
-        10
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(a.id = b.id)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "_c0"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "_c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "b.c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "b.c3"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c1"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.c1"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.c2"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.c3"
-    },
-    {
-      "id": 8,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c2"
-    },
-    {
-      "id": 9,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.id"
-    },
-    {
-      "id": 10,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.id"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"0bcc04b33793003741a9d49c2ccc285f","queryText":"select sum(a.c1), count(b.c1), b.c2, b.c3\nfrom dest_l2 a join dest_l3 b on (a.id = b.id)\nwhere a.c2 <> 10 and b.c3 > 0\ngroup by a.c1, a.c2, a.id, b.c1, b.c2, b.c3\nhaving count(a.c2) > 0\norder by b.c3 limit 5","edges":[{"sources":[4],"targets":[0],"expression":"sum(default.dest_l2.c1)","edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"expression":"count(default.dest_l3.c1)","edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[8,7],"targets":[0,1,2,3],"expression":"((a._col2 <> 10) and (b._col10 > 0))","edgeType":"PREDICATE"},{"sources":[8],"targets":[0,1,2,3],"expression":"(count(default.dest_l2.c2) > 0)","edgeType":"PREDICATE"},{"sources":[9,10],"targets":[0,1,2,3],"expression":"(a.id = b.id)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"_c0"},{"id":1,"vertexType":"COLUMN","vertexId":"_c1"},{"id":2,"vertexType":"COLUMN","vertexId":"b.c2"},{"id":3,"vertexType":"COLUMN","vertexId":"b.c3"},{"id":4,"vertexType":"COLUMN","vertexId":"default.dest_l2.c1"},{"id":5,"vertexType":"COLUMN","vertexId":"default.dest_l3.c1"},{"id":6,"vertexType":"COLUMN","vertexId":"default.dest_l3.c2"},{"id":7,"vertexType":"COLUMN","vertexId":"default.dest_l3.c3"},{"id":8,"vertexType":"COLUMN","vertexId":"default.dest_l2.c2"},{"id":9,"vertexType":"COLUMN","vertexId":"default.dest_l2.id"},{"id":10,"vertexType":"COLUMN","vertexId":"default.dest_l3.id"}]}
 1	1	s2	15
 PREHOOK: query: drop table if exists t
 PREHOOK: type: DROPTABLE
@@ -2715,93 +673,7 @@ PREHOOK: Input: default@dest_l2
 PREHOOK: Input: default@dest_l3
 PREHOOK: Output: database:default
 PREHOOK: Output: default@t
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "0d2f15b494111ffe236d5be42a76fa28",
-  "queryText": "create table t as\nselect distinct a.c2, a.c3 from dest_l2 a\ninner join dest_l3 b on (a.id = b.id)\nwhere a.id > 0 and b.c3 = 15",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4,
-        5
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "((a._col0 > 0) and (b._col10 = 15))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4,
-        6
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(a.id = b.id)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.t.c2"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.t.c3"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.c3"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l2.id"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.c3"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_l3.id"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"0d2f15b494111ffe236d5be42a76fa28","queryText":"create table t as\nselect distinct a.c2, a.c3 from dest_l2 a\ninner join dest_l3 b on (a.id = b.id)\nwhere a.id > 0 and b.c3 = 15","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[4,5],"targets":[0,1],"expression":"((a._col0 > 0) and (b._col10 = 15))","edgeType":"PREDICATE"},{"sources":[4,6],"targets":[0,1],"expression":"(a.id = b.id)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.t.c2"},{"id":1,"vertexType":"COLUMN","vertexId":"default.t.c3"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest_l2.c2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest_l2.c3"},{"id":4,"vertexType":"COLUMN","vertexId":"default.dest_l2.id"},{"id":5,"vertexType":"COLUMN","vertexId":"default.dest_l3.c3"},{"id":6,"vertexType":"COLUMN","vertexId":"default.dest_l3.id"}]}
 PREHOOK: query: SELECT substr(src1.key,1,1), count(DISTINCT substr(src1.value,5)),
 concat(substr(src1.key,1,1),sum(substr(src1.value,5)))
 from src1
@@ -2809,72 +681,7 @@ GROUP BY substr(src1.key,1,1)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "5b1022708124ee2b80f9e2e8a0dcb15c",
-  "queryText": "SELECT substr(src1.key,1,1), count(DISTINCT substr(src1.value,5)),\nconcat(substr(src1.key,1,1),sum(substr(src1.value,5)))\nfrom src1\nGROUP BY substr(src1.key,1,1)",
-  "edges": [
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "substr(src1.key, 1, 1)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "count(DISTINCT substr(src1.value, 5))",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3,
-        4
-      ],
-      "targets": [
-        2
-      ],
-      "expression": "concat(substr(src1.key, 1, 1), sum(substr(src1.value, 5)))",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "c0"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"5b1022708124ee2b80f9e2e8a0dcb15c","queryText":"SELECT substr(src1.key,1,1), count(DISTINCT substr(src1.value,5)),\nconcat(substr(src1.key,1,1),sum(substr(src1.value,5)))\nfrom src1\nGROUP BY substr(src1.key,1,1)","edges":[{"sources":[3],"targets":[0],"expression":"substr(src1.key, 1, 1)","edgeType":"PROJECTION"},{"sources":[4],"targets":[1],"expression":"count(DISTINCT substr(src1.value, 5))","edgeType":"PROJECTION"},{"sources":[3,4],"targets":[2],"expression":"concat(substr(src1.key, 1, 1), sum(substr(src1.value, 5)))","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"c0"},{"id":1,"vertexType":"COLUMN","vertexId":"c1"},{"id":2,"vertexType":"COLUMN","vertexId":"c2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":4,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 	7	1543.0
 1	3	1296.0
 2	6	21257.0
diff --git a/ql/src/test/results/clientpositive/lineage3.q.out b/ql/src/test/results/clientpositive/lineage3.q.out
index c4adc80..33c3f73 100644
--- a/ql/src/test/results/clientpositive/lineage3.q.out
+++ b/ql/src/test/results/clientpositive/lineage3.q.out
@@ -8,35 +8,7 @@ PREHOOK: type: CREATETABLE_AS_SELECT
 PREHOOK: Input: default@src1
 PREHOOK: Output: database:default
 PREHOOK: Output: default@t
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "761b3a1f405d8e719d3f0c9147b57a23",
-  "queryText": "create table t as\nselect * from\n  (select * from\n     (select key from src1 limit 1) v1) v2",
-  "edges": [
-    {
-      "sources": [
-        1
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.t.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"761b3a1f405d8e719d3f0c9147b57a23","queryText":"create table t as\nselect * from\n  (select * from\n     (select key from src1 limit 1) v1) v2","edges":[{"sources":[1],"targets":[0],"edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.t.key"},{"id":1,"vertexType":"COLUMN","vertexId":"default.src1.key"}]}
 PREHOOK: query: drop table if exists dest_l1
 PREHOOK: type: DROPTABLE
 PREHOOK: query: create table dest_l1(a int, b varchar(128))
@@ -51,66 +23,7 @@ where cint is not null and cint < 0 order by cint, cs limit 5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Output: default@dest_l1@ds=today
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "2b5891d094ff74e23ec6acf5b4990f45",
-  "queryText": "insert into table dest_l1 partition (ds='today')\nselect cint, cast(cstring1 as varchar(128)) as cs\nfrom alltypesorc\nwhere cint is not null and cint < 0 order by cint, cs limit 5",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "CAST( alltypesorc.cstring1 AS varchar(128))",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(alltypesorc.cint is not null and (alltypesorc.cint < 0))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "cint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "cs"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cstring1"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"2b5891d094ff74e23ec6acf5b4990f45","queryText":"insert into table dest_l1 partition (ds='today')\nselect cint, cast(cstring1 as varchar(128)) as cs\nfrom alltypesorc\nwhere cint is not null and cint < 0 order by cint, cs limit 5","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"CAST( alltypesorc.cstring1 AS varchar(128))","edgeType":"PROJECTION"},{"sources":[2],"targets":[0,1],"expression":"(alltypesorc.cint is not null and (alltypesorc.cint < 0))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"cint"},{"id":1,"vertexType":"COLUMN","vertexId":"cs"},{"id":2,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cstring1"}]}
 PREHOOK: query: insert into table dest_l1 partition (ds='tomorrow')
 select min(cint), cast(min(cstring1) as varchar(128)) as cs
 from alltypesorc
@@ -120,149 +33,13 @@ having min(cbigint) > 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Output: default@dest_l1@ds=tomorrow
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "4ad6338a8abfe3fe0342198fcbd1f11d",
-  "queryText": "insert into table dest_l1 partition (ds='tomorrow')\nselect min(cint), cast(min(cstring1) as varchar(128)) as cs\nfrom alltypesorc\nwhere cint is not null and cboolean1 = true\ngroup by csmallint\nhaving min(cbigint) > 10",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "min(default.alltypesorc.cint)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "CAST( min(default.alltypesorc.cstring1) AS varchar(128))",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2,
-        4
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(alltypesorc.cint is not null and (alltypesorc.cboolean1 = true))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(min(default.alltypesorc.cbigint) > 10)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "c0"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "cs"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cstring1"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean1"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cbigint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"4ad6338a8abfe3fe0342198fcbd1f11d","queryText":"insert into table dest_l1 partition (ds='tomorrow')\nselect min(cint), cast(min(cstring1) as varchar(128)) as cs\nfrom alltypesorc\nwhere cint is not null and cboolean1 = true\ngroup by csmallint\nhaving min(cbigint) > 10","edges":[{"sources":[2],"targets":[0],"expression":"min(default.alltypesorc.cint)","edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"CAST( min(default.alltypesorc.cstring1) AS varchar(128))","edgeType":"PROJECTION"},{"sources":[2,4],"targets":[0,1],"expression":"(alltypesorc.cint is not null and (alltypesorc.cboolean1 = true))","edgeType":"PREDICATE"},{"sources":[5],"targets":[0,1],"expression":"(min(default.alltypesorc.cbigint) > 10)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"c0"},{"id":1,"vertexType":"COLUMN","vertexId":"cs"},{"id":2,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cstring1"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean1"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cbigint"}]}
 PREHOOK: query: select cint, rank() over(order by cint) from alltypesorc
 where cint > 10 and cint < 10000 limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "351b08ec58591554ec10a6ded68ef25f",
-  "queryText": "select cint, rank() over(order by cint) from alltypesorc\nwhere cint > 10 and cint < 10000 limit 10",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "_wcol0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "((alltypesorc.cint > 10) and (alltypesorc.cint < 10000))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "cint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"351b08ec58591554ec10a6ded68ef25f","queryText":"select cint, rank() over(order by cint) from alltypesorc\nwhere cint > 10 and cint < 10000 limit 10","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[2],"targets":[1],"expression":"_wcol0","edgeType":"PROJECTION"},{"sources":[2],"targets":[0,1],"expression":"((alltypesorc.cint > 10) and (alltypesorc.cint < 10000))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"cint"},{"id":1,"vertexType":"COLUMN","vertexId":"c1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"}]}
 762	1
 762	1
 762	1
@@ -281,95 +58,7 @@ order by a.ctinyint, a.cint
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "40c3faa7abd1cdb7f12c1047a8a1d2ce",
-  "queryText": "select a.ctinyint, a.cint, count(a.cdouble)\n  over(partition by a.ctinyint order by a.cint desc\n    rows between 1 preceding and 1 following)\nfrom alltypesorc a inner join alltypesorc b on a.cint = b.cbigint\norder by a.ctinyint, a.cint",
-  "edges": [
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3,
-        4,
-        5,
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "expression": "_wcol0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4,
-        6
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(UDFToLong(a.cint) = a.cbigint)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "a.ctinyint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "a.cint"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cdouble"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cbigint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"40c3faa7abd1cdb7f12c1047a8a1d2ce","queryText":"select a.ctinyint, a.cint, count(a.cdouble)\n  over(partition by a.ctinyint order by a.cint desc\n    rows between 1 preceding and 1 following)\nfrom alltypesorc a inner join alltypesorc b on a.cint = b.cbigint\norder by a.ctinyint, a.cint","edges":[{"sources":[3],"targets":[0],"edgeType":"PROJECTION"},{"sources":[4],"targets":[1],"edgeType":"PROJECTION"},{"sources":[3,4,5,6],"targets":[2],"expression":"_wcol0","edgeType":"PROJECTION"},{"sources":[4,6],"targets":[0,1,2],"expression":"(UDFToLong(a.cint) = a.cbigint)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"a.ctinyint"},{"id":1,"vertexType":"COLUMN","vertexId":"a.cint"},{"id":2,"vertexType":"COLUMN","vertexId":"c2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cdouble"},{"id":6,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cbigint"}]}
 PREHOOK: query: with v2 as
   (select cdouble, count(cint) over() a,
     sum(cint + cbigint) over(partition by cboolean1) b
@@ -379,122 +68,7 @@ order by 1, 2, 3 limit 5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "a1487a49aee6bd1e81b75185b21cfb54",
-  "queryText": "with v2 as\n  (select cdouble, count(cint) over() a,\n    sum(cint + cbigint) over(partition by cboolean1) b\n    from (select * from alltypesorc) v1)\nselect cdouble, a, b, a + b, cdouble + a from v2\norder by 1, 2, 3 limit 5",
-  "edges": [
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6,
-        7,
-        5,
-        8
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "_wcol0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6,
-        7,
-        5,
-        8
-      ],
-      "targets": [
-        2
-      ],
-      "expression": "_wcol1",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6,
-        7,
-        5,
-        8
-      ],
-      "targets": [
-        3
-      ],
-      "expression": "(_wcol0 + _wcol1)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5,
-        6,
-        7,
-        8
-      ],
-      "targets": [
-        4
-      ],
-      "expression": "(alltypesorc.cdouble + UDFToDouble(_wcol0))",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "cdouble"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "a"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "b"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "c3"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "c4"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cdouble"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cbigint"
-    },
-    {
-      "id": 8,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean1"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"a1487a49aee6bd1e81b75185b21cfb54","queryText":"with v2 as\n  (select cdouble, count(cint) over() a,\n    sum(cint + cbigint) over(partition by cboolean1) b\n    from (select * from alltypesorc) v1)\nselect cdouble, a, b, a + b, cdouble + a from v2\norder by 1, 2, 3 limit 5","edges":[{"sources":[5],"targets":[0],"edgeType":"PROJECTION"},{"sources":[6,7,5,8],"targets":[1],"expression":"_wcol0","edgeType":"PROJECTION"},{"sources":[6,7,5,8],"targets":[2],"expression":"_wcol1","edgeType":"PROJECTION"},{"sources":[6,7,5,8],"targets":[3],"expression":"(_wcol0 + _wcol1)","edgeType":"PROJECTION"},{"sources":[5,6,7,8],"targets":[4],"expression":"(alltypesorc.cdouble + UDFToDouble(_wcol0))","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"cdouble"},{"id":1,"vertexType":"COLUMN","vertexId":"a"},{"id":2,"vertexType":"COLUMN","vertexId":"b"},{"id":3,"vertexType":"COLUMN","vertexId":"c3"},{"id":4,"vertexType":"COLUMN","vertexId":"c4"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cdouble"},{"id":6,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":7,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cbigint"},{"id":8,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean1"}]}
 12205.0	9173	-919551973060	-919551963887	21378.0
 6723.0	9173	-919551973060	-919551963887	15896.0
 13776.0	9173	-919551973060	-919551963887	22949.0
@@ -513,128 +87,7 @@ order by 1, 2, 3, 4 limit 5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "890b55d7a07682c67354eb0cabb1045e",
-  "queryText": "select a.cbigint, a.ctinyint, b.cint, b.ctinyint\nfrom\n  (select ctinyint, cbigint from alltypesorc\n   union all\n   select ctinyint, cbigint from alltypesorc) a\n  inner join\n  alltypesorc b\n  on (a.ctinyint = b.ctinyint)\nwhere b.ctinyint < 100\norder by 1, 2, 3, 4 limit 5",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "_col1",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "_col0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(alltypesorc.ctinyint < 100)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(_col0 < 100)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(_col0 = alltypesorc.ctinyint)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "a.cbigint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "a.ctinyint"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "b.cint"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "b.ctinyint"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cbigint"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"890b55d7a07682c67354eb0cabb1045e","queryText":"select a.cbigint, a.ctinyint, b.cint, b.ctinyint\nfrom\n  (select ctinyint, cbigint from alltypesorc\n   union all\n   select ctinyint, cbigint from alltypesorc) a\n  inner join\n  alltypesorc b\n  on (a.ctinyint = b.ctinyint)\nwhere b.ctinyint < 100\norder by 1, 2, 3, 4 limit 5","edges":[{"sources":[4],"targets":[0],"expression":"_col1","edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"expression":"_col0","edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"edgeType":"PROJECTION"},{"sources":[5],"targets":[3],"edgeType":"PROJECTION"},{"sources":[5],"targets":[0,1,2,3],"expression":"(alltypesorc.ctinyint < 100)","edgeType":"PREDICATE"},{"sources":[5],"targets":[0,1,2,3],"expression":"(_col0 < 100)","edgeType":"PREDICATE"},{"sources":[5],"targets":[0,1,2,3],"expression":"(_col0 = alltypesorc.ctinyint)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"a.cbigint"},{"id":1,"vertexType":"COLUMN","vertexId":"a.ctinyint"},{"id":2,"vertexType":"COLUMN","vertexId":"b.cint"},{"id":3,"vertexType":"COLUMN","vertexId":"b.ctinyint"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cbigint"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":6,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"}]}
 -47746898	-51	440161865	-51
 -47746898	-51	NULL	-51
 -47746898	-51	-637509859	-51
@@ -653,185 +106,7 @@ and x.ctinyint + length(c.cstring2) < 1000
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "3a12ad24b2622a8958df12d0bdc60f8a",
-  "queryText": "select x.ctinyint, x.cint, c.cbigint-100, c.cstring1\nfrom alltypesorc c\njoin (\n   select a.ctinyint ctinyint, b.cint cint\n   from (select * from alltypesorc a where cboolean1=false) a\n   join alltypesorc b on (a.cint = b.cbigint - 224870380)\n ) x on (x.cint = c.cint)\nwhere x.ctinyint > 10\nand x.cint < 4.5\nand x.ctinyint + length(c.cstring2) < 1000",
-  "edges": [
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "_col5",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        2
-      ],
-      "expression": "(c.cbigint - UDFToLong(100))",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        3
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(UDFToDouble(c.cint) < 4.5)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        8
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "((UDFToInteger(_col4) + length(c.cstring2)) < 1000)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "(c.cint = c.cint)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        9,
-        4
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "((c.cboolean1 = false) and (c.ctinyint > 10))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        6,
-        5
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "((c.cbigint - UDFToLong(224870380)) = UDFToLong(c.cint))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4,
-        8
-      ],
-      "targets": [
-        0,
-        1,
-        2,
-        3
-      ],
-      "expression": "((UDFToInteger(c.ctinyint) + length(c.cstring2)) < 1000)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "x.ctinyint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "x.cint"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "c2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "c.cstring1"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cbigint"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cstring1"
-    },
-    {
-      "id": 8,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cstring2"
-    },
-    {
-      "id": 9,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean1"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"3a12ad24b2622a8958df12d0bdc60f8a","queryText":"select x.ctinyint, x.cint, c.cbigint-100, c.cstring1\nfrom alltypesorc c\njoin (\n   select a.ctinyint ctinyint, b.cint cint\n   from (select * from alltypesorc a where cboolean1=false) a\n   join alltypesorc b on (a.cint = b.cbigint - 224870380)\n ) x on (x.cint = c.cint)\nwhere x.ctinyint > 10\nand x.cint < 4.5\nand x.ctinyint + length(c.cstring2) < 1000","edges":[{"sources":[4],"targets":[0],"edgeType":"PROJECTION"},{"sources":[5],"targets":[1],"expression":"_col5","edgeType":"PROJECTION"},{"sources":[6],"targets":[2],"expression":"(c.cbigint - UDFToLong(100))","edgeType":"PROJECTION"},{"sources":[7],"targets":[3],"edgeType":"PROJECTION"},{"sources":[5],"targets":[0,1,2,3],"expression":"(UDFToDouble(c.cint) < 4.5)","edgeType":"PREDICATE"},{"sources":[8],"targets":[0,1,2,3],"expression":"((UDFToInteger(_col4) + length(c.cstring2)) < 1000)","edgeType":"PREDICATE"},{"sources":[5],"targets":[0,1,2,3],"expression":"(c.cint = c.cint)","edgeType":"PREDICATE"},{"sources":[9,4],"targets":[0,1,2,3],"expression":"((c.cboolean1 = false) and (c.ctinyint > 10))","edgeType":"PREDICATE"},{"sources":[6,5],"targets":[0,1,2,3],"expression":"((c.cbigint - UDFToLong(224870380)) = UDFToLong(c.cint))","edgeType":"PREDICATE"},{"sources":[4,8],"targets":[0,1,2,3],"expression":"((UDFToInteger(c.ctinyint) + length(c.cstring2)) < 1000)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"x.ctinyint"},{"id":1,"vertexType":"COLUMN","vertexId":"x.cint"},{"id":2,"vertexType":"COLUMN","vertexId":"c2"},{"id":3,"vertexType":"COLUMN","vertexId":"c.cstring1"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":6,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cbigint"},{"id":7,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cstring1"},{"id":8,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cstring2"},{"id":9,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean1"}]}
 11	-654374827	857266369	OEfPnHnIYueoup
 PREHOOK: query: select c1, x2, x3
 from (
@@ -854,99 +129,7 @@ order by x2, c1 desc
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "bc64f8bec21631969a17930ec609cde9",
-  "queryText": "select c1, x2, x3\nfrom (\n  select c1, min(c2) x2, sum(c3) x3\n  from (\n    select c1, c2, c3\n    from (\n      select cint c1, ctinyint c2, min(cbigint) c3\n      from alltypesorc\n      where cint is not null\n      group by cint, ctinyint\n      order by cint, ctinyint\n      limit 5\n    ) x\n  ) x2\n  group by c1\n) y\nwhere x2 > 0\norder by x2, c1 desc",
-  "edges": [
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "min(default.alltypesorc.ctinyint)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        2
-      ],
-      "expression": "sum(min(default.alltypesorc.cbigint))",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "alltypesorc.cint is not null",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(min(default.alltypesorc.ctinyint) > 0)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "c1"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "x2"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "x3"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cbigint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"bc64f8bec21631969a17930ec609cde9","queryText":"select c1, x2, x3\nfrom (\n  select c1, min(c2) x2, sum(c3) x3\n  from (\n    select c1, c2, c3\n    from (\n      select cint c1, ctinyint c2, min(cbigint) c3\n      from alltypesorc\n      where cint is not null\n      group by cint, ctinyint\n      order by cint, ctinyint\n      limit 5\n    ) x\n  ) x2\n  group by c1\n) y\nwhere x2 > 0\norder by x2, c1 desc","edges":[{"sources":[3],"targets":[0],"edgeType":"PROJECTION"},{"sources":[4],"targets":[1],"expression":"min(default.alltypesorc.ctinyint)","edgeType":"PROJECTION"},{"sources":[5],"targets":[2],"expression":"sum(min(default.alltypesorc.cbigint))","edgeType":"PROJECTION"},{"sources":[3],"targets":[0,1,2],"expression":"alltypesorc.cint is not null","edgeType":"PREDICATE"},{"sources":[4],"targets":[0,1,2],"expression":"(min(default.alltypesorc.ctinyint) > 0)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"c1"},{"id":1,"vertexType":"COLUMN","vertexId":"x2"},{"id":2,"vertexType":"COLUMN","vertexId":"x3"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cbigint"}]}
 -1072910839	11	2048385991
 -1073279343	11	-1595604468
 PREHOOK: query: select key, value from src1
@@ -954,74 +137,7 @@ where src1.key in (select key+18 from src1) order by key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "212d3ed9a6c073a63c42c44e5c024db6",
-  "queryText": "select key, value from src1\nwhere src1.key in (select key+18 from src1) order by key",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(1 = 1)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToDouble(src1.key) = (UDFToDouble(src1.key) + UDFToDouble(18)))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"212d3ed9a6c073a63c42c44e5c024db6","queryText":"select key, value from src1\nwhere src1.key in (select key+18 from src1) order by key","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[],"targets":[0,1],"expression":"(1 = 1)","edgeType":"PREDICATE"},{"sources":[2],"targets":[0,1],"expression":"(UDFToDouble(src1.key) = (UDFToDouble(src1.key) + UDFToDouble(18)))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"key"},{"id":1,"vertexType":"COLUMN","vertexId":"value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 146	val_146
 273	val_273
 PREHOOK: query: select * from src1 a
@@ -1033,91 +149,7 @@ PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "8bf193b0658183be94e2428a79d91d10",
-  "queryText": "select * from src1 a\nwhere exists\n  (select cint from alltypesorc b\n   where a.key = b.ctinyint + 300)\nand key > 300",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToDouble(a.key) > UDFToDouble(300))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(1 = 1)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        2,
-        4
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToDouble(a.key) = UDFToDouble((UDFToInteger(b.ctinyint) + 300)))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "a.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "a.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"8bf193b0658183be94e2428a79d91d10","queryText":"select * from src1 a\nwhere exists\n  (select cint from alltypesorc b\n   where a.key = b.ctinyint + 300)\nand key > 300","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2],"targets":[0,1],"expression":"(UDFToDouble(a.key) > UDFToDouble(300))","edgeType":"PREDICATE"},{"sources":[],"targets":[0,1],"expression":"(1 = 1)","edgeType":"PREDICATE"},{"sources":[2,4],"targets":[0,1],"expression":"(UDFToDouble(a.key) = UDFToDouble((UDFToInteger(b.ctinyint) + 300)))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"a.key"},{"id":1,"vertexType":"COLUMN","vertexId":"a.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"}]}
 311	val_311
 Warning: Shuffle Join JOIN[19][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
 PREHOOK: query: select key, value from src1
@@ -1125,121 +157,7 @@ where src1.key not in (select key+18 from src1) order by key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "2ee4b8ba9ab1d14e0813bf6c4a472f36",
-  "queryText": "select key, value from src1\nwhere src1.key not in (select key+18 from src1) order by key",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "_col0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "_col1",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(1 = 1)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "_col3 is null",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToDouble(src1.key) + UDFToDouble(18)) is null",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(count(*) = 0)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "true",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToDouble(_col0) = (UDFToDouble(src1.key) + UDFToDouble(18)))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 4,
-      "vertexType": "TABLE",
-      "vertexId": "default.src1"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"2ee4b8ba9ab1d14e0813bf6c4a472f36","queryText":"select key, value from src1\nwhere src1.key not in (select key+18 from src1) order by key","edges":[{"sources":[2],"targets":[0],"expression":"_col0","edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"_col1","edgeType":"PROJECTION"},{"sources":[],"targets":[0,1],"expression":"(1 = 1)","edgeType":"PREDICATE"},{"sources":[],"targets":[0,1],"expression":"_col3 is null","edgeType":"PREDICATE"},{"sources":[2],"targets":[0,1],"expression":"(UDFToDouble(src1.key) + UDFToDouble(18)) is null","edgeType":"PREDICATE"},{"sources":[4],"targets":[0,1],"expression":"(count(*) = 0)","edgeType":"PREDICATE"},{"sources":[],"targets":[0,1],"expression":"true","edgeType":"PREDICATE"},{"sources":[2],"targets":[0,1],"expression":"(UDFToDouble(_col0) = (UDFToDouble(src1.key) + UDFToDouble(18)))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"key"},{"id":1,"vertexType":"COLUMN","vertexId":"value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":4,"vertexType":"TABLE","vertexId":"default.src1"}]}
 PREHOOK: query: select * from src1 a
 where not exists
   (select cint from alltypesorc b
@@ -1249,102 +167,7 @@ PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "53191056e05af9080a30de853e8cea9c",
-  "queryText": "select * from src1 a\nwhere not exists\n  (select cint from alltypesorc b\n   where a.key = b.ctinyint + 300)\nand key > 300",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(1 = 1)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToInteger(b.ctinyint) + 300) is null",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToDouble(a.key) > UDFToDouble(300))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        4,
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "(UDFToDouble((UDFToInteger(b.ctinyint) + 300)) = UDFToDouble(a.key))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "a.key"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "a.value"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"53191056e05af9080a30de853e8cea9c","queryText":"select * from src1 a\nwhere not exists\n  (select cint from alltypesorc b\n   where a.key = b.ctinyint + 300)\nand key > 300","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[],"targets":[0,1],"expression":"(1 = 1)","edgeType":"PREDICATE"},{"sources":[4],"targets":[0,1],"expression":"(UDFToInteger(b.ctinyint) + 300) is null","edgeType":"PREDICATE"},{"sources":[2],"targets":[0,1],"expression":"(UDFToDouble(a.key) > UDFToDouble(300))","edgeType":"PREDICATE"},{"sources":[4,2],"targets":[0,1],"expression":"(UDFToDouble((UDFToInteger(b.ctinyint) + 300)) = UDFToDouble(a.key))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"a.key"},{"id":1,"vertexType":"COLUMN","vertexId":"a.value"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"}]}
 369	
 401	val_401
 406	val_406
@@ -1353,66 +176,7 @@ select x, y where y > 'v' order by x, y limit 5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "9180b71a610dbcf5e636a3c03e48ca3b",
-  "queryText": "from (select key x, value y from src1 where key > '2') t\nselect x, y where y > 'v' order by x, y limit 5",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2,
-        3
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "((src1.key > '2') and (src1.value > 'v'))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "x"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "y"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.key"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.src1.value"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"9180b71a610dbcf5e636a3c03e48ca3b","queryText":"from (select key x, value y from src1 where key > '2') t\nselect x, y where y > 'v' order by x, y limit 5","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2,3],"targets":[0,1],"expression":"((src1.key > '2') and (src1.value > 'v'))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"x"},{"id":1,"vertexType":"COLUMN","vertexId":"y"},{"id":2,"vertexType":"COLUMN","vertexId":"default.src1.key"},{"id":3,"vertexType":"COLUMN","vertexId":"default.src1.value"}]}
 213	val_213
 238	val_238
 255	val_255
@@ -1426,129 +190,13 @@ PREHOOK: type: CREATEVIEW
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest_v1
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "a3b2d2665c90fd669400f247f751f081",
-  "queryText": "create view dest_v1 as\n  select ctinyint, cint from alltypesorc where ctinyint is not null",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "alltypesorc.ctinyint is not null",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v1.ctinyint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v1.cint"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"a3b2d2665c90fd669400f247f751f081","queryText":"create view dest_v1 as\n  select ctinyint, cint from alltypesorc where ctinyint is not null","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2],"targets":[0,1],"expression":"alltypesorc.ctinyint is not null","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_v1.ctinyint"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_v1.cint"},{"id":2,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"}]}
 PREHOOK: query: select * from dest_v1 order by ctinyint, cint limit 2
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Input: default@dest_v1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "75e07b246069a5541af4a3983500b439",
-  "queryText": "select * from dest_v1 order by ctinyint, cint limit 2",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0,
-        1
-      ],
-      "expression": "alltypesorc.ctinyint is not null",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "dest_v1.ctinyint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "dest_v1.cint"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"75e07b246069a5541af4a3983500b439","queryText":"select * from dest_v1 order by ctinyint, cint limit 2","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"edgeType":"PROJECTION"},{"sources":[2],"targets":[0,1],"expression":"alltypesorc.ctinyint is not null","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"dest_v1.ctinyint"},{"id":1,"vertexType":"COLUMN","vertexId":"dest_v1.cint"},{"id":2,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"}]}
 -64	NULL
 -64	NULL
 PREHOOK: query: alter view dest_v1 as select ctinyint from alltypesorc
@@ -1556,80 +204,14 @@ PREHOOK: type: CREATEVIEW
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest_v1
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "bcab8b0c498b0d94e0967170956392b6",
-  "queryText": "alter view dest_v1 as select ctinyint from alltypesorc",
-  "edges": [
-    {
-      "sources": [
-        1
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v1.ctinyint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"bcab8b0c498b0d94e0967170956392b6","queryText":"alter view dest_v1 as select ctinyint from alltypesorc","edges":[{"sources":[1],"targets":[0],"edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_v1.ctinyint"},{"id":1,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"}]}
 PREHOOK: query: select t.ctinyint from (select * from dest_v1 where ctinyint is not null) t
 where ctinyint > 10 order by ctinyint limit 2
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Input: default@dest_v1
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "b0192d4da86f4bef38fe7ab1fc607906",
-  "queryText": "select t.ctinyint from (select * from dest_v1 where ctinyint is not null) t\nwhere ctinyint > 10 order by ctinyint limit 2",
-  "edges": [
-    {
-      "sources": [
-        1
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        1
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "(alltypesorc.ctinyint is not null and (alltypesorc.ctinyint > 10))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "t.ctinyint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"b0192d4da86f4bef38fe7ab1fc607906","queryText":"select t.ctinyint from (select * from dest_v1 where ctinyint is not null) t\nwhere ctinyint > 10 order by ctinyint limit 2","edges":[{"sources":[1],"targets":[0],"edgeType":"PROJECTION"},{"sources":[1],"targets":[0],"expression":"(alltypesorc.ctinyint is not null and (alltypesorc.ctinyint > 10))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"t.ctinyint"},{"id":1,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"}]}
 11
 11
 PREHOOK: query: drop view if exists dest_v2
@@ -1654,55 +236,7 @@ PREHOOK: type: CREATEVIEW
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest_v2
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "eda442b42b9c3a9cbdb7aff1984ad2dd",
-  "queryText": "create view dest_v2 (a, b) as select c1, x2\nfrom (\n  select c1, min(c2) x2\n  from (\n    select c1, c2, c3\n    from (\n      select cint c1, ctinyint c2, min(cfloat) c3\n      from alltypesorc\n      group by cint, ctinyint\n      order by cint, ctinyint\n      limit 1\n    ) x\n  ) x2\n  group by c1\n) y\norder by x2,c1 desc",
-  "edges": [
-    {
-      "sources": [
-        2
-      ],
-      "targets": [
-        0
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        3
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "min(default.alltypesorc.ctinyint)",
-      "edgeType": "PROJECTION"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v2.c1"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v2.x2"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"eda442b42b9c3a9cbdb7aff1984ad2dd","queryText":"create view dest_v2 (a, b) as select c1, x2\nfrom (\n  select c1, min(c2) x2\n  from (\n    select c1, c2, c3\n    from (\n      select cint c1, ctinyint c2, min(cfloat) c3\n      from alltypesorc\n      group by cint, ctinyint\n      order by cint, ctinyint\n      limit 1\n    ) x\n  ) x2\n  group by c1\n) y\norder by x2,c1 desc","edges":[{"sources":[2],"targets":[0],"edgeType":"PROJECTION"},{"sources":[3],"targets":[1],"expression":"min(default.alltypesorc.ctinyint)","edgeType":"PROJECTION"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_v2.c1"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_v2.x2"},{"id":2,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"}]}
 PREHOOK: query: drop view if exists dest_v3
 PREHOOK: type: DROPVIEW
 PREHOOK: query: create view dest_v3 (a1, a2, a3, a4, a5, a6, a7) as
@@ -1723,230 +257,7 @@ PREHOOK: type: CREATEVIEW
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest_v3
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "a0c2481ce1c24895a43a950f93a10da7",
-  "queryText": "create view dest_v3 (a1, a2, a3, a4, a5, a6, a7) as\n  select x.csmallint, x.cbigint bint1, x.ctinyint, c.cbigint bint2, x.cint, x.cfloat, c.cstring1\n  from alltypesorc c\n  join (\n     select a.csmallint csmallint, a.ctinyint ctinyint, a.cstring2 cstring2,\n           a.cint cint, a.cstring1 ctring1, b.cfloat cfloat, b.cbigint cbigint\n     from ( select * from alltypesorc a where cboolean1=true ) a\n     join alltypesorc b on (a.csmallint = b.cint)\n   ) x on (x.ctinyint = c.cbigint)\n  where x.csmallint=11\n  and x.cint > 899\n  and x.cfloat > 4.5\n  and c.cstring1 < '7'\n  and x.cint + x.cfloat + length(c.cstring1) < 1000",
-  "edges": [
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "_col15",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        8
-      ],
-      "targets": [
-        1,
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        9
-      ],
-      "targets": [
-        3
-      ],
-      "expression": "_col16",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        10
-      ],
-      "targets": [
-        4
-      ],
-      "expression": "_col18",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        11
-      ],
-      "targets": [
-        5
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        12
-      ],
-      "targets": [
-        6
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        13
-      ],
-      "targets": [
-        0,
-        1,
-        3,
-        2,
-        4,
-        5,
-        6
-      ],
-      "expression": "(a.cboolean1 = true)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        7,
-        10
-      ],
-      "targets": [
-        0,
-        1,
-        3,
-        2,
-        4,
-        5,
-        6
-      ],
-      "expression": "(((((a.csmallint = 11) and (a.cint > 899)) and (_col20 > 4.5)) and (c._col6 < '7')) and (((a.cint + _col20) + length(c._col6)) < 1000))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        7,
-        10
-      ],
-      "targets": [
-        0,
-        1,
-        3,
-        2,
-        4,
-        5,
-        6
-      ],
-      "expression": "(UDFToInteger(a._col1) = b.cint)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        7,
-        10,
-        11,
-        12
-      ],
-      "targets": [
-        0,
-        1,
-        3,
-        2,
-        4,
-        5,
-        6
-      ],
-      "expression": "(((((_col15 = 11) and (_col18 > 899)) and (b.cfloat > 4.5)) and (c._col6 < '7')) and (((_col18 + b.cfloat) + length(c._col6)) < 1000))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        8,
-        9
-      ],
-      "targets": [
-        0,
-        1,
-        3,
-        2,
-        4,
-        5,
-        6
-      ],
-      "expression": "(c.cbigint = UDFToLong(_col16))",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.csmallint"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.bint1"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.bint2"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.ctinyint"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.cint"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.cfloat"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.cstring1"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.csmallint"
-    },
-    {
-      "id": 8,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cbigint"
-    },
-    {
-      "id": 9,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 10,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 11,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cfloat"
-    },
-    {
-      "id": 12,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cstring1"
-    },
-    {
-      "id": 13,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean1"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"a0c2481ce1c24895a43a950f93a10da7","queryText":"create view dest_v3 (a1, a2, a3, a4, a5, a6, a7) as\n  select x.csmallint, x.cbigint bint1, x.ctinyint, c.cbigint bint2, x.cint, x.cfloat, c.cstring1\n  from alltypesorc c\n  join (\n     select a.csmallint csmallint, a.ctinyint ctinyint, a.cstring2 cstring2,\n           a.cint cint, a.cstring1 ctring1, b.cfloat cfloat, b.cbigint cbigint\n     from ( select * from alltypesorc a where cboolean1=true ) a\n     join alltypesorc b on (a.csmallint = b.cint)\n   ) x on (x.ctinyint = c.cbigint)\n  where x.csmallint=11\n  and x.cint > 899\n  and x.cfloat > 4.5\n  and c.cstring1 < '7'\n  and x.cint + x.cfloat + length(c.cstring1) < 1000","edges":[{"sources":[7],"targets":[0],"expression":"_col15","edgeType":"PROJECTION"},{"sources":[8],"targets":[1,2],"edgeType":"PROJECTION"},{"sources":[9],"targets":[3],"expression":"_col16","edgeType":"PROJECTION"},{"sources":[10],"targets":[4],"expression":"_col18","edgeType":"PROJECTION"},{"sources":[11],"targets":[5],"edgeType":"PROJECTION"},{"sources":[12],"targets":[6],"edgeType":"PROJECTION"},{"sources":[13],"targets":[0,1,3,2,4,5,6],"expression":"(a.cboolean1 = true)","edgeType":"PREDICATE"},{"sources":[7,10],"targets":[0,1,3,2,4,5,6],"expression":"(((((a.csmallint = 11) and (a.cint > 899)) and (_col20 > 4.5)) and (c._col6 < '7')) and (((a.cint + _col20) + length(c._col6)) < 1000))","edgeType":"PREDICATE"},{"sources":[7,10],"targets":[0,1,3,2,4,5,6],"expression":"(UDFToInteger(a._col1) = b.cint)","edgeType":"PREDICATE"},{"sources":[7,10,11,12],"targets":[0,1,3,2,4,5,6],"expression":"(((((_col15 = 11) and (_col18 > 899)) and (b.cfloat > 4.5)) and (c._col6 < '7')) and (((_col18 + b.cfloat) + length(c._col6)) < 1000))","edgeType":"PREDICATE"},{"sources":[8,9],"targets":[0,1,3,2,4,5,6],"expression":"(c.cbigint = UDFToLong(_col16))","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_v3.csmallint"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_v3.bint1"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest_v3.bint2"},{"id":3,"vertexType":"COLUMN","vertexId":"default.dest_v3.ctinyint"},{"id":4,"vertexType":"COLUMN","vertexId":"default.dest_v3.cint"},{"id":5,"vertexType":"COLUMN","vertexId":"default.dest_v3.cfloat"},{"id":6,"vertexType":"COLUMN","vertexId":"default.dest_v3.cstring1"},{"id":7,"vertexType":"COLUMN","vertexId":"default.alltypesorc.csmallint"},{"id":8,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cbigint"},{"id":9,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":10,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":11,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cfloat"},{"id":12,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cstring1"},{"id":13,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean1"}]}
 PREHOOK: query: alter view dest_v3 as
   select * from (
     select sum(a.ctinyint) over (partition by a.csmallint order by a.csmallint) a,
@@ -1960,281 +271,12 @@ PREHOOK: type: CREATEVIEW
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Output: database:default
 PREHOOK: Output: default@dest_v3
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "949093880975cc807ad1a8003e8a8c7c",
-  "queryText": "alter view dest_v3 as\n  select * from (\n    select sum(a.ctinyint) over (partition by a.csmallint order by a.csmallint) a,\n      count(b.cstring1) x, b.cboolean1\n    from alltypesorc a join alltypesorc b on (a.cint = b.cint)\n    where a.cboolean2 = true and b.cfloat > 0\n    group by a.ctinyint, a.csmallint, b.cboolean1\n    having count(a.cint) > 10\n    order by a, x, b.cboolean1 limit 10) t",
-  "edges": [
-    {
-      "sources": [
-        3,
-        4,
-        5,
-        6,
-        7
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "_wcol0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "count(default.alltypesorc.cstring1)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        8,
-        9
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "((a._col11 = true) and (b._col19 > 0.0))",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(count(default.alltypesorc.cint) > 10)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(a.cint = b.cint)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.a"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.x"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "default.dest_v3.cboolean1"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.csmallint"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean1"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cstring1"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 8,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean2"
-    },
-    {
-      "id": 9,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cfloat"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"949093880975cc807ad1a8003e8a8c7c","queryText":"alter view dest_v3 as\n  select * from (\n    select sum(a.ctinyint) over (partition by a.csmallint order by a.csmallint) a,\n      count(b.cstring1) x, b.cboolean1\n    from alltypesorc a join alltypesorc b on (a.cint = b.cint)\n    where a.cboolean2 = true and b.cfloat > 0\n    group by a.ctinyint, a.csmallint, b.cboolean1\n    having count(a.cint) > 10\n    order by a, x, b.cboolean1 limit 10) t","edges":[{"sources":[3,4,5,6,7],"targets":[0],"expression":"_wcol0","edgeType":"PROJECTION"},{"sources":[6],"targets":[1],"expression":"count(default.alltypesorc.cstring1)","edgeType":"PROJECTION"},{"sources":[5],"targets":[2],"edgeType":"PROJECTION"},{"sources":[8,9],"targets":[0,1,2],"expression":"((a._col11 = true) and (b._col19 > 0.0))","edgeType":"PREDICATE"},{"sources":[7],"targets":[0,1,2],"expression":"(count(default.alltypesorc.cint) > 10)","edgeType":"PREDICATE"},{"sources":[7],"targets":[0,1,2],"expression":"(a.cint = b.cint)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"default.dest_v3.a"},{"id":1,"vertexType":"COLUMN","vertexId":"default.dest_v3.x"},{"id":2,"vertexType":"COLUMN","vertexId":"default.dest_v3.cboolean1"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.csmallint"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean1"},{"id":6,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cstring1"},{"id":7,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":8,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean2"},{"id":9,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cfloat"}]}
 PREHOOK: query: select * from dest_v3 limit 2
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alltypesorc
 PREHOOK: Input: default@dest_v3
 #### A masked pattern was here ####
-POSTHOOK: LINEAGE: {
-  "version": "1.0",
-  "engine": "mr",
-  "hash": "40bccc0722002f798d0548b59e369e83",
-  "queryText": "select * from dest_v3 limit 2",
-  "edges": [
-    {
-      "sources": [
-        3,
-        4,
-        5,
-        6,
-        7
-      ],
-      "targets": [
-        0
-      ],
-      "expression": "_wcol0",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        6
-      ],
-      "targets": [
-        1
-      ],
-      "expression": "count(default.alltypesorc.cstring1)",
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        5
-      ],
-      "targets": [
-        2
-      ],
-      "edgeType": "PROJECTION"
-    },
-    {
-      "sources": [
-        8
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(a.cboolean2 = true)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(count(default.alltypesorc.cint) > 10)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        9
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(a.cfloat > 0.0)",
-      "edgeType": "PREDICATE"
-    },
-    {
-      "sources": [
-        7
-      ],
-      "targets": [
-        0,
-        1,
-        2
-      ],
-      "expression": "(a.cint = a.cint)",
-      "edgeType": "PREDICATE"
-    }
-  ],
-  "vertices": [
-    {
-      "id": 0,
-      "vertexType": "COLUMN",
-      "vertexId": "dest_v3.a"
-    },
-    {
-      "id": 1,
-      "vertexType": "COLUMN",
-      "vertexId": "dest_v3.x"
-    },
-    {
-      "id": 2,
-      "vertexType": "COLUMN",
-      "vertexId": "dest_v3.cboolean1"
-    },
-    {
-      "id": 3,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.ctinyint"
-    },
-    {
-      "id": 4,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.csmallint"
-    },
-    {
-      "id": 5,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean1"
-    },
-    {
-      "id": 6,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cstring1"
-    },
-    {
-      "id": 7,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cint"
-    },
-    {
-      "id": 8,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cboolean2"
-    },
-    {
-      "id": 9,
-      "vertexType": "COLUMN",
-      "vertexId": "default.alltypesorc.cfloat"
-    }
-  ]
-}
+{"version":"1.0","engine":"mr","hash":"40bccc0722002f798d0548b59e369e83","queryText":"select * from dest_v3 limit 2","edges":[{"sources":[3,4,5,6,7],"targets":[0],"expression":"_wcol0","edgeType":"PROJECTION"},{"sources":[6],"targets":[1],"expression":"count(default.alltypesorc.cstring1)","edgeType":"PROJECTION"},{"sources":[5],"targets":[2],"edgeType":"PROJECTION"},{"sources":[8],"targets":[0,1,2],"expression":"(a.cboolean2 = true)","edgeType":"PREDICATE"},{"sources":[7],"targets":[0,1,2],"expression":"(count(default.alltypesorc.cint) > 10)","edgeType":"PREDICATE"},{"sources":[9],"targets":[0,1,2],"expression":"(a.cfloat > 0.0)","edgeType":"PREDICATE"},{"sources":[7],"targets":[0,1,2],"expression":"(a.cint = a.cint)","edgeType":"PREDICATE"}],"vertices":[{"id":0,"vertexType":"COLUMN","vertexId":"dest_v3.a"},{"id":1,"vertexType":"COLUMN","vertexId":"dest_v3.x"},{"id":2,"vertexType":"COLUMN","vertexId":"dest_v3.cboolean1"},{"id":3,"vertexType":"COLUMN","vertexId":"default.alltypesorc.ctinyint"},{"id":4,"vertexType":"COLUMN","vertexId":"default.alltypesorc.csmallint"},{"id":5,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean1"},{"id":6,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cstring1"},{"id":7,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cint"},{"id":8,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cboolean2"},{"id":9,"vertexType":"COLUMN","vertexId":"default.alltypesorc.cfloat"}]}
 38	216	false
 38	229	true
-- 
1.7.9.5


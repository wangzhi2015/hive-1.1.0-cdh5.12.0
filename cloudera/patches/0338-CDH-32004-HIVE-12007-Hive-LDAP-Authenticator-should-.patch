From 9515b615845415f8e699288402d1060bececf580 Mon Sep 17 00:00:00 2001
From: Szehon Ho <szehon@cloudera.com>
Date: Mon, 5 Oct 2015 10:11:47 -0700
Subject: [PATCH 0338/1164] CDH-32004 HIVE-12007 : Hive LDAP Authenticator
 should allow just Domain without baseDN (for AD)
 (Naveen Gangam via Szehon)

---
 .../auth/LdapAuthenticationProviderImpl.java       |   19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java b/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java
index 26d131b..4aa1138 100644
--- a/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java
+++ b/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java
@@ -77,7 +77,7 @@
             LOG.warn("Unexpected format for groupDNPattern..ignoring " + groupTokens[i]);
           }
         }
-      } else {
+      } else if (baseDN != null) {
         groupBases.add("CN=%s," + baseDN);
       }
 
@@ -101,7 +101,7 @@
             LOG.warn("Unexpected format for userDNPattern..ignoring " + userTokens[i]);
           }
         }
-      } else {
+      } else if (baseDN != null) {
         userBases.add("CN=%s," + baseDN);
       }
 
@@ -158,22 +158,22 @@ public void Authenticate(String user, String password) throws AuthenticationExce
       // Create initial context
       ctx = new InitialDirContext(env);
 
-      if (isDN(user)) {
+      if (isDN(user) || hasDomain(user)) {
         userName = extractName(user);
       } else {
         userName = user;
       }
 
-      if (userFilter == null && groupFilter == null && customQuery == null) {
+      if (userFilter == null && groupFilter == null && customQuery == null && userBases.size() > 0) {
         if (isDN(user)) {
-          userDN = findUserDNByDN(ctx, user);
+          userDN = findUserDNByDN(ctx, userName);
         } else {
           if (userDN == null) {
-            userDN = findUserDNByPattern(ctx, user);
+            userDN = findUserDNByPattern(ctx, userName);
           }
 
           if (userDN == null) {
-            userDN = findUserDNByName(ctx, baseDN, user);
+            userDN = findUserDNByName(ctx, baseDN, userName);
           }
         }
 
@@ -571,6 +571,11 @@ public static boolean isDN(String name) {
   }
 
   public static String extractName(String dn) {
+    int domainIdx = ServiceUtils.indexOfDomainMatch(dn);
+    if (domainIdx > 0) {
+      return dn.substring(0, domainIdx);
+    }
+
     if (dn.indexOf("=") > -1) {
       return dn.substring(dn.indexOf("=") + 1, dn.indexOf(","));
     }
-- 
1.7.9.5


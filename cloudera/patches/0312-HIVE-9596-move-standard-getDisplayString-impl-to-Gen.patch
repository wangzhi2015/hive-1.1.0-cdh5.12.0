From 1429e0f4700df3ff398cb901d26291cce4cb449d Mon Sep 17 00:00:00 2001
From: Jason Dere <jdere@apache.org>
Date: Fri, 13 Feb 2015 19:37:41 +0000
Subject: [PATCH 0312/1164] HIVE-9596: move standard getDisplayString impl to
 GenericUDF (Alexander Pivovarov via Jason Dere)

---
 .../genericudf/example/GenericUDFDBOutput.java     |   13 +------------
 .../hive/ql/udf/generic/GenericUDFEvaluateNPE.java |    2 +-
 .../udf/generic/GenericUDFTestGetJavaBoolean.java  |    2 +-
 .../udf/generic/GenericUDFTestGetJavaString.java   |    2 +-
 .../ql/udf/generic/GenericUDFTestTranslate.java    |    3 +--
 .../generic/AbstractGenericUDFEWAHBitmapBop.java   |   12 +-----------
 .../ql/udf/generic/AbstractGenericUDFReflect.java  |   11 +----------
 .../hadoop/hive/ql/udf/generic/GenericUDF.java     |   19 +++++++++++++++++++
 .../hadoop/hive/ql/udf/generic/GenericUDFAbs.java  |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFAddMonths.java   |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFArray.java       |   11 +----------
 .../hive/ql/udf/generic/GenericUDFAssertTrue.java  |   11 +----------
 .../hive/ql/udf/generic/GenericUDFBaseNumeric.java |    1 -
 .../hive/ql/udf/generic/GenericUDFBasePad.java     |    7 +++----
 .../hive/ql/udf/generic/GenericUDFBaseTrim.java    |    2 +-
 .../hive/ql/udf/generic/GenericUDFCoalesce.java    |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFConcat.java      |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFConcatWS.java    |    8 +-------
 .../hadoop/hive/ql/udf/generic/GenericUDFDate.java |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFDateAdd.java     |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFDateDiff.java    |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFDateSub.java     |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFDecode.java      |    6 +-----
 .../ql/udf/generic/GenericUDFEWAHBitmapEmpty.java  |   11 +----------
 .../hadoop/hive/ql/udf/generic/GenericUDFElt.java  |    8 +-------
 .../hive/ql/udf/generic/GenericUDFEncode.java      |    6 +-----
 .../hive/ql/udf/generic/GenericUDFField.java       |    8 +-------
 .../ql/udf/generic/GenericUDFFloorCeilBase.java    |    2 +-
 .../ql/udf/generic/GenericUDFFormatNumber.java     |    8 +-------
 .../hive/ql/udf/generic/GenericUDFGreatest.java    |   12 +-----------
 .../hadoop/hive/ql/udf/generic/GenericUDFHash.java |    2 +-
 .../hadoop/hive/ql/udf/generic/GenericUDFIf.java   |    7 +------
 .../hive/ql/udf/generic/GenericUDFInFile.java      |    2 +-
 .../hive/ql/udf/generic/GenericUDFInitCap.java     |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFInstr.java       |    2 +-
 .../hive/ql/udf/generic/GenericUDFLastDay.java     |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFLeadLag.java     |    9 +--------
 .../hive/ql/udf/generic/GenericUDFLocate.java      |    3 +--
 .../hive/ql/udf/generic/GenericUDFLower.java       |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFMacro.java       |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFMapKeys.java     |    2 +-
 .../hive/ql/udf/generic/GenericUDFMapValues.java   |    2 +-
 .../hive/ql/udf/generic/GenericUDFNamedStruct.java |   11 +----------
 .../hive/ql/udf/generic/GenericUDFPower.java       |    4 +---
 .../hive/ql/udf/generic/GenericUDFPrintf.java      |    8 +-------
 .../hive/ql/udf/generic/GenericUDFRound.java       |   12 +-----------
 .../hive/ql/udf/generic/GenericUDFSentences.java   |   10 +---------
 .../hadoop/hive/ql/udf/generic/GenericUDFSize.java |    2 +-
 .../hive/ql/udf/generic/GenericUDFSortArray.java   |    2 +-
 .../hive/ql/udf/generic/GenericUDFSplit.java       |    2 +-
 .../hive/ql/udf/generic/GenericUDFStringToMap.java |   14 +-------------
 .../hive/ql/udf/generic/GenericUDFStruct.java      |   11 +----------
 .../hive/ql/udf/generic/GenericUDFTranslate.java   |    2 +-
 .../hive/ql/udf/generic/GenericUDFUpper.java       |   12 +-----------
 ql/src/test/results/clientpositive/udf_instr.q.out |    2 +-
 .../test/results/clientpositive/udf_locate.q.out   |    2 +-
 56 files changed, 75 insertions(+), 357 deletions(-)

diff --git a/contrib/src/java/org/apache/hadoop/hive/contrib/genericudf/example/GenericUDFDBOutput.java b/contrib/src/java/org/apache/hadoop/hive/contrib/genericudf/example/GenericUDFDBOutput.java
index 1a54147..76b1fa5 100644
--- a/contrib/src/java/org/apache/hadoop/hive/contrib/genericudf/example/GenericUDFDBOutput.java
+++ b/contrib/src/java/org/apache/hadoop/hive/contrib/genericudf/example/GenericUDFDBOutput.java
@@ -29,7 +29,6 @@
 import org.apache.hadoop.hive.ql.metadata.HiveException;
 import org.apache.hadoop.hive.ql.udf.UDFType;
 import org.apache.hadoop.hive.ql.udf.generic.GenericUDF;
-import org.apache.hadoop.hive.ql.udf.generic.GenericUDFUtils;
 import org.apache.hadoop.hive.serde.serdeConstants;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
@@ -159,17 +158,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("dboutput(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(",");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("dboutput", children, ",");
   }
 
 }
diff --git a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEvaluateNPE.java b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEvaluateNPE.java
index 4080c9f..c9763b6 100644
--- a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEvaluateNPE.java
+++ b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEvaluateNPE.java
@@ -76,6 +76,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 1);
-    return "evaluate_npe(" + children[0] + ")";
+    return getStandardDisplayString("evaluate_npe", children);
   }
 }
diff --git a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaBoolean.java b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaBoolean.java
index bf6c7c2..68cd57a 100644
--- a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaBoolean.java
+++ b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaBoolean.java
@@ -54,6 +54,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 1);
-    return "TestGetJavaBoolean(" + children[0] + ")";
+    return getStandardDisplayString("TestGetJavaBoolean", children);
   }
 }
diff --git a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaString.java b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaString.java
index 914cebf..9de5ee7 100644
--- a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaString.java
+++ b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestGetJavaString.java
@@ -50,6 +50,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 1);
-    return "GenericUDFTestGetJavaString(" + children[0] + ")";
+    return getStandardDisplayString("GenericUDFTestGetJavaString", children);
   }
 }
diff --git a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java
index 0ab8d0b..22a16ea 100644
--- a/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java
+++ b/itests/util/src/main/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java
@@ -119,7 +119,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 3);
-    return "translate(" + children[0] + "," + children[1] + "," + children[2]
-        + ")";
+    return getStandardDisplayString("translate", children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFEWAHBitmapBop.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFEWAHBitmapBop.java
index 58ea3ba..de7ebf7 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFEWAHBitmapBop.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFEWAHBitmapBop.java
@@ -141,16 +141,6 @@ protected EWAHCompressedBitmap wordArrayToBitmap(Object b) {
   
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append(name);
-    sb.append("(");
-    for (int i = 0; i < children.length; i++) {
-      sb.append(children[i]);
-      if (i + 1 != children.length) {
-        sb.append(",");
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString(name, children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFReflect.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFReflect.java
index 8d73196..1e044b4 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFReflect.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDFReflect.java
@@ -101,16 +101,7 @@ Method findMethod(Class clazz, String name, Class<?> retType, boolean memberOnly
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append(functionName()).append('(');
-    for (int i = 0; i < children.length; i++) {
-      if (i > 0) {
-        sb.append(',');
-      }
-      sb.append(children[i]);
-    }
-    sb.append(')');
-    return sb.toString();
+    return getStandardDisplayString(functionName(), children, ",");
   }
 
   protected abstract String functionName();
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDF.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDF.java
index 8fc5c09..e558f52 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDF.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDF.java
@@ -232,4 +232,23 @@ protected void checkArgsSize(ObjectInspector[] arguments, int min, int max)
       throw new UDFArgumentLengthException(sb.toString());
     }
   }
+
+  protected String getStandardDisplayString(String name, String[] children) {
+    return getStandardDisplayString(name, children, ", ");
+  }
+
+  protected String getStandardDisplayString(String name, String[] children, String delim) {
+    StringBuilder sb = new StringBuilder();
+    sb.append(name);
+    sb.append("(");
+    if (children.length > 0) {
+      sb.append(children[0]);
+      for (int i = 1; i < children.length; i++) {
+        sb.append(delim);
+        sb.append(children[i]);
+      }
+    }
+    sb.append(")");
+    return sb.toString();
+  }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAbs.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAbs.java
index d655683..1fdd41c 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAbs.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAbs.java
@@ -150,17 +150,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("abs(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(",");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("abs", children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAddMonths.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAddMonths.java
index c746a14..c596883 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAddMonths.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAddMonths.java
@@ -156,17 +156,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("add_months(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("add_months", children);
   }
 
   protected Calendar addMonth(Date d, int numMonths) {
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFArray.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFArray.java
index 44eb44c..55a47fb 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFArray.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFArray.java
@@ -80,15 +80,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("array(");
-    for (int i = 0; i < children.length; i++) {
-      sb.append(children[i]);
-      if (i + 1 != children.length) {
-        sb.append(",");
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("array", children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAssertTrue.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAssertTrue.java
index e5999d6..b952205 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAssertTrue.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFAssertTrue.java
@@ -75,15 +75,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
  @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("assert_true(");
-    for (int i = 0; i < children.length; ++i) {
-      sb.append(children[i]);
-      if (i != children.length - 1) {
-        sb.append(", ");
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("assert_true", children);
   }  
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseNumeric.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseNumeric.java
index 39875fc..1daf57e 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseNumeric.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseNumeric.java
@@ -22,7 +22,6 @@
 import java.util.List;
 
 import org.apache.hadoop.hive.common.type.HiveDecimal;
-import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.exec.Description;
 import org.apache.hadoop.hive.ql.exec.FunctionRegistry;
 import org.apache.hadoop.hive.ql.exec.NoMatchingMethodException;
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBasePad.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBasePad.java
index c86a9bd..3904ca4 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBasePad.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBasePad.java
@@ -18,16 +18,15 @@
 
 package org.apache.hadoop.hive.ql.udf.generic;
 
-import org.apache.commons.lang.StringUtils;
 import org.apache.hadoop.hive.ql.exec.UDFArgumentException;
 import org.apache.hadoop.hive.ql.exec.UDFArgumentTypeException;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorConverters;
-import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
-import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorConverters.Converter;
+import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector.PrimitiveCategory;
+import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;
 import org.apache.hadoop.io.IntWritable;
 import org.apache.hadoop.io.Text;
 
@@ -85,7 +84,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    return udfName + "(" + StringUtils.join(children, ", ") + ")";
+    return getStandardDisplayString(udfName, children);
   }
 
   protected abstract void performOp(byte[] data, byte[] txt, byte[] padTxt, int len, Text str,
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseTrim.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseTrim.java
index b12f856..cafdd3e 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseTrim.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseTrim.java
@@ -78,7 +78,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    return udfName + "(" + StringUtils.join(children, ", ") + ")";
+    return getStandardDisplayString(udfName, children);
   }
 
   protected abstract String performOp(String val);
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFCoalesce.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFCoalesce.java
index 03e5b70..8890e69 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFCoalesce.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFCoalesce.java
@@ -69,17 +69,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("COALESCE(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(",");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("COALESCE", children, ",");
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcat.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcat.java
index fac13ba..6286984 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcat.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcat.java
@@ -205,17 +205,7 @@ public String stringEvaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("concat(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("concat", children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java
index 8763942..606cb22 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java
@@ -142,12 +142,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length >= 2);
-    StringBuilder sb = new StringBuilder();
-    sb.append("concat_ws(");
-    for (int i = 0; i < children.length - 1; i++) {
-      sb.append(children[i]).append(", ");
-    }
-    sb.append(children[children.length - 1]).append(")");
-    return sb.toString();
+    return getStandardDisplayString("concat_ws", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDate.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDate.java
index 9ee9480..86a0714 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDate.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDate.java
@@ -131,17 +131,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("to_date(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("to_date", children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java
index e2db7b1..59e8288 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java
@@ -196,16 +196,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("date_add(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("date_add", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateDiff.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateDiff.java
index 1ecd835..403cf11 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateDiff.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateDiff.java
@@ -96,17 +96,7 @@ public IntWritable evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("datediff(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("datediff", children);
   }
 
   private Date convertToDate(PrimitiveCategory inputType, Converter converter, DeferredObject argument)
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java
index cb13060..b678c17 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java
@@ -196,16 +196,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("date_sub(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("date_sub", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDecode.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDecode.java
index 4d8473f..2998479 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDecode.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDecode.java
@@ -105,10 +105,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    StringBuilder sb = new StringBuilder();
-    sb.append("encode(");
-    sb.append(children[0]).append(",");
-    sb.append(children[1]).append(")");
-    return sb.toString();
+    return getStandardDisplayString("decode", children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEWAHBitmapEmpty.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEWAHBitmapEmpty.java
index 4a14a65..60e0567 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEWAHBitmapEmpty.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEWAHBitmapEmpty.java
@@ -95,15 +95,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("EWAH_BITMAP_EMPTY(");
-    for (int i = 0; i < children.length; i++) {
-      sb.append(children[i]);
-      if (i + 1 != children.length) {
-        sb.append(",");
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("EWAH_BITMAP_EMPTY", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFElt.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFElt.java
index 85ba993..2dc6ffe 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFElt.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFElt.java
@@ -92,12 +92,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length >= 2);
-    StringBuilder sb = new StringBuilder();
-    sb.append("elt(");
-    for (int i = 0; i < children.length - 1; i++) {
-      sb.append(children[i]).append(", ");
-    }
-    sb.append(children[children.length - 1]).append(")");
-    return sb.toString();
+    return getStandardDisplayString("elt", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEncode.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEncode.java
index ee59e39..a396a20 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEncode.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFEncode.java
@@ -116,10 +116,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    StringBuilder sb = new StringBuilder();
-    sb.append("encode(");
-    sb.append(children[0]).append(",");
-    sb.append(children[1]).append(")");
-    return sb.toString();
+    return getStandardDisplayString("encode", children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFField.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFField.java
index d7e65fa..0552be7 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFField.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFField.java
@@ -90,12 +90,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length >= 2);
-
-    final StringBuilder sb = new StringBuilder();
-    sb.append("field(");
-    sb.append(StringUtils.join(children, ", "));
-    sb.append(")");
-
-    return sb.toString();
+    return getStandardDisplayString("field", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFloorCeilBase.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFloorCeilBase.java
index 894b649..754648d 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFloorCeilBase.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFloorCeilBase.java
@@ -128,7 +128,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 1);
-    return opDisplayName + "(" + children[0] + ")";
+    return getStandardDisplayString(opDisplayName, children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFormatNumber.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFormatNumber.java
index 3586b8d..ce0c9d5 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFormatNumber.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFormatNumber.java
@@ -220,12 +220,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    StringBuilder sb = new StringBuilder();
-    sb.append("format_number(");
-    for (int i = 0; i < children.length - 1; i++) {
-      sb.append(children[i]).append(", ");
-    }
-    sb.append(children[children.length - 1]).append(")");
-    return sb.toString();
+    return getStandardDisplayString("format_number", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFGreatest.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFGreatest.java
index 5d6925b..e919345 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFGreatest.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFGreatest.java
@@ -94,17 +94,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append(getFuncName()).append("(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(",");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString(getFuncName(), children, ",");
   }
 
   protected String getFuncName() {
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFHash.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFHash.java
index 3e04951..474f404 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFHash.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFHash.java
@@ -58,7 +58,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    return "hash(" + StringUtils.join(children, ',') + ")";
+    return getStandardDisplayString("hash", children, ",");
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIf.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIf.java
index 7009026..568fd46 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIf.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIf.java
@@ -139,11 +139,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 3);
-    StringBuilder sb = new StringBuilder();
-    sb.append("if(");
-    sb.append(children[0]).append(", ");
-    sb.append(children[1]).append(", ");
-    sb.append(children[2]).append(")");
-    return sb.toString();
+    return getStandardDisplayString("if", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInFile.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInFile.java
index 5163cef..aad4f18 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInFile.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInFile.java
@@ -165,6 +165,6 @@ public void copyToNewInstance(Object newInstance) throws UDFArgumentException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    return "in_file(" + children[0] + ", " + children[1] + ")";
+    return getStandardDisplayString("in_file", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInitCap.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInitCap.java
index 067f3d1..406fcd6 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInitCap.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInitCap.java
@@ -108,16 +108,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("initcap(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(",");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("initcap", children);
   }
 }
\ No newline at end of file
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInstr.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInstr.java
index db5b8c9..0a13ac9 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInstr.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFInstr.java
@@ -93,6 +93,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    return "instr(" + children[0] + children[1] + ")";
+    return getStandardDisplayString("instr", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLastDay.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLastDay.java
index c5669a1..3a43c57 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLastDay.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLastDay.java
@@ -133,17 +133,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("last_day(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("last_day", children);
   }
 
   protected Calendar lastDay(Date d) {
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLeadLag.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLeadLag.java
index ec49f05..4740b81 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLeadLag.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLeadLag.java
@@ -165,14 +165,7 @@ public void setAmt(int amt) {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    StringBuilder sb = new StringBuilder();
-    sb.append(_getFnName());
-    sb.append("(");
-    sb.append(children[0]);
-    sb.append(", ");
-    sb.append(children[1]);
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString(_getFnName(), children);
   }
 
   protected abstract String _getFnName();
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLocate.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLocate.java
index aaf6dce..094f280 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLocate.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLocate.java
@@ -109,7 +109,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2 || children.length == 3);
-    return "locate(" + children[0] + children[1]
-        + (children.length == 3 ? children[2] : "") + ")";
+    return getStandardDisplayString("locate", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
index aa04b38..659d479 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
@@ -105,17 +105,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("lower(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(",");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("lower", children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMacro.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMacro.java
index 9400962..3f505f2 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMacro.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMacro.java
@@ -128,17 +128,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-      StringBuilder sb = new StringBuilder();
-      sb.append(macroName);
-      sb.append("(");
-      for (int i = 0; i < children.length; i++) {
-        sb.append(children[i]);
-        if (i + 1 < children.length) {
-          sb.append(", ");
-        }
-      }
-      sb.append(")");
-      return sb.toString();
+      return getStandardDisplayString(macroName, children);
   }
 
   public void setMacroName(String macroName) {
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapKeys.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapKeys.java
index b3c8962..d0cff08 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapKeys.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapKeys.java
@@ -72,6 +72,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert children.length == 1;
-    return "map_keys(" + children[0] + ")";
+    return getStandardDisplayString("map_keys", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapValues.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapValues.java
index bd08a21..096ceac 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapValues.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapValues.java
@@ -68,6 +68,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert children.length == 1;
-    return "map_values(" + children[0] + ")";
+    return getStandardDisplayString("map_values", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFNamedStruct.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFNamedStruct.java
index 7b18d82..d58ecb4 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFNamedStruct.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFNamedStruct.java
@@ -75,15 +75,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("named_struct(");
-    for (int i = 0; i < children.length; i++) {
-      if (i > 0) {
-        sb.append(',');
-      }
-      sb.append(children[i]);
-    }
-    sb.append(')');
-    return sb.toString();
+    return getStandardDisplayString("named_struct", children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPower.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPower.java
index c1fe4aa..0d4fea1 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPower.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPower.java
@@ -41,7 +41,6 @@
 @VectorizedExpressions({FuncPowerLongToDouble.class, FuncPowerDoubleToDouble.class})
 public class GenericUDFPower extends GenericUDF {
   private final String opName;
-  private final String opDisplayName;
 
   private transient PrimitiveObjectInspector baseOI;
   private transient PrimitiveObjectInspector powerOI;
@@ -54,7 +53,6 @@
 
   public GenericUDFPower() {
     opName = getClass().getSimpleName();
-    opDisplayName = "power";
     resultOI = PrimitiveObjectInspectorFactory.writableDoubleObjectInspector;
   }
 
@@ -103,7 +101,7 @@ public ObjectInspector initialize(ObjectInspector[] arguments) throws UDFArgumen
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    return opDisplayName + "(" + children[0] + ", " + children[1] + ")";
+    return getStandardDisplayString("power", children);
   }
 
   @Override
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java
index e9c0cc4..cb6dd62 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java
@@ -141,12 +141,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length >= 2);
-    StringBuilder sb = new StringBuilder();
-    sb.append("printf(");
-    for (int i = 0; i < children.length - 1; i++) {
-      sb.append(children[i]).append(", ");
-    }
-    sb.append(children[children.length - 1]).append(")");
-    return sb.toString();
+    return getStandardDisplayString("printf", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFRound.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFRound.java
index 387de5e..8c5033d 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFRound.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFRound.java
@@ -256,17 +256,7 @@ private static DoubleWritable round(DoubleWritable input, int scale) {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("round(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(", ");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("round", children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSentences.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSentences.java
index c24c0ec..3c5a473 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSentences.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSentences.java
@@ -128,14 +128,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length >= 1 && children.length <= 3);
-    String display = "sentences(" + children[0];
-    if(children.length > 1) {
-      display += ", " + children[1];
-      if(children.length > 2) {
-        display += ", " + children[2];
-      }
-    }
-    display += ")";
-    return display;
+    return getStandardDisplayString("sentences", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSize.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSize.java
index c31ab54..4543429 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSize.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSize.java
@@ -79,6 +79,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 1);
-    return "size(" + children[0] + ")";
+    return getStandardDisplayString("size", children);
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java
index d305174..edc75ec 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java
@@ -111,6 +111,6 @@ public int compare(Object o1, Object o2) {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 1);
-    return "sort_array(" + children[0] + ")";
+    return getStandardDisplayString("sort_array", children);
  }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java
index e11f6c1..88a03ef 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java
@@ -82,7 +82,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 2);
-    return "split(" + children[0] + ", " + children[1] + ")";
+    return getStandardDisplayString("split", children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStringToMap.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStringToMap.java
index 4c21a7e..ed60fbf 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStringToMap.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStringToMap.java
@@ -104,19 +104,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("str_to_map(");
     assert (children.length <= 3);
-    boolean firstChild = true;
-    for (String child : children) {
-      if (firstChild) {
-        firstChild = false;
-      } else {
-        sb.append(",");
-      }
-      sb.append(child);
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("str_to_map", children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStruct.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStruct.java
index 7c8dfcf..7df3f7d 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStruct.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStruct.java
@@ -59,15 +59,6 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("struct(");
-    for (int i = 0; i < children.length; i++) {
-      if (i > 0) {
-        sb.append(',');
-      }
-      sb.append(children[i]);
-    }
-    sb.append(')');
-    return sb.toString();
+    return getStandardDisplayString("struct", children, ",");
   }
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTranslate.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTranslate.java
index 814ec6a..4ac542f 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTranslate.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTranslate.java
@@ -287,7 +287,7 @@ private String processInput(Text input) {
   @Override
   public String getDisplayString(String[] children) {
     assert (children.length == 3);
-    return "translate(" + children[0] + ", " + children[1] + ", " + children[2] + ")";
+    return getStandardDisplayString("translate", children);
   }
 
 }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java
index db4a2cf..a341bda 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java
@@ -107,17 +107,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
   @Override
   public String getDisplayString(String[] children) {
-    StringBuilder sb = new StringBuilder();
-    sb.append("upper(");
-    if (children.length > 0) {
-      sb.append(children[0]);
-      for (int i = 1; i < children.length; i++) {
-        sb.append(",");
-        sb.append(children[i]);
-      }
-    }
-    sb.append(")");
-    return sb.toString();
+    return getStandardDisplayString("upper", children);
   }
 
 }
diff --git a/ql/src/test/results/clientpositive/udf_instr.q.out b/ql/src/test/results/clientpositive/udf_instr.q.out
index a2dbb05..812f244 100644
--- a/ql/src/test/results/clientpositive/udf_instr.q.out
+++ b/ql/src/test/results/clientpositive/udf_instr.q.out
@@ -56,7 +56,7 @@ STAGE PLANS:
           Row Limit Per Split: 1
           Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
           Select Operator
-            expressions: 1 (type: int), 0 (type: int), 2 (type: int), 2 (type: int), 0 (type: int), 0 (type: int), 2 (type: int), 3 (type: int), 4 (type: int), 2 (type: int), 3 (type: int), instr(null'abc') (type: int), instr('abcd'null) (type: int)
+            expressions: 1 (type: int), 0 (type: int), 2 (type: int), 2 (type: int), 0 (type: int), 0 (type: int), 2 (type: int), 3 (type: int), 4 (type: int), 2 (type: int), 3 (type: int), instr(null, 'abc') (type: int), instr('abcd', null) (type: int)
             outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
             Statistics: Num rows: 500 Data size: 26000 Basic stats: COMPLETE Column stats: COMPLETE
             ListSink
diff --git a/ql/src/test/results/clientpositive/udf_locate.q.out b/ql/src/test/results/clientpositive/udf_locate.q.out
index 5bac567..1d10ecd 100644
--- a/ql/src/test/results/clientpositive/udf_locate.q.out
+++ b/ql/src/test/results/clientpositive/udf_locate.q.out
@@ -64,7 +64,7 @@ STAGE PLANS:
           Row Limit Per Split: 1
           Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
           Select Operator
-            expressions: 1 (type: int), 0 (type: int), 2 (type: int), 2 (type: int), 4 (type: int), 4 (type: int), 0 (type: int), 0 (type: int), 2 (type: int), 3 (type: int), 4 (type: int), 2 (type: int), 3 (type: int), locate(null'abc') (type: int), locate('abc'null) (type: int), locate('abc''abcd'null) (type: int), 0 (type: int)
+            expressions: 1 (type: int), 0 (type: int), 2 (type: int), 2 (type: int), 4 (type: int), 4 (type: int), 0 (type: int), 0 (type: int), 2 (type: int), 3 (type: int), 4 (type: int), 2 (type: int), 3 (type: int), locate(null, 'abc') (type: int), locate('abc', null) (type: int), locate('abc', 'abcd', null) (type: int), 0 (type: int)
             outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
             Statistics: Num rows: 500 Data size: 34000 Basic stats: COMPLETE Column stats: COMPLETE
             ListSink
-- 
1.7.9.5


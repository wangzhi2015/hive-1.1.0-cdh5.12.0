From 7ee5eda8d317cc37a72c5b632fec5351cf31eecc Mon Sep 17 00:00:00 2001
From: Aihua Xu <aihuaxu@apache.org>
Date: Thu, 28 Jan 2016 16:00:24 -0500
Subject: [PATCH 0553/1164] CDH-38786: HIVE-12958: Make embedded Jetty server
 more configurable (Aihua Xu, reviewed by Yongzhi
 Chen)

Change-Id: I91a98bd8b95fd709a0f8e842834d9c4b11eff656
---
 .../svr/src/main/config/webhcat-default.xml        |    6 ++++++
 .../apache/hive/hcatalog/templeton/AppConfig.java  |    2 ++
 .../org/apache/hive/hcatalog/templeton/Main.java   |   20 ++++++++++++++++++--
 3 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/hcatalog/webhcat/svr/src/main/config/webhcat-default.xml b/hcatalog/webhcat/svr/src/main/config/webhcat-default.xml
index 5344a0f..08e6ea3 100644
--- a/hcatalog/webhcat/svr/src/main/config/webhcat-default.xml
+++ b/hcatalog/webhcat/svr/src/main/config/webhcat-default.xml
@@ -32,6 +32,12 @@
   </property>
 
   <property>
+    <name>templeton.jetty.configuration</name>
+    <value></value>
+    <description>The embedded jetty configuration file.</description>
+  </property>
+
+  <property>
     <name>templeton.hadoop.conf.dir</name>
     <value>${env.HADOOP_CONF_DIR}</value>
     <description>The path to the Hadoop configuration.</description>
diff --git a/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/AppConfig.java b/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/AppConfig.java
index 37ce997..8fa8728 100644
--- a/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/AppConfig.java
+++ b/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/AppConfig.java
@@ -91,6 +91,7 @@
   };
 
   public static final String PORT                = "templeton.port";
+  public static final String JETTY_CONFIGURATION = "templeton.jetty.configuration";
   public static final String EXEC_ENCODING_NAME  = "templeton.exec.encoding";
   public static final String EXEC_ENVS_NAME      = "templeton.exec.envs";
   public static final String EXEC_MAX_BYTES_NAME = "templeton.exec.max-output-bytes";
@@ -294,6 +295,7 @@ private boolean loadOneClasspathConfig(String fname) {
     return false;
   }
 
+  public String jettyConfiguration() { return get(JETTY_CONFIGURATION); }
   public String libJars()          { return get(LIB_JARS_NAME); }
   public String hadoopQueueName()  { return get(HADOOP_QUEUE_NAME); }
   public String clusterHadoop()    { return get(HADOOP_NAME); }
diff --git a/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/Main.java b/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/Main.java
index d1f45f3..bc89037 100644
--- a/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/Main.java
+++ b/hcatalog/webhcat/svr/src/main/java/org/apache/hive/hcatalog/templeton/Main.java
@@ -22,12 +22,15 @@
 import com.sun.jersey.spi.container.servlet.ServletContainer;
 
 import java.io.File;
+import java.io.FileInputStream;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.HashMap;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.commons.lang3.StringUtils;
+import org.apache.commons.lang3.ArrayUtils;
 import org.apache.hadoop.hive.common.classification.InterfaceAudience;
 import org.apache.hadoop.hive.common.classification.InterfaceStability;
 import org.apache.hadoop.hdfs.web.AuthFilter;
@@ -44,6 +47,7 @@
 import org.eclipse.jetty.servlet.FilterMapping;
 import org.eclipse.jetty.servlet.ServletContextHandler;
 import org.eclipse.jetty.servlet.ServletHolder;
+import org.eclipse.jetty.xml.XmlConfiguration;
 import org.slf4j.bridge.SLF4JBridgeHandler;
 
 import javax.servlet.http.HttpServletRequest;
@@ -116,6 +120,9 @@ public void run() {
     try {
       checkEnv();
       runServer(port);
+      // Currently only print the first port to be consistent with old behavior
+      port =  ArrayUtils.isEmpty(server.getConnectors()) ? -1 : server.getConnectors()[0].getPort();
+
       System.out.println("templeton: listening on port " + port);
       LOG.info("Templeton listening on port " + port);
     } catch (Exception e) {
@@ -162,8 +169,17 @@ public Server runServer(int port)
         conf.kerberosKeytab());
     }
 
-    // Create the Jetty server
-    Server server = new Server(port);
+    // Create the Jetty server. If jetty conf file exists, use that to create server
+    // to have more control.
+    Server server = null;
+    if (StringUtils.isEmpty(conf.jettyConfiguration())) {
+      server = new Server(port);
+    } else {
+        FileInputStream jettyConf = new FileInputStream(conf.jettyConfiguration());
+        XmlConfiguration configuration = new XmlConfiguration(jettyConf);
+        server = (Server)configuration.configure();
+    }
+
     ServletContextHandler root = new ServletContextHandler(server, "/");
 
     // Add the Auth filter
-- 
1.7.9.5


From 1afca3eb55d473e2eca5695f8bffe89cdbef9ae8 Mon Sep 17 00:00:00 2001
From: yangfang <yang.fang2@zte.com.cn>
Date: Mon, 14 Dec 2015 03:13:00 -0800
Subject: [PATCH 0752/1164] CDH-43480: HIVE-12653 : The property 
 "serialization.encoding" in the class
 "org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe"
 does not work (yangfeng via Ashutosh Chauhan)

Change-Id: Ica41b334ea9cb14c0871e2d95851548536f71a5c
---
 .../hive/contrib/serde2/MultiDelimitSerDe.java     |   23 +++++++++++++++-----
 1 file changed, 18 insertions(+), 5 deletions(-)

diff --git a/contrib/src/java/org/apache/hadoop/hive/contrib/serde2/MultiDelimitSerDe.java b/contrib/src/java/org/apache/hadoop/hive/contrib/serde2/MultiDelimitSerDe.java
index 957804a..109144d 100644
--- a/contrib/src/java/org/apache/hadoop/hive/contrib/serde2/MultiDelimitSerDe.java
+++ b/contrib/src/java/org/apache/hadoop/hive/contrib/serde2/MultiDelimitSerDe.java
@@ -65,7 +65,7 @@
     serdeConstants.SERIALIZATION_ENCODING,
     LazySerDeParameters.SERIALIZATION_EXTEND_NESTING_LEVELS,
     LazySerDeParameters.SERIALIZATION_EXTEND_ADDITIONAL_NESTING_LEVELS})
-public class MultiDelimitSerDe extends AbstractSerDe {
+public class MultiDelimitSerDe extends AbstractEncodingAwareSerDe {
   private static final Log LOG = LogFactory.getLog(MultiDelimitSerDe.class.getName());
   private static final byte[] DEFAULT_SEPARATORS = {(byte) 1, (byte) 2, (byte) 3};
   // Due to HIVE-6404, define our own constant
@@ -96,6 +96,7 @@
   @Override
   public void initialize(Configuration conf, Properties tbl) throws SerDeException {
     // get the SerDe parameters
+    super.initialize(conf, tbl);
     serdeParams = new LazySerDeParameters(conf, tbl, getClass().getName());
 
     fieldDelimited = tbl.getProperty(serdeConstants.FIELD_DELIM);
@@ -136,8 +137,9 @@ public ObjectInspector getObjectInspector() throws SerDeException {
     return Text.class;
   }
 
-  @Override
-  public Object deserialize(Writable blob) throws SerDeException {
+
+  @Override 
+  public Object doDeserialize(Writable blob) throws SerDeException {
     if (byteArrayRef == null) {
       byteArrayRef = new ByteArrayRef();
     }
@@ -161,8 +163,9 @@ public Object deserialize(Writable blob) throws SerDeException {
     return cachedLazyStruct;
   }
 
-  @Override
-  public Writable serialize(Object obj, ObjectInspector objInspector) throws SerDeException {
+  @Override 
+  public Writable doSerialize(Object obj, ObjectInspector objInspector)
+      throws SerDeException {
     StructObjectInspector soi = (StructObjectInspector) objInspector;
     List<? extends StructField> fields = soi.getAllStructFieldRefs();
     List<Object> list = soi.getStructFieldsDataAsList(obj);
@@ -288,6 +291,16 @@ private static void serializeNoEncode(ByteStream.Output out, Object obj,
     throw new RuntimeException("Unknown category type: "+ objInspector.getCategory());
   }
 
+  protected Text transformFromUTF8(Writable blob) {
+    Text text = (Text)blob;
+    return SerDeUtils.transformTextFromUTF8(text, this.charset);
+  }
+
+  protected Text transformToUTF8(Writable blob) {
+    Text text = (Text) blob;
+    return SerDeUtils.transformTextToUTF8(text, this.charset);
+  }
+
   @Override
   public SerDeStats getSerDeStats() {
     // no support for statistics
-- 
1.7.9.5


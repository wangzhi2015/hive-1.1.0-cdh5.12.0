From 1afbc91ce2acaee555edd2f562e61e1d688b23c8 Mon Sep 17 00:00:00 2001
From: Vihang Karajgaonkar <vihang@cloudera.com>
Date: Wed, 1 Mar 2017 16:09:50 -0600
Subject: [PATCH 1000/1164] CDH-50721 : HIVE-16014: HiveMetastoreChecker
 should use hive.metastore.fshandler.threads
 instead of hive.mv.files.thread for pool size
 (Vihang Karajgaonkar, reviewed by Sahil Takiar,
 Sergio Pena, Rajesh Balamohan)

Change-Id: I66a2f7c2f8c858ecb2dbb8df9fddc4428ed9121a
---
 .../hive/ql/metadata/HiveMetaStoreChecker.java     |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/metadata/HiveMetaStoreChecker.java b/ql/src/java/org/apache/hadoop/hive/ql/metadata/HiveMetaStoreChecker.java
index 05517ee..8eb8154 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/metadata/HiveMetaStoreChecker.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/metadata/HiveMetaStoreChecker.java
@@ -381,7 +381,12 @@ private String getPartitionName(Path tablePath, Path partitionPath) {
    */
 
   private void checkPartitionDirs(Path basePath, Set<Path> allDirs, int maxDepth) throws IOException, HiveException {
-    int poolSize = conf.getInt(ConfVars.HIVE_MOVE_FILES_THREAD_COUNT.varname, 15);
+    // Here we just reuse the THREAD_COUNT configuration for
+    // METASTORE_FS_HANDLER_THREADS_COUNT since this results in better performance
+    // The number of missing partitions discovered are later added by metastore using a
+    // threadpool of size METASTORE_FS_HANDLER_THREADS_COUNT. If we have different sized
+    // pool here the smaller sized pool of the two becomes a bottleneck
+    int poolSize = conf.getInt(ConfVars.METASTORE_FS_HANDLER_THREADS_COUNT.varname, 15);
 
     // Check if too low config is provided for move files. 2x CPU is reasonable max count.
     poolSize = poolSize == 0 ? poolSize : Math.max(poolSize,
-- 
1.7.9.5


From 441fdf8edbbb9caaf970b07c174be92204b7fded Mon Sep 17 00:00:00 2001
From: Mohit Sabharwal <mohit@cloudera.com>
Date: Mon, 9 May 2016 20:34:18 -0700
Subject: [PATCH 0597/1164] CDH-26652 : HIVE-13657: Spark driver stderr logs
 should appear in hive client logs

Change-Id: Ie8208d74ae0d3b719b351fa1034e3ab027f8aa56
---
 .../apache/hive/spark/client/SparkClientImpl.java  |   35 ++++++++++++++++----
 1 file changed, 28 insertions(+), 7 deletions(-)

diff --git a/spark-client/src/main/java/org/apache/hive/spark/client/SparkClientImpl.java b/spark-client/src/main/java/org/apache/hive/spark/client/SparkClientImpl.java
index 3d682a0..687d9a3 100644
--- a/spark-client/src/main/java/org/apache/hive/spark/client/SparkClientImpl.java
+++ b/spark-client/src/main/java/org/apache/hive/spark/client/SparkClientImpl.java
@@ -42,6 +42,7 @@
 import java.io.Writer;
 import java.net.URI;
 import java.net.URL;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 import java.util.Properties;
@@ -67,6 +68,7 @@
   private static final Logger LOG = LoggerFactory.getLogger(SparkClientImpl.class);
 
   private static final long DEFAULT_SHUTDOWN_TIMEOUT = 10000; // In milliseconds
+  private static final long MAX_ERR_LOG_LINES_FOR_RPC = 1000;
 
   private static final String OSX_TEST_OPTS = "SPARK_OSX_TEST_OPTS";
   private static final String SPARK_HOME_ENV = "SPARK_HOME";
@@ -384,7 +386,6 @@ public void run() {
           argv.add(numOfExecutors);
         }
       }
-
       if (hiveConf.getBoolVar(HiveConf.ConfVars.HIVE_SERVER2_ENABLE_DOAS)) {
         try {
           String currentUser = Utils.getUGI().getShortUserName();
@@ -438,8 +439,9 @@ public void run() {
 
       final Process child = pb.start();
       int childId = childIdGenerator.incrementAndGet();
-      redirect("stdout-redir-" + childId, child.getInputStream());
-      redirect("stderr-redir-" + childId, child.getErrorStream());
+      final List<String> childErrorLog = new ArrayList<String>();
+      redirect("stdout-redir-" + childId, new Redirector(child.getInputStream()));
+      redirect("stderr-redir-" + childId, new Redirector(child.getErrorStream(), childErrorLog));
 
       runnable = new Runnable() {
         @Override
@@ -447,8 +449,15 @@ public void run() {
           try {
             int exitCode = child.waitFor();
             if (exitCode != 0) {
-              rpcServer.cancelClient(clientId, "Child process exited before connecting back");
-              LOG.warn("Child process exited with code {}.", exitCode);
+              StringBuilder errStr = new StringBuilder();
+              for (String s : childErrorLog) {
+                errStr.append(s);
+                errStr.append('\n');
+              }
+
+              rpcServer.cancelClient(clientId,
+                  "Child process exited before connecting back with error log " + errStr.toString());
+              LOG.warn("Child process exited with code {}", exitCode);
             }
           } catch (InterruptedException ie) {
             LOG.warn("Waiting thread interrupted, killing child process.");
@@ -468,8 +477,8 @@ public void run() {
     return thread;
   }
 
-  private void redirect(String name, InputStream in) {
-    Thread thread = new Thread(new Redirector(in));
+  private void redirect(String name, Redirector redirector) {
+    Thread thread = new Thread(redirector);
     thread.setName(name);
     thread.setDaemon(true);
     thread.start();
@@ -580,17 +589,29 @@ private void handle(ChannelHandlerContext ctx, JobSubmitted msg) {
   private class Redirector implements Runnable {
 
     private final BufferedReader in;
+    private List<String> errLogs;
+    private int numErrLogLines = 0;
 
     Redirector(InputStream in) {
       this.in = new BufferedReader(new InputStreamReader(in));
     }
 
+    Redirector(InputStream in, List<String> errLogs) {
+      this.in = new BufferedReader(new InputStreamReader(in));
+      this.errLogs = errLogs;
+    }
+
     @Override
     public void run() {
       try {
         String line = null;
         while ((line = in.readLine()) != null) {
           LOG.info(line);
+          if (errLogs != null) {
+            if (numErrLogLines++ < MAX_ERR_LOG_LINES_FOR_RPC) {
+              errLogs.add(line);
+            }
+          }
         }
       } catch (Exception e) {
         LOG.warn("Error in redirector thread.", e);
-- 
1.7.9.5


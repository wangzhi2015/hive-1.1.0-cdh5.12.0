From ceb16b780a72b62d2bd5a1595702070e7c8ba413 Mon Sep 17 00:00:00 2001
From: Vihang Karajgaonkar <vihang@cloudera.com>
Date: Mon, 22 May 2017 13:15:28 -0700
Subject: [PATCH 1137/1164] CDH-54185 : HIVE-11487: Add
 getNumPartitionsByFilter api in metastore api

Change-Id: I6dee86e767a2019d097cb0fc51216605095e6f2b
---
 metastore/if/hive_metastore.thrift                 |    4 +
 .../src/gen/thrift/gen-cpp/ThriftHiveMetastore.cpp |  360 ++
 .../src/gen/thrift/gen-cpp/ThriftHiveMetastore.h   |  165 +
 .../ThriftHiveMetastore_server.skeleton.cpp        |    5 +
 .../hive/metastore/api/ThriftHiveMetastore.java    | 5265 ++++++++++++--------
 .../gen-php/metastore/ThriftHiveMetastore.php      |  288 ++
 .../hive_metastore/ThriftHiveMetastore-remote      |    7 +
 .../gen-py/hive_metastore/ThriftHiveMetastore.py   |  233 +
 .../src/gen/thrift/gen-rb/thrift_hive_metastore.rb |   70 +
 .../hadoop/hive/metastore/HiveMetaStore.java       |    3 +-
 .../hadoop/hive/metastore/HiveMetaStoreClient.java |   17 +
 .../hadoop/hive/metastore/IMetaStoreClient.java    |   15 +
 .../org/apache/hadoop/hive/ql/metadata/Hive.java   |   24 +
 13 files changed, 4441 insertions(+), 2015 deletions(-)

diff --git a/metastore/if/hive_metastore.thrift b/metastore/if/hive_metastore.thrift
index 2b4e29d..a30502e 100755
--- a/metastore/if/hive_metastore.thrift
+++ b/metastore/if/hive_metastore.thrift
@@ -969,6 +969,10 @@ service ThriftHiveMetastore extends fb303.FacebookService
     3:string filter, 4:i16 max_parts=-1)
                        throws(1:MetaException o1, 2:NoSuchObjectException o2)
 
+  // get the partitions matching the given partition filter
+  i32 get_num_partitions_by_filter(1:string db_name 2:string tbl_name 3:string filter)
+                       throws(1:MetaException o1, 2:NoSuchObjectException o2)
+
   // List partitions as PartitionSpec instances.
   list<PartitionSpec> get_part_specs_by_filter(1:string db_name 2:string tbl_name
     3:string filter, 4:i32 max_parts=-1)
diff --git a/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.cpp b/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.cpp
index b170d77..bae49c4 100644
--- a/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.cpp
+++ b/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.cpp
@@ -14148,6 +14148,240 @@ uint32_t ThriftHiveMetastore_get_partitions_by_filter_presult::read(::apache::th
   return xfer;
 }
 
+uint32_t ThriftHiveMetastore_get_num_partitions_by_filter_args::read(::apache::thrift::protocol::TProtocol* iprot) {
+
+  uint32_t xfer = 0;
+  std::string fname;
+  ::apache::thrift::protocol::TType ftype;
+  int16_t fid;
+
+  xfer += iprot->readStructBegin(fname);
+
+  using ::apache::thrift::protocol::TProtocolException;
+
+
+  while (true)
+  {
+    xfer += iprot->readFieldBegin(fname, ftype, fid);
+    if (ftype == ::apache::thrift::protocol::T_STOP) {
+      break;
+    }
+    switch (fid)
+    {
+      case 1:
+        if (ftype == ::apache::thrift::protocol::T_STRING) {
+          xfer += iprot->readString(this->db_name);
+          this->__isset.db_name = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      case 2:
+        if (ftype == ::apache::thrift::protocol::T_STRING) {
+          xfer += iprot->readString(this->tbl_name);
+          this->__isset.tbl_name = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      case 3:
+        if (ftype == ::apache::thrift::protocol::T_STRING) {
+          xfer += iprot->readString(this->filter);
+          this->__isset.filter = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      default:
+        xfer += iprot->skip(ftype);
+        break;
+    }
+    xfer += iprot->readFieldEnd();
+  }
+
+  xfer += iprot->readStructEnd();
+
+  return xfer;
+}
+
+uint32_t ThriftHiveMetastore_get_num_partitions_by_filter_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
+  uint32_t xfer = 0;
+  xfer += oprot->writeStructBegin("ThriftHiveMetastore_get_num_partitions_by_filter_args");
+
+  xfer += oprot->writeFieldBegin("db_name", ::apache::thrift::protocol::T_STRING, 1);
+  xfer += oprot->writeString(this->db_name);
+  xfer += oprot->writeFieldEnd();
+
+  xfer += oprot->writeFieldBegin("tbl_name", ::apache::thrift::protocol::T_STRING, 2);
+  xfer += oprot->writeString(this->tbl_name);
+  xfer += oprot->writeFieldEnd();
+
+  xfer += oprot->writeFieldBegin("filter", ::apache::thrift::protocol::T_STRING, 3);
+  xfer += oprot->writeString(this->filter);
+  xfer += oprot->writeFieldEnd();
+
+  xfer += oprot->writeFieldStop();
+  xfer += oprot->writeStructEnd();
+  return xfer;
+}
+
+uint32_t ThriftHiveMetastore_get_num_partitions_by_filter_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
+  uint32_t xfer = 0;
+  xfer += oprot->writeStructBegin("ThriftHiveMetastore_get_num_partitions_by_filter_pargs");
+
+  xfer += oprot->writeFieldBegin("db_name", ::apache::thrift::protocol::T_STRING, 1);
+  xfer += oprot->writeString((*(this->db_name)));
+  xfer += oprot->writeFieldEnd();
+
+  xfer += oprot->writeFieldBegin("tbl_name", ::apache::thrift::protocol::T_STRING, 2);
+  xfer += oprot->writeString((*(this->tbl_name)));
+  xfer += oprot->writeFieldEnd();
+
+  xfer += oprot->writeFieldBegin("filter", ::apache::thrift::protocol::T_STRING, 3);
+  xfer += oprot->writeString((*(this->filter)));
+  xfer += oprot->writeFieldEnd();
+
+  xfer += oprot->writeFieldStop();
+  xfer += oprot->writeStructEnd();
+  return xfer;
+}
+
+uint32_t ThriftHiveMetastore_get_num_partitions_by_filter_result::read(::apache::thrift::protocol::TProtocol* iprot) {
+
+  uint32_t xfer = 0;
+  std::string fname;
+  ::apache::thrift::protocol::TType ftype;
+  int16_t fid;
+
+  xfer += iprot->readStructBegin(fname);
+
+  using ::apache::thrift::protocol::TProtocolException;
+
+
+  while (true)
+  {
+    xfer += iprot->readFieldBegin(fname, ftype, fid);
+    if (ftype == ::apache::thrift::protocol::T_STOP) {
+      break;
+    }
+    switch (fid)
+    {
+      case 0:
+        if (ftype == ::apache::thrift::protocol::T_I32) {
+          xfer += iprot->readI32(this->success);
+          this->__isset.success = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      case 1:
+        if (ftype == ::apache::thrift::protocol::T_STRUCT) {
+          xfer += this->o1.read(iprot);
+          this->__isset.o1 = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      case 2:
+        if (ftype == ::apache::thrift::protocol::T_STRUCT) {
+          xfer += this->o2.read(iprot);
+          this->__isset.o2 = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      default:
+        xfer += iprot->skip(ftype);
+        break;
+    }
+    xfer += iprot->readFieldEnd();
+  }
+
+  xfer += iprot->readStructEnd();
+
+  return xfer;
+}
+
+uint32_t ThriftHiveMetastore_get_num_partitions_by_filter_result::write(::apache::thrift::protocol::TProtocol* oprot) const {
+
+  uint32_t xfer = 0;
+
+  xfer += oprot->writeStructBegin("ThriftHiveMetastore_get_num_partitions_by_filter_result");
+
+  if (this->__isset.success) {
+    xfer += oprot->writeFieldBegin("success", ::apache::thrift::protocol::T_I32, 0);
+    xfer += oprot->writeI32(this->success);
+    xfer += oprot->writeFieldEnd();
+  } else if (this->__isset.o1) {
+    xfer += oprot->writeFieldBegin("o1", ::apache::thrift::protocol::T_STRUCT, 1);
+    xfer += this->o1.write(oprot);
+    xfer += oprot->writeFieldEnd();
+  } else if (this->__isset.o2) {
+    xfer += oprot->writeFieldBegin("o2", ::apache::thrift::protocol::T_STRUCT, 2);
+    xfer += this->o2.write(oprot);
+    xfer += oprot->writeFieldEnd();
+  }
+  xfer += oprot->writeFieldStop();
+  xfer += oprot->writeStructEnd();
+  return xfer;
+}
+
+uint32_t ThriftHiveMetastore_get_num_partitions_by_filter_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
+
+  uint32_t xfer = 0;
+  std::string fname;
+  ::apache::thrift::protocol::TType ftype;
+  int16_t fid;
+
+  xfer += iprot->readStructBegin(fname);
+
+  using ::apache::thrift::protocol::TProtocolException;
+
+
+  while (true)
+  {
+    xfer += iprot->readFieldBegin(fname, ftype, fid);
+    if (ftype == ::apache::thrift::protocol::T_STOP) {
+      break;
+    }
+    switch (fid)
+    {
+      case 0:
+        if (ftype == ::apache::thrift::protocol::T_I32) {
+          xfer += iprot->readI32((*(this->success)));
+          this->__isset.success = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      case 1:
+        if (ftype == ::apache::thrift::protocol::T_STRUCT) {
+          xfer += this->o1.read(iprot);
+          this->__isset.o1 = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      case 2:
+        if (ftype == ::apache::thrift::protocol::T_STRUCT) {
+          xfer += this->o2.read(iprot);
+          this->__isset.o2 = true;
+        } else {
+          xfer += iprot->skip(ftype);
+        }
+        break;
+      default:
+        xfer += iprot->skip(ftype);
+        break;
+    }
+    xfer += iprot->readFieldEnd();
+  }
+
+  xfer += iprot->readStructEnd();
+
+  return xfer;
+}
+
 uint32_t ThriftHiveMetastore_get_part_specs_by_filter_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
   uint32_t xfer = 0;
@@ -32773,6 +33007,72 @@ void ThriftHiveMetastoreClient::recv_get_partitions_by_filter(std::vector<Partit
   throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "get_partitions_by_filter failed: unknown result");
 }
 
+int32_t ThriftHiveMetastoreClient::get_num_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter)
+{
+  send_get_num_partitions_by_filter(db_name, tbl_name, filter);
+  return recv_get_num_partitions_by_filter();
+}
+
+void ThriftHiveMetastoreClient::send_get_num_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter)
+{
+  int32_t cseqid = 0;
+  oprot_->writeMessageBegin("get_num_partitions_by_filter", ::apache::thrift::protocol::T_CALL, cseqid);
+
+  ThriftHiveMetastore_get_num_partitions_by_filter_pargs args;
+  args.db_name = &db_name;
+  args.tbl_name = &tbl_name;
+  args.filter = &filter;
+  args.write(oprot_);
+
+  oprot_->writeMessageEnd();
+  oprot_->getTransport()->writeEnd();
+  oprot_->getTransport()->flush();
+}
+
+int32_t ThriftHiveMetastoreClient::recv_get_num_partitions_by_filter()
+{
+
+  int32_t rseqid = 0;
+  std::string fname;
+  ::apache::thrift::protocol::TMessageType mtype;
+
+  iprot_->readMessageBegin(fname, mtype, rseqid);
+  if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
+    ::apache::thrift::TApplicationException x;
+    x.read(iprot_);
+    iprot_->readMessageEnd();
+    iprot_->getTransport()->readEnd();
+    throw x;
+  }
+  if (mtype != ::apache::thrift::protocol::T_REPLY) {
+    iprot_->skip(::apache::thrift::protocol::T_STRUCT);
+    iprot_->readMessageEnd();
+    iprot_->getTransport()->readEnd();
+  }
+  if (fname.compare("get_num_partitions_by_filter") != 0) {
+    iprot_->skip(::apache::thrift::protocol::T_STRUCT);
+    iprot_->readMessageEnd();
+    iprot_->getTransport()->readEnd();
+  }
+  int32_t _return;
+  ThriftHiveMetastore_get_num_partitions_by_filter_presult result;
+  result.success = &_return;
+  result.read(iprot_);
+  iprot_->readMessageEnd();
+  iprot_->getTransport()->readEnd();
+
+  if (result.__isset.success) {
+    return _return;
+  }
+  if (result.__isset.o1) {
+    throw result.o1;
+  }
+  if (result.__isset.o2) {
+    throw result.o2;
+  }
+  throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "get_num_partitions_by_filter failed: unknown result");
+}
+
 void ThriftHiveMetastoreClient::get_part_specs_by_filter(std::vector<PartitionSpec> & _return, const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int32_t max_parts)
 {
   send_get_part_specs_by_filter(db_name, tbl_name, filter, max_parts);
@@ -40587,6 +40887,66 @@ void ThriftHiveMetastoreProcessor::process_get_partitions_by_filter(int32_t seqi
   }
 }
 
+void ThriftHiveMetastoreProcessor::process_get_num_partitions_by_filter(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext)
+{
+  void* ctx = NULL;
+  if (this->eventHandler_.get() != NULL) {
+    ctx = this->eventHandler_->getContext("ThriftHiveMetastore.get_num_partitions_by_filter", callContext);
+  }
+  ::apache::thrift::TProcessorContextFreer freer(this->eventHandler_.get(), ctx, "ThriftHiveMetastore.get_num_partitions_by_filter");
+
+  if (this->eventHandler_.get() != NULL) {
+    this->eventHandler_->preRead(ctx, "ThriftHiveMetastore.get_num_partitions_by_filter");
+  }
+
+  ThriftHiveMetastore_get_num_partitions_by_filter_args args;
+  args.read(iprot);
+  iprot->readMessageEnd();
+  uint32_t bytes = iprot->getTransport()->readEnd();
+
+  if (this->eventHandler_.get() != NULL) {
+    this->eventHandler_->postRead(ctx, "ThriftHiveMetastore.get_num_partitions_by_filter", bytes);
+  }
+
+  ThriftHiveMetastore_get_num_partitions_by_filter_result result;
+  try {
+    result.success = iface_->get_num_partitions_by_filter(args.db_name, args.tbl_name, args.filter);
+    result.__isset.success = true;
+  } catch (MetaException &o1) {
+    result.o1 = o1;
+    result.__isset.o1 = true;
+  } catch (NoSuchObjectException &o2) {
+    result.o2 = o2;
+    result.__isset.o2 = true;
+  } catch (const std::exception& e) {
+    if (this->eventHandler_.get() != NULL) {
+      this->eventHandler_->handlerError(ctx, "ThriftHiveMetastore.get_num_partitions_by_filter");
+    }
+
+    ::apache::thrift::TApplicationException x(e.what());
+    oprot->writeMessageBegin("get_num_partitions_by_filter", ::apache::thrift::protocol::T_EXCEPTION, seqid);
+    x.write(oprot);
+    oprot->writeMessageEnd();
+    oprot->getTransport()->writeEnd();
+    oprot->getTransport()->flush();
+    return;
+  }
+
+  if (this->eventHandler_.get() != NULL) {
+    this->eventHandler_->preWrite(ctx, "ThriftHiveMetastore.get_num_partitions_by_filter");
+  }
+
+  oprot->writeMessageBegin("get_num_partitions_by_filter", ::apache::thrift::protocol::T_REPLY, seqid);
+  result.write(oprot);
+  oprot->writeMessageEnd();
+  bytes = oprot->getTransport()->writeEnd();
+  oprot->getTransport()->flush();
+
+  if (this->eventHandler_.get() != NULL) {
+    this->eventHandler_->postWrite(ctx, "ThriftHiveMetastore.get_num_partitions_by_filter", bytes);
+  }
+}
+
 void ThriftHiveMetastoreProcessor::process_get_part_specs_by_filter(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext)
 {
   void* ctx = NULL;
diff --git a/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.h b/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.h
index a245f8c..8f2ff5a 100644
--- a/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.h
+++ b/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore.h
@@ -72,6 +72,7 @@ class ThriftHiveMetastoreIf : virtual public  ::facebook::fb303::FacebookService
   virtual void get_partitions_ps_with_auth(std::vector<Partition> & _return, const std::string& db_name, const std::string& tbl_name, const std::vector<std::string> & part_vals, const int16_t max_parts, const std::string& user_name, const std::vector<std::string> & group_names) = 0;
   virtual void get_partition_names_ps(std::vector<std::string> & _return, const std::string& db_name, const std::string& tbl_name, const std::vector<std::string> & part_vals, const int16_t max_parts) = 0;
   virtual void get_partitions_by_filter(std::vector<Partition> & _return, const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int16_t max_parts) = 0;
+  virtual int32_t get_num_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter) = 0;
   virtual void get_part_specs_by_filter(std::vector<PartitionSpec> & _return, const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int32_t max_parts) = 0;
   virtual void get_partitions_by_expr(PartitionsByExprResult& _return, const PartitionsByExprRequest& req) = 0;
   virtual void get_partitions_by_names(std::vector<Partition> & _return, const std::string& db_name, const std::string& tbl_name, const std::vector<std::string> & names) = 0;
@@ -347,6 +348,10 @@ class ThriftHiveMetastoreNull : virtual public ThriftHiveMetastoreIf , virtual p
   void get_partitions_by_filter(std::vector<Partition> & /* _return */, const std::string& /* db_name */, const std::string& /* tbl_name */, const std::string& /* filter */, const int16_t /* max_parts */) {
     return;
   }
+  int32_t get_num_partitions_by_filter(const std::string& /* db_name */, const std::string& /* tbl_name */, const std::string& /* filter */) {
+    int32_t _return = 0;
+    return _return;
+  }
   void get_part_specs_by_filter(std::vector<PartitionSpec> & /* _return */, const std::string& /* db_name */, const std::string& /* tbl_name */, const std::string& /* filter */, const int32_t /* max_parts */) {
     return;
   }
@@ -8652,6 +8657,152 @@ class ThriftHiveMetastore_get_partitions_by_filter_presult {
 
 };
 
+typedef struct _ThriftHiveMetastore_get_num_partitions_by_filter_args__isset {
+  _ThriftHiveMetastore_get_num_partitions_by_filter_args__isset() : db_name(false), tbl_name(false), filter(false) {}
+  bool db_name;
+  bool tbl_name;
+  bool filter;
+} _ThriftHiveMetastore_get_num_partitions_by_filter_args__isset;
+
+class ThriftHiveMetastore_get_num_partitions_by_filter_args {
+ public:
+
+  ThriftHiveMetastore_get_num_partitions_by_filter_args() : db_name(), tbl_name(), filter() {
+  }
+
+  virtual ~ThriftHiveMetastore_get_num_partitions_by_filter_args() throw() {}
+
+  std::string db_name;
+  std::string tbl_name;
+  std::string filter;
+
+  _ThriftHiveMetastore_get_num_partitions_by_filter_args__isset __isset;
+
+  void __set_db_name(const std::string& val) {
+    db_name = val;
+  }
+
+  void __set_tbl_name(const std::string& val) {
+    tbl_name = val;
+  }
+
+  void __set_filter(const std::string& val) {
+    filter = val;
+  }
+
+  bool operator == (const ThriftHiveMetastore_get_num_partitions_by_filter_args & rhs) const
+  {
+    if (!(db_name == rhs.db_name))
+      return false;
+    if (!(tbl_name == rhs.tbl_name))
+      return false;
+    if (!(filter == rhs.filter))
+      return false;
+    return true;
+  }
+  bool operator != (const ThriftHiveMetastore_get_num_partitions_by_filter_args &rhs) const {
+    return !(*this == rhs);
+  }
+
+  bool operator < (const ThriftHiveMetastore_get_num_partitions_by_filter_args & ) const;
+
+  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
+  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
+
+};
+
+
+class ThriftHiveMetastore_get_num_partitions_by_filter_pargs {
+ public:
+
+
+  virtual ~ThriftHiveMetastore_get_num_partitions_by_filter_pargs() throw() {}
+
+  const std::string* db_name;
+  const std::string* tbl_name;
+  const std::string* filter;
+
+  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
+
+};
+
+typedef struct _ThriftHiveMetastore_get_num_partitions_by_filter_result__isset {
+  _ThriftHiveMetastore_get_num_partitions_by_filter_result__isset() : success(false), o1(false), o2(false) {}
+  bool success;
+  bool o1;
+  bool o2;
+} _ThriftHiveMetastore_get_num_partitions_by_filter_result__isset;
+
+class ThriftHiveMetastore_get_num_partitions_by_filter_result {
+ public:
+
+  ThriftHiveMetastore_get_num_partitions_by_filter_result() : success(0) {
+  }
+
+  virtual ~ThriftHiveMetastore_get_num_partitions_by_filter_result() throw() {}
+
+  int32_t success;
+  MetaException o1;
+  NoSuchObjectException o2;
+
+  _ThriftHiveMetastore_get_num_partitions_by_filter_result__isset __isset;
+
+  void __set_success(const int32_t val) {
+    success = val;
+  }
+
+  void __set_o1(const MetaException& val) {
+    o1 = val;
+  }
+
+  void __set_o2(const NoSuchObjectException& val) {
+    o2 = val;
+  }
+
+  bool operator == (const ThriftHiveMetastore_get_num_partitions_by_filter_result & rhs) const
+  {
+    if (!(success == rhs.success))
+      return false;
+    if (!(o1 == rhs.o1))
+      return false;
+    if (!(o2 == rhs.o2))
+      return false;
+    return true;
+  }
+  bool operator != (const ThriftHiveMetastore_get_num_partitions_by_filter_result &rhs) const {
+    return !(*this == rhs);
+  }
+
+  bool operator < (const ThriftHiveMetastore_get_num_partitions_by_filter_result & ) const;
+
+  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
+  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
+
+};
+
+typedef struct _ThriftHiveMetastore_get_num_partitions_by_filter_presult__isset {
+  _ThriftHiveMetastore_get_num_partitions_by_filter_presult__isset() : success(false), o1(false), o2(false) {}
+  bool success;
+  bool o1;
+  bool o2;
+} _ThriftHiveMetastore_get_num_partitions_by_filter_presult__isset;
+
+class ThriftHiveMetastore_get_num_partitions_by_filter_presult {
+ public:
+
+
+  virtual ~ThriftHiveMetastore_get_num_partitions_by_filter_presult() throw() {}
+
+  int32_t* success;
+  MetaException o1;
+  NoSuchObjectException o2;
+
+  _ThriftHiveMetastore_get_num_partitions_by_filter_presult__isset __isset;
+
+  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
+
+};
+
 typedef struct _ThriftHiveMetastore_get_part_specs_by_filter_args__isset {
   _ThriftHiveMetastore_get_part_specs_by_filter_args__isset() : db_name(false), tbl_name(false), filter(false), max_parts(true) {}
   bool db_name;
@@ -17933,6 +18084,9 @@ class ThriftHiveMetastoreClient : virtual public ThriftHiveMetastoreIf, public
   void get_partitions_by_filter(std::vector<Partition> & _return, const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int16_t max_parts);
   void send_get_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int16_t max_parts);
   void recv_get_partitions_by_filter(std::vector<Partition> & _return);
+  int32_t get_num_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter);
+  void send_get_num_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter);
+  int32_t recv_get_num_partitions_by_filter();
   void get_part_specs_by_filter(std::vector<PartitionSpec> & _return, const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int32_t max_parts);
   void send_get_part_specs_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int32_t max_parts);
   void recv_get_part_specs_by_filter(std::vector<PartitionSpec> & _return);
@@ -18209,6 +18363,7 @@ class ThriftHiveMetastoreProcessor : public  ::facebook::fb303::FacebookServiceP
   void process_get_partitions_ps_with_auth(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
   void process_get_partition_names_ps(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
   void process_get_partitions_by_filter(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
+  void process_get_num_partitions_by_filter(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
   void process_get_part_specs_by_filter(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
   void process_get_partitions_by_expr(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
   void process_get_partitions_by_names(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
@@ -18339,6 +18494,7 @@ class ThriftHiveMetastoreProcessor : public  ::facebook::fb303::FacebookServiceP
     processMap_["get_partitions_ps_with_auth"] = &ThriftHiveMetastoreProcessor::process_get_partitions_ps_with_auth;
     processMap_["get_partition_names_ps"] = &ThriftHiveMetastoreProcessor::process_get_partition_names_ps;
     processMap_["get_partitions_by_filter"] = &ThriftHiveMetastoreProcessor::process_get_partitions_by_filter;
+    processMap_["get_num_partitions_by_filter"] = &ThriftHiveMetastoreProcessor::process_get_num_partitions_by_filter;
     processMap_["get_part_specs_by_filter"] = &ThriftHiveMetastoreProcessor::process_get_part_specs_by_filter;
     processMap_["get_partitions_by_expr"] = &ThriftHiveMetastoreProcessor::process_get_partitions_by_expr;
     processMap_["get_partitions_by_names"] = &ThriftHiveMetastoreProcessor::process_get_partitions_by_names;
@@ -18983,6 +19139,15 @@ class ThriftHiveMetastoreMultiface : virtual public ThriftHiveMetastoreIf, publi
     return;
   }
 
+  int32_t get_num_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter) {
+    size_t sz = ifaces_.size();
+    size_t i = 0;
+    for (; i < (sz - 1); ++i) {
+      ifaces_[i]->get_num_partitions_by_filter(db_name, tbl_name, filter);
+    }
+    return ifaces_[i]->get_num_partitions_by_filter(db_name, tbl_name, filter);
+  }
+
   void get_part_specs_by_filter(std::vector<PartitionSpec> & _return, const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int32_t max_parts) {
     size_t sz = ifaces_.size();
     size_t i = 0;
diff --git a/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore_server.skeleton.cpp b/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore_server.skeleton.cpp
index eb7d7c6..31a0f8d 100644
--- a/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore_server.skeleton.cpp
+++ b/metastore/src/gen/thrift/gen-cpp/ThriftHiveMetastore_server.skeleton.cpp
@@ -302,6 +302,11 @@ class ThriftHiveMetastoreHandler : virtual public ThriftHiveMetastoreIf {
     printf("get_partitions_by_filter\n");
   }
 
+  int32_t get_num_partitions_by_filter(const std::string& db_name, const std::string& tbl_name, const std::string& filter) {
+    // Your implementation goes here
+    printf("get_num_partitions_by_filter\n");
+  }
+
   void get_part_specs_by_filter(std::vector<PartitionSpec> & _return, const std::string& db_name, const std::string& tbl_name, const std::string& filter, const int32_t max_parts) {
     // Your implementation goes here
     printf("get_part_specs_by_filter\n");
diff --git a/metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java b/metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java
index 1ec593b..e09a187 100644
--- a/metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java
+++ b/metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java
@@ -150,6 +150,8 @@
 
     public List<Partition> get_partitions_by_filter(String db_name, String tbl_name, String filter, short max_parts) throws MetaException, NoSuchObjectException, org.apache.thrift.TException;
 
+    public int get_num_partitions_by_filter(String db_name, String tbl_name, String filter) throws MetaException, NoSuchObjectException, org.apache.thrift.TException;
+
     public List<PartitionSpec> get_part_specs_by_filter(String db_name, String tbl_name, String filter, int max_parts) throws MetaException, NoSuchObjectException, org.apache.thrift.TException;
 
     public PartitionsByExprResult get_partitions_by_expr(PartitionsByExprRequest req) throws MetaException, NoSuchObjectException, org.apache.thrift.TException;
@@ -406,6 +408,8 @@
 
     public void get_partitions_by_filter(String db_name, String tbl_name, String filter, short max_parts, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.get_partitions_by_filter_call> resultHandler) throws org.apache.thrift.TException;
 
+    public void get_num_partitions_by_filter(String db_name, String tbl_name, String filter, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.get_num_partitions_by_filter_call> resultHandler) throws org.apache.thrift.TException;
+
     public void get_part_specs_by_filter(String db_name, String tbl_name, String filter, int max_parts, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.get_part_specs_by_filter_call> resultHandler) throws org.apache.thrift.TException;
 
     public void get_partitions_by_expr(PartitionsByExprRequest req, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.get_partitions_by_expr_call> resultHandler) throws org.apache.thrift.TException;
@@ -2305,6 +2309,37 @@ public void send_get_partitions_by_filter(String db_name, String tbl_name, Strin
       throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "get_partitions_by_filter failed: unknown result");
     }
 
+    public int get_num_partitions_by_filter(String db_name, String tbl_name, String filter) throws MetaException, NoSuchObjectException, org.apache.thrift.TException
+    {
+      send_get_num_partitions_by_filter(db_name, tbl_name, filter);
+      return recv_get_num_partitions_by_filter();
+    }
+
+    public void send_get_num_partitions_by_filter(String db_name, String tbl_name, String filter) throws org.apache.thrift.TException
+    {
+      get_num_partitions_by_filter_args args = new get_num_partitions_by_filter_args();
+      args.setDb_name(db_name);
+      args.setTbl_name(tbl_name);
+      args.setFilter(filter);
+      sendBase("get_num_partitions_by_filter", args);
+    }
+
+    public int recv_get_num_partitions_by_filter() throws MetaException, NoSuchObjectException, org.apache.thrift.TException
+    {
+      get_num_partitions_by_filter_result result = new get_num_partitions_by_filter_result();
+      receiveBase(result, "get_num_partitions_by_filter");
+      if (result.isSetSuccess()) {
+        return result.success;
+      }
+      if (result.o1 != null) {
+        throw result.o1;
+      }
+      if (result.o2 != null) {
+        throw result.o2;
+      }
+      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "get_num_partitions_by_filter failed: unknown result");
+    }
+
     public List<PartitionSpec> get_part_specs_by_filter(String db_name, String tbl_name, String filter, int max_parts) throws MetaException, NoSuchObjectException, org.apache.thrift.TException
     {
       send_get_part_specs_by_filter(db_name, tbl_name, filter, max_parts);
@@ -6384,6 +6419,44 @@ public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apa
       }
     }
 
+    public void get_num_partitions_by_filter(String db_name, String tbl_name, String filter, org.apache.thrift.async.AsyncMethodCallback<get_num_partitions_by_filter_call> resultHandler) throws org.apache.thrift.TException {
+      checkReady();
+      get_num_partitions_by_filter_call method_call = new get_num_partitions_by_filter_call(db_name, tbl_name, filter, resultHandler, this, ___protocolFactory, ___transport);
+      this.___currentMethod = method_call;
+      ___manager.call(method_call);
+    }
+
+    public static class get_num_partitions_by_filter_call extends org.apache.thrift.async.TAsyncMethodCall {
+      private String db_name;
+      private String tbl_name;
+      private String filter;
+      public get_num_partitions_by_filter_call(String db_name, String tbl_name, String filter, org.apache.thrift.async.AsyncMethodCallback<get_num_partitions_by_filter_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
+        super(client, protocolFactory, transport, resultHandler, false);
+        this.db_name = db_name;
+        this.tbl_name = tbl_name;
+        this.filter = filter;
+      }
+
+      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
+        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("get_num_partitions_by_filter", org.apache.thrift.protocol.TMessageType.CALL, 0));
+        get_num_partitions_by_filter_args args = new get_num_partitions_by_filter_args();
+        args.setDb_name(db_name);
+        args.setTbl_name(tbl_name);
+        args.setFilter(filter);
+        args.write(prot);
+        prot.writeMessageEnd();
+      }
+
+      public int getResult() throws MetaException, NoSuchObjectException, org.apache.thrift.TException {
+        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
+          throw new IllegalStateException("Method call not finished!");
+        }
+        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
+        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
+        return (new Client(prot)).recv_get_num_partitions_by_filter();
+      }
+    }
+
     public void get_part_specs_by_filter(String db_name, String tbl_name, String filter, int max_parts, org.apache.thrift.async.AsyncMethodCallback<get_part_specs_by_filter_call> resultHandler) throws org.apache.thrift.TException {
       checkReady();
       get_part_specs_by_filter_call method_call = new get_part_specs_by_filter_call(db_name, tbl_name, filter, max_parts, resultHandler, this, ___protocolFactory, ___transport);
@@ -8870,6 +8943,7 @@ protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ?
       processMap.put("get_partitions_ps_with_auth", new get_partitions_ps_with_auth());
       processMap.put("get_partition_names_ps", new get_partition_names_ps());
       processMap.put("get_partitions_by_filter", new get_partitions_by_filter());
+      processMap.put("get_num_partitions_by_filter", new get_num_partitions_by_filter());
       processMap.put("get_part_specs_by_filter", new get_part_specs_by_filter());
       processMap.put("get_partitions_by_expr", new get_partitions_by_expr());
       processMap.put("get_partitions_by_names", new get_partitions_by_names());
@@ -10441,6 +10515,33 @@ public get_partitions_by_filter_result getResult(I iface, get_partitions_by_filt
       }
     }
 
+    public static class get_num_partitions_by_filter<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_num_partitions_by_filter_args> {
+      public get_num_partitions_by_filter() {
+        super("get_num_partitions_by_filter");
+      }
+
+      public get_num_partitions_by_filter_args getEmptyArgsInstance() {
+        return new get_num_partitions_by_filter_args();
+      }
+
+      protected boolean isOneway() {
+        return false;
+      }
+
+      public get_num_partitions_by_filter_result getResult(I iface, get_num_partitions_by_filter_args args) throws org.apache.thrift.TException {
+        get_num_partitions_by_filter_result result = new get_num_partitions_by_filter_result();
+        try {
+          result.success = iface.get_num_partitions_by_filter(args.db_name, args.tbl_name, args.filter);
+          result.setSuccessIsSet(true);
+        } catch (MetaException o1) {
+          result.o1 = o1;
+        } catch (NoSuchObjectException o2) {
+          result.o2 = o2;
+        }
+        return result;
+      }
+    }
+
     public static class get_part_specs_by_filter<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_part_specs_by_filter_args> {
       public get_part_specs_by_filter() {
         super("get_part_specs_by_filter");
@@ -64548,46 +64649,1261 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_with_
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 3: // PART_VALS
-              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
-                {
-                  org.apache.thrift.protocol.TList _list722 = iprot.readListBegin();
-                  struct.part_vals = new ArrayList<String>(_list722.size);
-                  for (int _i723 = 0; _i723 < _list722.size; ++_i723)
-                  {
-                    String _elem724; // required
-                    _elem724 = iprot.readString();
-                    struct.part_vals.add(_elem724);
-                  }
-                  iprot.readListEnd();
-                }
-                struct.setPart_valsIsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
-            case 4: // USER_NAME
+            case 3: // PART_VALS
+              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
+                {
+                  org.apache.thrift.protocol.TList _list722 = iprot.readListBegin();
+                  struct.part_vals = new ArrayList<String>(_list722.size);
+                  for (int _i723 = 0; _i723 < _list722.size; ++_i723)
+                  {
+                    String _elem724; // required
+                    _elem724 = iprot.readString();
+                    struct.part_vals.add(_elem724);
+                  }
+                  iprot.readListEnd();
+                }
+                struct.setPart_valsIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 4: // USER_NAME
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
+                struct.user_name = iprot.readString();
+                struct.setUser_nameIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 5: // GROUP_NAMES
+              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
+                {
+                  org.apache.thrift.protocol.TList _list725 = iprot.readListBegin();
+                  struct.group_names = new ArrayList<String>(_list725.size);
+                  for (int _i726 = 0; _i726 < _list725.size; ++_i726)
+                  {
+                    String _elem727; // required
+                    _elem727 = iprot.readString();
+                    struct.group_names.add(_elem727);
+                  }
+                  iprot.readListEnd();
+                }
+                struct.setGroup_namesIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            default:
+              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+          }
+          iprot.readFieldEnd();
+        }
+        iprot.readStructEnd();
+        struct.validate();
+      }
+
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_with_auth_args struct) throws org.apache.thrift.TException {
+        struct.validate();
+
+        oprot.writeStructBegin(STRUCT_DESC);
+        if (struct.db_name != null) {
+          oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
+          oprot.writeString(struct.db_name);
+          oprot.writeFieldEnd();
+        }
+        if (struct.tbl_name != null) {
+          oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
+          oprot.writeString(struct.tbl_name);
+          oprot.writeFieldEnd();
+        }
+        if (struct.part_vals != null) {
+          oprot.writeFieldBegin(PART_VALS_FIELD_DESC);
+          {
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.part_vals.size()));
+            for (String _iter728 : struct.part_vals)
+            {
+              oprot.writeString(_iter728);
+            }
+            oprot.writeListEnd();
+          }
+          oprot.writeFieldEnd();
+        }
+        if (struct.user_name != null) {
+          oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
+          oprot.writeString(struct.user_name);
+          oprot.writeFieldEnd();
+        }
+        if (struct.group_names != null) {
+          oprot.writeFieldBegin(GROUP_NAMES_FIELD_DESC);
+          {
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.group_names.size()));
+            for (String _iter729 : struct.group_names)
+            {
+              oprot.writeString(_iter729);
+            }
+            oprot.writeListEnd();
+          }
+          oprot.writeFieldEnd();
+        }
+        oprot.writeFieldStop();
+        oprot.writeStructEnd();
+      }
+
+    }
+
+    private static class get_partition_with_auth_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partition_with_auth_argsTupleScheme getScheme() {
+        return new get_partition_with_auth_argsTupleScheme();
+      }
+    }
+
+    private static class get_partition_with_auth_argsTupleScheme extends TupleScheme<get_partition_with_auth_args> {
+
+      @Override
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_args struct) throws org.apache.thrift.TException {
+        TTupleProtocol oprot = (TTupleProtocol) prot;
+        BitSet optionals = new BitSet();
+        if (struct.isSetDb_name()) {
+          optionals.set(0);
+        }
+        if (struct.isSetTbl_name()) {
+          optionals.set(1);
+        }
+        if (struct.isSetPart_vals()) {
+          optionals.set(2);
+        }
+        if (struct.isSetUser_name()) {
+          optionals.set(3);
+        }
+        if (struct.isSetGroup_names()) {
+          optionals.set(4);
+        }
+        oprot.writeBitSet(optionals, 5);
+        if (struct.isSetDb_name()) {
+          oprot.writeString(struct.db_name);
+        }
+        if (struct.isSetTbl_name()) {
+          oprot.writeString(struct.tbl_name);
+        }
+        if (struct.isSetPart_vals()) {
+          {
+            oprot.writeI32(struct.part_vals.size());
+            for (String _iter730 : struct.part_vals)
+            {
+              oprot.writeString(_iter730);
+            }
+          }
+        }
+        if (struct.isSetUser_name()) {
+          oprot.writeString(struct.user_name);
+        }
+        if (struct.isSetGroup_names()) {
+          {
+            oprot.writeI32(struct.group_names.size());
+            for (String _iter731 : struct.group_names)
+            {
+              oprot.writeString(_iter731);
+            }
+          }
+        }
+      }
+
+      @Override
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_args struct) throws org.apache.thrift.TException {
+        TTupleProtocol iprot = (TTupleProtocol) prot;
+        BitSet incoming = iprot.readBitSet(5);
+        if (incoming.get(0)) {
+          struct.db_name = iprot.readString();
+          struct.setDb_nameIsSet(true);
+        }
+        if (incoming.get(1)) {
+          struct.tbl_name = iprot.readString();
+          struct.setTbl_nameIsSet(true);
+        }
+        if (incoming.get(2)) {
+          {
+            org.apache.thrift.protocol.TList _list732 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.part_vals = new ArrayList<String>(_list732.size);
+            for (int _i733 = 0; _i733 < _list732.size; ++_i733)
+            {
+              String _elem734; // required
+              _elem734 = iprot.readString();
+              struct.part_vals.add(_elem734);
+            }
+          }
+          struct.setPart_valsIsSet(true);
+        }
+        if (incoming.get(3)) {
+          struct.user_name = iprot.readString();
+          struct.setUser_nameIsSet(true);
+        }
+        if (incoming.get(4)) {
+          {
+            org.apache.thrift.protocol.TList _list735 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.group_names = new ArrayList<String>(_list735.size);
+            for (int _i736 = 0; _i736 < _list735.size; ++_i736)
+            {
+              String _elem737; // required
+              _elem737 = iprot.readString();
+              struct.group_names.add(_elem737);
+            }
+          }
+          struct.setGroup_namesIsSet(true);
+        }
+      }
+    }
+
+  }
+
+  public static class get_partition_with_auth_result implements org.apache.thrift.TBase<get_partition_with_auth_result, get_partition_with_auth_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_with_auth_result");
+
+    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
+    private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
+    private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField("o2", org.apache.thrift.protocol.TType.STRUCT, (short)2);
+
+    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
+    static {
+      schemes.put(StandardScheme.class, new get_partition_with_auth_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partition_with_auth_resultTupleSchemeFactory());
+    }
+
+    private Partition success; // required
+    private MetaException o1; // required
+    private NoSuchObjectException o2; // required
+
+    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
+    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
+      SUCCESS((short)0, "success"),
+      O1((short)1, "o1"),
+      O2((short)2, "o2");
+
+      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
+
+      static {
+        for (_Fields field : EnumSet.allOf(_Fields.class)) {
+          byName.put(field.getFieldName(), field);
+        }
+      }
+
+      /**
+       * Find the _Fields constant that matches fieldId, or null if its not found.
+       */
+      public static _Fields findByThriftId(int fieldId) {
+        switch(fieldId) {
+          case 0: // SUCCESS
+            return SUCCESS;
+          case 1: // O1
+            return O1;
+          case 2: // O2
+            return O2;
+          default:
+            return null;
+        }
+      }
+
+      /**
+       * Find the _Fields constant that matches fieldId, throwing an exception
+       * if it is not found.
+       */
+      public static _Fields findByThriftIdOrThrow(int fieldId) {
+        _Fields fields = findByThriftId(fieldId);
+        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
+        return fields;
+      }
+
+      /**
+       * Find the _Fields constant that matches name, or null if its not found.
+       */
+      public static _Fields findByName(String name) {
+        return byName.get(name);
+      }
+
+      private final short _thriftId;
+      private final String _fieldName;
+
+      _Fields(short thriftId, String fieldName) {
+        _thriftId = thriftId;
+        _fieldName = fieldName;
+      }
+
+      public short getThriftFieldId() {
+        return _thriftId;
+      }
+
+      public String getFieldName() {
+        return _fieldName;
+      }
+    }
+
+    // isset id assignments
+    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
+    static {
+      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
+      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class)));
+      tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
+      tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
+      metaDataMap = Collections.unmodifiableMap(tmpMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_with_auth_result.class, metaDataMap);
+    }
+
+    public get_partition_with_auth_result() {
+    }
+
+    public get_partition_with_auth_result(
+      Partition success,
+      MetaException o1,
+      NoSuchObjectException o2)
+    {
+      this();
+      this.success = success;
+      this.o1 = o1;
+      this.o2 = o2;
+    }
+
+    /**
+     * Performs a deep copy on <i>other</i>.
+     */
+    public get_partition_with_auth_result(get_partition_with_auth_result other) {
+      if (other.isSetSuccess()) {
+        this.success = new Partition(other.success);
+      }
+      if (other.isSetO1()) {
+        this.o1 = new MetaException(other.o1);
+      }
+      if (other.isSetO2()) {
+        this.o2 = new NoSuchObjectException(other.o2);
+      }
+    }
+
+    public get_partition_with_auth_result deepCopy() {
+      return new get_partition_with_auth_result(this);
+    }
+
+    @Override
+    public void clear() {
+      this.success = null;
+      this.o1 = null;
+      this.o2 = null;
+    }
+
+    public Partition getSuccess() {
+      return this.success;
+    }
+
+    public void setSuccess(Partition success) {
+      this.success = success;
+    }
+
+    public void unsetSuccess() {
+      this.success = null;
+    }
+
+    /** Returns true if field success is set (has been assigned a value) and false otherwise */
+    public boolean isSetSuccess() {
+      return this.success != null;
+    }
+
+    public void setSuccessIsSet(boolean value) {
+      if (!value) {
+        this.success = null;
+      }
+    }
+
+    public MetaException getO1() {
+      return this.o1;
+    }
+
+    public void setO1(MetaException o1) {
+      this.o1 = o1;
+    }
+
+    public void unsetO1() {
+      this.o1 = null;
+    }
+
+    /** Returns true if field o1 is set (has been assigned a value) and false otherwise */
+    public boolean isSetO1() {
+      return this.o1 != null;
+    }
+
+    public void setO1IsSet(boolean value) {
+      if (!value) {
+        this.o1 = null;
+      }
+    }
+
+    public NoSuchObjectException getO2() {
+      return this.o2;
+    }
+
+    public void setO2(NoSuchObjectException o2) {
+      this.o2 = o2;
+    }
+
+    public void unsetO2() {
+      this.o2 = null;
+    }
+
+    /** Returns true if field o2 is set (has been assigned a value) and false otherwise */
+    public boolean isSetO2() {
+      return this.o2 != null;
+    }
+
+    public void setO2IsSet(boolean value) {
+      if (!value) {
+        this.o2 = null;
+      }
+    }
+
+    public void setFieldValue(_Fields field, Object value) {
+      switch (field) {
+      case SUCCESS:
+        if (value == null) {
+          unsetSuccess();
+        } else {
+          setSuccess((Partition)value);
+        }
+        break;
+
+      case O1:
+        if (value == null) {
+          unsetO1();
+        } else {
+          setO1((MetaException)value);
+        }
+        break;
+
+      case O2:
+        if (value == null) {
+          unsetO2();
+        } else {
+          setO2((NoSuchObjectException)value);
+        }
+        break;
+
+      }
+    }
+
+    public Object getFieldValue(_Fields field) {
+      switch (field) {
+      case SUCCESS:
+        return getSuccess();
+
+      case O1:
+        return getO1();
+
+      case O2:
+        return getO2();
+
+      }
+      throw new IllegalStateException();
+    }
+
+    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
+    public boolean isSet(_Fields field) {
+      if (field == null) {
+        throw new IllegalArgumentException();
+      }
+
+      switch (field) {
+      case SUCCESS:
+        return isSetSuccess();
+      case O1:
+        return isSetO1();
+      case O2:
+        return isSetO2();
+      }
+      throw new IllegalStateException();
+    }
+
+    @Override
+    public boolean equals(Object that) {
+      if (that == null)
+        return false;
+      if (that instanceof get_partition_with_auth_result)
+        return this.equals((get_partition_with_auth_result)that);
+      return false;
+    }
+
+    public boolean equals(get_partition_with_auth_result that) {
+      if (that == null)
+        return false;
+
+      boolean this_present_success = true && this.isSetSuccess();
+      boolean that_present_success = true && that.isSetSuccess();
+      if (this_present_success || that_present_success) {
+        if (!(this_present_success && that_present_success))
+          return false;
+        if (!this.success.equals(that.success))
+          return false;
+      }
+
+      boolean this_present_o1 = true && this.isSetO1();
+      boolean that_present_o1 = true && that.isSetO1();
+      if (this_present_o1 || that_present_o1) {
+        if (!(this_present_o1 && that_present_o1))
+          return false;
+        if (!this.o1.equals(that.o1))
+          return false;
+      }
+
+      boolean this_present_o2 = true && this.isSetO2();
+      boolean that_present_o2 = true && that.isSetO2();
+      if (this_present_o2 || that_present_o2) {
+        if (!(this_present_o2 && that_present_o2))
+          return false;
+        if (!this.o2.equals(that.o2))
+          return false;
+      }
+
+      return true;
+    }
+
+    @Override
+    public int hashCode() {
+      HashCodeBuilder builder = new HashCodeBuilder();
+
+      boolean present_success = true && (isSetSuccess());
+      builder.append(present_success);
+      if (present_success)
+        builder.append(success);
+
+      boolean present_o1 = true && (isSetO1());
+      builder.append(present_o1);
+      if (present_o1)
+        builder.append(o1);
+
+      boolean present_o2 = true && (isSetO2());
+      builder.append(present_o2);
+      if (present_o2)
+        builder.append(o2);
+
+      return builder.toHashCode();
+    }
+
+    public int compareTo(get_partition_with_auth_result other) {
+      if (!getClass().equals(other.getClass())) {
+        return getClass().getName().compareTo(other.getClass().getName());
+      }
+
+      int lastComparison = 0;
+      get_partition_with_auth_result typedOther = (get_partition_with_auth_result)other;
+
+      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetSuccess()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      lastComparison = Boolean.valueOf(isSetO1()).compareTo(typedOther.isSetO1());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetO1()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.o1, typedOther.o1);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      lastComparison = Boolean.valueOf(isSetO2()).compareTo(typedOther.isSetO2());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetO2()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.o2, typedOther.o2);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      return 0;
+    }
+
+    public _Fields fieldForId(int fieldId) {
+      return _Fields.findByThriftId(fieldId);
+    }
+
+    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
+      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
+    }
+
+    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
+      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
+      }
+
+    @Override
+    public String toString() {
+      StringBuilder sb = new StringBuilder("get_partition_with_auth_result(");
+      boolean first = true;
+
+      sb.append("success:");
+      if (this.success == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.success);
+      }
+      first = false;
+      if (!first) sb.append(", ");
+      sb.append("o1:");
+      if (this.o1 == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.o1);
+      }
+      first = false;
+      if (!first) sb.append(", ");
+      sb.append("o2:");
+      if (this.o2 == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.o2);
+      }
+      first = false;
+      sb.append(")");
+      return sb.toString();
+    }
+
+    public void validate() throws org.apache.thrift.TException {
+      // check for required fields
+      // check for sub-struct validity
+      if (success != null) {
+        success.validate();
+      }
+    }
+
+    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
+      try {
+        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
+      } catch (org.apache.thrift.TException te) {
+        throw new java.io.IOException(te);
+      }
+    }
+
+    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
+      try {
+        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
+      } catch (org.apache.thrift.TException te) {
+        throw new java.io.IOException(te);
+      }
+    }
+
+    private static class get_partition_with_auth_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partition_with_auth_resultStandardScheme getScheme() {
+        return new get_partition_with_auth_resultStandardScheme();
+      }
+    }
+
+    private static class get_partition_with_auth_resultStandardScheme extends StandardScheme<get_partition_with_auth_result> {
+
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+        org.apache.thrift.protocol.TField schemeField;
+        iprot.readStructBegin();
+        while (true)
+        {
+          schemeField = iprot.readFieldBegin();
+          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
+            break;
+          }
+          switch (schemeField.id) {
+            case 0: // SUCCESS
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
+                struct.success = new Partition();
+                struct.success.read(iprot);
+                struct.setSuccessIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 1: // O1
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
+                struct.o1 = new MetaException();
+                struct.o1.read(iprot);
+                struct.setO1IsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 2: // O2
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
+                struct.o2 = new NoSuchObjectException();
+                struct.o2.read(iprot);
+                struct.setO2IsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            default:
+              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+          }
+          iprot.readFieldEnd();
+        }
+        iprot.readStructEnd();
+        struct.validate();
+      }
+
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+        struct.validate();
+
+        oprot.writeStructBegin(STRUCT_DESC);
+        if (struct.success != null) {
+          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
+          struct.success.write(oprot);
+          oprot.writeFieldEnd();
+        }
+        if (struct.o1 != null) {
+          oprot.writeFieldBegin(O1_FIELD_DESC);
+          struct.o1.write(oprot);
+          oprot.writeFieldEnd();
+        }
+        if (struct.o2 != null) {
+          oprot.writeFieldBegin(O2_FIELD_DESC);
+          struct.o2.write(oprot);
+          oprot.writeFieldEnd();
+        }
+        oprot.writeFieldStop();
+        oprot.writeStructEnd();
+      }
+
+    }
+
+    private static class get_partition_with_auth_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partition_with_auth_resultTupleScheme getScheme() {
+        return new get_partition_with_auth_resultTupleScheme();
+      }
+    }
+
+    private static class get_partition_with_auth_resultTupleScheme extends TupleScheme<get_partition_with_auth_result> {
+
+      @Override
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+        TTupleProtocol oprot = (TTupleProtocol) prot;
+        BitSet optionals = new BitSet();
+        if (struct.isSetSuccess()) {
+          optionals.set(0);
+        }
+        if (struct.isSetO1()) {
+          optionals.set(1);
+        }
+        if (struct.isSetO2()) {
+          optionals.set(2);
+        }
+        oprot.writeBitSet(optionals, 3);
+        if (struct.isSetSuccess()) {
+          struct.success.write(oprot);
+        }
+        if (struct.isSetO1()) {
+          struct.o1.write(oprot);
+        }
+        if (struct.isSetO2()) {
+          struct.o2.write(oprot);
+        }
+      }
+
+      @Override
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+        TTupleProtocol iprot = (TTupleProtocol) prot;
+        BitSet incoming = iprot.readBitSet(3);
+        if (incoming.get(0)) {
+          struct.success = new Partition();
+          struct.success.read(iprot);
+          struct.setSuccessIsSet(true);
+        }
+        if (incoming.get(1)) {
+          struct.o1 = new MetaException();
+          struct.o1.read(iprot);
+          struct.setO1IsSet(true);
+        }
+        if (incoming.get(2)) {
+          struct.o2 = new NoSuchObjectException();
+          struct.o2.read(iprot);
+          struct.setO2IsSet(true);
+        }
+      }
+    }
+
+  }
+
+  public static class get_partition_by_name_args implements org.apache.thrift.TBase<get_partition_by_name_args, get_partition_by_name_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_by_name_args");
+
+    private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
+    private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
+    private static final org.apache.thrift.protocol.TField PART_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("part_name", org.apache.thrift.protocol.TType.STRING, (short)3);
+
+    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
+    static {
+      schemes.put(StandardScheme.class, new get_partition_by_name_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partition_by_name_argsTupleSchemeFactory());
+    }
+
+    private String db_name; // required
+    private String tbl_name; // required
+    private String part_name; // required
+
+    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
+    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
+      DB_NAME((short)1, "db_name"),
+      TBL_NAME((short)2, "tbl_name"),
+      PART_NAME((short)3, "part_name");
+
+      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
+
+      static {
+        for (_Fields field : EnumSet.allOf(_Fields.class)) {
+          byName.put(field.getFieldName(), field);
+        }
+      }
+
+      /**
+       * Find the _Fields constant that matches fieldId, or null if its not found.
+       */
+      public static _Fields findByThriftId(int fieldId) {
+        switch(fieldId) {
+          case 1: // DB_NAME
+            return DB_NAME;
+          case 2: // TBL_NAME
+            return TBL_NAME;
+          case 3: // PART_NAME
+            return PART_NAME;
+          default:
+            return null;
+        }
+      }
+
+      /**
+       * Find the _Fields constant that matches fieldId, throwing an exception
+       * if it is not found.
+       */
+      public static _Fields findByThriftIdOrThrow(int fieldId) {
+        _Fields fields = findByThriftId(fieldId);
+        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
+        return fields;
+      }
+
+      /**
+       * Find the _Fields constant that matches name, or null if its not found.
+       */
+      public static _Fields findByName(String name) {
+        return byName.get(name);
+      }
+
+      private final short _thriftId;
+      private final String _fieldName;
+
+      _Fields(short thriftId, String fieldName) {
+        _thriftId = thriftId;
+        _fieldName = fieldName;
+      }
+
+      public short getThriftFieldId() {
+        return _thriftId;
+      }
+
+      public String getFieldName() {
+        return _fieldName;
+      }
+    }
+
+    // isset id assignments
+    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
+    static {
+      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
+      tmpMap.put(_Fields.DB_NAME, new org.apache.thrift.meta_data.FieldMetaData("db_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
+      tmpMap.put(_Fields.TBL_NAME, new org.apache.thrift.meta_data.FieldMetaData("tbl_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
+      tmpMap.put(_Fields.PART_NAME, new org.apache.thrift.meta_data.FieldMetaData("part_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
+      metaDataMap = Collections.unmodifiableMap(tmpMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_by_name_args.class, metaDataMap);
+    }
+
+    public get_partition_by_name_args() {
+    }
+
+    public get_partition_by_name_args(
+      String db_name,
+      String tbl_name,
+      String part_name)
+    {
+      this();
+      this.db_name = db_name;
+      this.tbl_name = tbl_name;
+      this.part_name = part_name;
+    }
+
+    /**
+     * Performs a deep copy on <i>other</i>.
+     */
+    public get_partition_by_name_args(get_partition_by_name_args other) {
+      if (other.isSetDb_name()) {
+        this.db_name = other.db_name;
+      }
+      if (other.isSetTbl_name()) {
+        this.tbl_name = other.tbl_name;
+      }
+      if (other.isSetPart_name()) {
+        this.part_name = other.part_name;
+      }
+    }
+
+    public get_partition_by_name_args deepCopy() {
+      return new get_partition_by_name_args(this);
+    }
+
+    @Override
+    public void clear() {
+      this.db_name = null;
+      this.tbl_name = null;
+      this.part_name = null;
+    }
+
+    public String getDb_name() {
+      return this.db_name;
+    }
+
+    public void setDb_name(String db_name) {
+      this.db_name = db_name;
+    }
+
+    public void unsetDb_name() {
+      this.db_name = null;
+    }
+
+    /** Returns true if field db_name is set (has been assigned a value) and false otherwise */
+    public boolean isSetDb_name() {
+      return this.db_name != null;
+    }
+
+    public void setDb_nameIsSet(boolean value) {
+      if (!value) {
+        this.db_name = null;
+      }
+    }
+
+    public String getTbl_name() {
+      return this.tbl_name;
+    }
+
+    public void setTbl_name(String tbl_name) {
+      this.tbl_name = tbl_name;
+    }
+
+    public void unsetTbl_name() {
+      this.tbl_name = null;
+    }
+
+    /** Returns true if field tbl_name is set (has been assigned a value) and false otherwise */
+    public boolean isSetTbl_name() {
+      return this.tbl_name != null;
+    }
+
+    public void setTbl_nameIsSet(boolean value) {
+      if (!value) {
+        this.tbl_name = null;
+      }
+    }
+
+    public String getPart_name() {
+      return this.part_name;
+    }
+
+    public void setPart_name(String part_name) {
+      this.part_name = part_name;
+    }
+
+    public void unsetPart_name() {
+      this.part_name = null;
+    }
+
+    /** Returns true if field part_name is set (has been assigned a value) and false otherwise */
+    public boolean isSetPart_name() {
+      return this.part_name != null;
+    }
+
+    public void setPart_nameIsSet(boolean value) {
+      if (!value) {
+        this.part_name = null;
+      }
+    }
+
+    public void setFieldValue(_Fields field, Object value) {
+      switch (field) {
+      case DB_NAME:
+        if (value == null) {
+          unsetDb_name();
+        } else {
+          setDb_name((String)value);
+        }
+        break;
+
+      case TBL_NAME:
+        if (value == null) {
+          unsetTbl_name();
+        } else {
+          setTbl_name((String)value);
+        }
+        break;
+
+      case PART_NAME:
+        if (value == null) {
+          unsetPart_name();
+        } else {
+          setPart_name((String)value);
+        }
+        break;
+
+      }
+    }
+
+    public Object getFieldValue(_Fields field) {
+      switch (field) {
+      case DB_NAME:
+        return getDb_name();
+
+      case TBL_NAME:
+        return getTbl_name();
+
+      case PART_NAME:
+        return getPart_name();
+
+      }
+      throw new IllegalStateException();
+    }
+
+    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
+    public boolean isSet(_Fields field) {
+      if (field == null) {
+        throw new IllegalArgumentException();
+      }
+
+      switch (field) {
+      case DB_NAME:
+        return isSetDb_name();
+      case TBL_NAME:
+        return isSetTbl_name();
+      case PART_NAME:
+        return isSetPart_name();
+      }
+      throw new IllegalStateException();
+    }
+
+    @Override
+    public boolean equals(Object that) {
+      if (that == null)
+        return false;
+      if (that instanceof get_partition_by_name_args)
+        return this.equals((get_partition_by_name_args)that);
+      return false;
+    }
+
+    public boolean equals(get_partition_by_name_args that) {
+      if (that == null)
+        return false;
+
+      boolean this_present_db_name = true && this.isSetDb_name();
+      boolean that_present_db_name = true && that.isSetDb_name();
+      if (this_present_db_name || that_present_db_name) {
+        if (!(this_present_db_name && that_present_db_name))
+          return false;
+        if (!this.db_name.equals(that.db_name))
+          return false;
+      }
+
+      boolean this_present_tbl_name = true && this.isSetTbl_name();
+      boolean that_present_tbl_name = true && that.isSetTbl_name();
+      if (this_present_tbl_name || that_present_tbl_name) {
+        if (!(this_present_tbl_name && that_present_tbl_name))
+          return false;
+        if (!this.tbl_name.equals(that.tbl_name))
+          return false;
+      }
+
+      boolean this_present_part_name = true && this.isSetPart_name();
+      boolean that_present_part_name = true && that.isSetPart_name();
+      if (this_present_part_name || that_present_part_name) {
+        if (!(this_present_part_name && that_present_part_name))
+          return false;
+        if (!this.part_name.equals(that.part_name))
+          return false;
+      }
+
+      return true;
+    }
+
+    @Override
+    public int hashCode() {
+      HashCodeBuilder builder = new HashCodeBuilder();
+
+      boolean present_db_name = true && (isSetDb_name());
+      builder.append(present_db_name);
+      if (present_db_name)
+        builder.append(db_name);
+
+      boolean present_tbl_name = true && (isSetTbl_name());
+      builder.append(present_tbl_name);
+      if (present_tbl_name)
+        builder.append(tbl_name);
+
+      boolean present_part_name = true && (isSetPart_name());
+      builder.append(present_part_name);
+      if (present_part_name)
+        builder.append(part_name);
+
+      return builder.toHashCode();
+    }
+
+    public int compareTo(get_partition_by_name_args other) {
+      if (!getClass().equals(other.getClass())) {
+        return getClass().getName().compareTo(other.getClass().getName());
+      }
+
+      int lastComparison = 0;
+      get_partition_by_name_args typedOther = (get_partition_by_name_args)other;
+
+      lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetDb_name()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.db_name, typedOther.db_name);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      lastComparison = Boolean.valueOf(isSetTbl_name()).compareTo(typedOther.isSetTbl_name());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetTbl_name()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tbl_name, typedOther.tbl_name);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      lastComparison = Boolean.valueOf(isSetPart_name()).compareTo(typedOther.isSetPart_name());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetPart_name()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.part_name, typedOther.part_name);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      return 0;
+    }
+
+    public _Fields fieldForId(int fieldId) {
+      return _Fields.findByThriftId(fieldId);
+    }
+
+    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
+      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
+    }
+
+    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
+      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
+    }
+
+    @Override
+    public String toString() {
+      StringBuilder sb = new StringBuilder("get_partition_by_name_args(");
+      boolean first = true;
+
+      sb.append("db_name:");
+      if (this.db_name == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.db_name);
+      }
+      first = false;
+      if (!first) sb.append(", ");
+      sb.append("tbl_name:");
+      if (this.tbl_name == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.tbl_name);
+      }
+      first = false;
+      if (!first) sb.append(", ");
+      sb.append("part_name:");
+      if (this.part_name == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.part_name);
+      }
+      first = false;
+      sb.append(")");
+      return sb.toString();
+    }
+
+    public void validate() throws org.apache.thrift.TException {
+      // check for required fields
+      // check for sub-struct validity
+    }
+
+    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
+      try {
+        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
+      } catch (org.apache.thrift.TException te) {
+        throw new java.io.IOException(te);
+      }
+    }
+
+    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
+      try {
+        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
+      } catch (org.apache.thrift.TException te) {
+        throw new java.io.IOException(te);
+      }
+    }
+
+    private static class get_partition_by_name_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partition_by_name_argsStandardScheme getScheme() {
+        return new get_partition_by_name_argsStandardScheme();
+      }
+    }
+
+    private static class get_partition_by_name_argsStandardScheme extends StandardScheme<get_partition_by_name_args> {
+
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
+        org.apache.thrift.protocol.TField schemeField;
+        iprot.readStructBegin();
+        while (true)
+        {
+          schemeField = iprot.readFieldBegin();
+          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
+            break;
+          }
+          switch (schemeField.id) {
+            case 1: // DB_NAME
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
+                struct.db_name = iprot.readString();
+                struct.setDb_nameIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 2: // TBL_NAME
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
+                struct.tbl_name = iprot.readString();
+                struct.setTbl_nameIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 3: // PART_NAME
               if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
-                struct.user_name = iprot.readString();
-                struct.setUser_nameIsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
-            case 5: // GROUP_NAMES
-              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
-                {
-                  org.apache.thrift.protocol.TList _list725 = iprot.readListBegin();
-                  struct.group_names = new ArrayList<String>(_list725.size);
-                  for (int _i726 = 0; _i726 < _list725.size; ++_i726)
-                  {
-                    String _elem727; // required
-                    _elem727 = iprot.readString();
-                    struct.group_names.add(_elem727);
-                  }
-                  iprot.readListEnd();
-                }
-                struct.setGroup_namesIsSet(true);
+                struct.part_name = iprot.readString();
+                struct.setPart_nameIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
@@ -64601,7 +65917,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_with_
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_with_auth_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -64615,33 +65931,9 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_with
           oprot.writeString(struct.tbl_name);
           oprot.writeFieldEnd();
         }
-        if (struct.part_vals != null) {
-          oprot.writeFieldBegin(PART_VALS_FIELD_DESC);
-          {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.part_vals.size()));
-            for (String _iter728 : struct.part_vals)
-            {
-              oprot.writeString(_iter728);
-            }
-            oprot.writeListEnd();
-          }
-          oprot.writeFieldEnd();
-        }
-        if (struct.user_name != null) {
-          oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
-          oprot.writeString(struct.user_name);
-          oprot.writeFieldEnd();
-        }
-        if (struct.group_names != null) {
-          oprot.writeFieldBegin(GROUP_NAMES_FIELD_DESC);
-          {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.group_names.size()));
-            for (String _iter729 : struct.group_names)
-            {
-              oprot.writeString(_iter729);
-            }
-            oprot.writeListEnd();
-          }
+        if (struct.part_name != null) {
+          oprot.writeFieldBegin(PART_NAME_FIELD_DESC);
+          oprot.writeString(struct.part_name);
           oprot.writeFieldEnd();
         }
         oprot.writeFieldStop();
@@ -64650,16 +65942,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_with
 
     }
 
-    private static class get_partition_with_auth_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partition_with_auth_argsTupleScheme getScheme() {
-        return new get_partition_with_auth_argsTupleScheme();
+    private static class get_partition_by_name_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partition_by_name_argsTupleScheme getScheme() {
+        return new get_partition_by_name_argsTupleScheme();
       }
     }
 
-    private static class get_partition_with_auth_argsTupleScheme extends TupleScheme<get_partition_with_auth_args> {
+    private static class get_partition_by_name_argsTupleScheme extends TupleScheme<get_partition_by_name_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -64668,49 +65960,25 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_with_
         if (struct.isSetTbl_name()) {
           optionals.set(1);
         }
-        if (struct.isSetPart_vals()) {
+        if (struct.isSetPart_name()) {
           optionals.set(2);
         }
-        if (struct.isSetUser_name()) {
-          optionals.set(3);
-        }
-        if (struct.isSetGroup_names()) {
-          optionals.set(4);
-        }
-        oprot.writeBitSet(optionals, 5);
+        oprot.writeBitSet(optionals, 3);
         if (struct.isSetDb_name()) {
           oprot.writeString(struct.db_name);
         }
         if (struct.isSetTbl_name()) {
           oprot.writeString(struct.tbl_name);
         }
-        if (struct.isSetPart_vals()) {
-          {
-            oprot.writeI32(struct.part_vals.size());
-            for (String _iter730 : struct.part_vals)
-            {
-              oprot.writeString(_iter730);
-            }
-          }
-        }
-        if (struct.isSetUser_name()) {
-          oprot.writeString(struct.user_name);
-        }
-        if (struct.isSetGroup_names()) {
-          {
-            oprot.writeI32(struct.group_names.size());
-            for (String _iter731 : struct.group_names)
-            {
-              oprot.writeString(_iter731);
-            }
-          }
+        if (struct.isSetPart_name()) {
+          oprot.writeString(struct.part_name);
         }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(5);
+        BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           struct.db_name = iprot.readString();
           struct.setDb_nameIsSet(true);
@@ -64720,42 +65988,16 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_with_a
           struct.setTbl_nameIsSet(true);
         }
         if (incoming.get(2)) {
-          {
-            org.apache.thrift.protocol.TList _list732 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.part_vals = new ArrayList<String>(_list732.size);
-            for (int _i733 = 0; _i733 < _list732.size; ++_i733)
-            {
-              String _elem734; // required
-              _elem734 = iprot.readString();
-              struct.part_vals.add(_elem734);
-            }
-          }
-          struct.setPart_valsIsSet(true);
-        }
-        if (incoming.get(3)) {
-          struct.user_name = iprot.readString();
-          struct.setUser_nameIsSet(true);
-        }
-        if (incoming.get(4)) {
-          {
-            org.apache.thrift.protocol.TList _list735 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.group_names = new ArrayList<String>(_list735.size);
-            for (int _i736 = 0; _i736 < _list735.size; ++_i736)
-            {
-              String _elem737; // required
-              _elem737 = iprot.readString();
-              struct.group_names.add(_elem737);
-            }
-          }
-          struct.setGroup_namesIsSet(true);
+          struct.part_name = iprot.readString();
+          struct.setPart_nameIsSet(true);
         }
       }
     }
 
   }
 
-  public static class get_partition_with_auth_result implements org.apache.thrift.TBase<get_partition_with_auth_result, get_partition_with_auth_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_with_auth_result");
+  public static class get_partition_by_name_result implements org.apache.thrift.TBase<get_partition_by_name_result, get_partition_by_name_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_by_name_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -64763,8 +66005,8 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_with_a
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partition_with_auth_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partition_with_auth_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partition_by_name_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partition_by_name_resultTupleSchemeFactory());
     }
 
     private Partition success; // required
@@ -64846,13 +66088,13 @@ public String getFieldName() {
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_with_auth_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_by_name_result.class, metaDataMap);
     }
 
-    public get_partition_with_auth_result() {
+    public get_partition_by_name_result() {
     }
 
-    public get_partition_with_auth_result(
+    public get_partition_by_name_result(
       Partition success,
       MetaException o1,
       NoSuchObjectException o2)
@@ -64866,7 +66108,7 @@ public get_partition_with_auth_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partition_with_auth_result(get_partition_with_auth_result other) {
+    public get_partition_by_name_result(get_partition_by_name_result other) {
       if (other.isSetSuccess()) {
         this.success = new Partition(other.success);
       }
@@ -64878,8 +66120,8 @@ public get_partition_with_auth_result(get_partition_with_auth_result other) {
       }
     }
 
-    public get_partition_with_auth_result deepCopy() {
-      return new get_partition_with_auth_result(this);
+    public get_partition_by_name_result deepCopy() {
+      return new get_partition_by_name_result(this);
     }
 
     @Override
@@ -65023,12 +66265,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partition_with_auth_result)
-        return this.equals((get_partition_with_auth_result)that);
+      if (that instanceof get_partition_by_name_result)
+        return this.equals((get_partition_by_name_result)that);
       return false;
     }
 
-    public boolean equals(get_partition_with_auth_result that) {
+    public boolean equals(get_partition_by_name_result that) {
       if (that == null)
         return false;
 
@@ -65084,13 +66326,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partition_with_auth_result other) {
+    public int compareTo(get_partition_by_name_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partition_with_auth_result typedOther = (get_partition_with_auth_result)other;
+      get_partition_by_name_result typedOther = (get_partition_by_name_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -65139,7 +66381,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partition_with_auth_result(");
+      StringBuilder sb = new StringBuilder("get_partition_by_name_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -65193,15 +66435,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partition_with_auth_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partition_with_auth_resultStandardScheme getScheme() {
-        return new get_partition_with_auth_resultStandardScheme();
+    private static class get_partition_by_name_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partition_by_name_resultStandardScheme getScheme() {
+        return new get_partition_by_name_resultStandardScheme();
       }
     }
 
-    private static class get_partition_with_auth_resultStandardScheme extends StandardScheme<get_partition_with_auth_result> {
+    private static class get_partition_by_name_resultStandardScheme extends StandardScheme<get_partition_by_name_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -65247,7 +66489,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_with_
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -65272,16 +66514,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_with
 
     }
 
-    private static class get_partition_with_auth_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partition_with_auth_resultTupleScheme getScheme() {
-        return new get_partition_with_auth_resultTupleScheme();
+    private static class get_partition_by_name_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partition_by_name_resultTupleScheme getScheme() {
+        return new get_partition_by_name_resultTupleScheme();
       }
     }
 
-    private static class get_partition_with_auth_resultTupleScheme extends TupleScheme<get_partition_with_auth_result> {
+    private static class get_partition_by_name_resultTupleScheme extends TupleScheme<get_partition_by_name_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -65306,7 +66548,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_with_
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_with_auth_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
@@ -65329,28 +66571,28 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_with_a
 
   }
 
-  public static class get_partition_by_name_args implements org.apache.thrift.TBase<get_partition_by_name_args, get_partition_by_name_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_by_name_args");
+  public static class get_partitions_args implements org.apache.thrift.TBase<get_partitions_args, get_partitions_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
-    private static final org.apache.thrift.protocol.TField PART_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("part_name", org.apache.thrift.protocol.TType.STRING, (short)3);
+    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)3);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partition_by_name_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partition_by_name_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
-    private String part_name; // required
+    private short max_parts; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
-      PART_NAME((short)3, "part_name");
+      MAX_PARTS((short)3, "max_parts");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -65369,8 +66611,8 @@ public static _Fields findByThriftId(int fieldId) {
             return DB_NAME;
           case 2: // TBL_NAME
             return TBL_NAME;
-          case 3: // PART_NAME
-            return PART_NAME;
+          case 3: // MAX_PARTS
+            return MAX_PARTS;
           default:
             return null;
         }
@@ -65411,6 +66653,8 @@ public String getFieldName() {
     }
 
     // isset id assignments
+    private static final int __MAX_PARTS_ISSET_ID = 0;
+    private byte __isset_bitfield = 0;
     public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
     static {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
@@ -65418,50 +66662,53 @@ public String getFieldName() {
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.TBL_NAME, new org.apache.thrift.meta_data.FieldMetaData("tbl_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
-      tmpMap.put(_Fields.PART_NAME, new org.apache.thrift.meta_data.FieldMetaData("part_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
+      tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_by_name_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_args.class, metaDataMap);
     }
 
-    public get_partition_by_name_args() {
+    public get_partitions_args() {
+      this.max_parts = (short)-1;
+
     }
 
-    public get_partition_by_name_args(
+    public get_partitions_args(
       String db_name,
       String tbl_name,
-      String part_name)
+      short max_parts)
     {
       this();
       this.db_name = db_name;
       this.tbl_name = tbl_name;
-      this.part_name = part_name;
+      this.max_parts = max_parts;
+      setMax_partsIsSet(true);
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partition_by_name_args(get_partition_by_name_args other) {
+    public get_partitions_args(get_partitions_args other) {
+      __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
       }
       if (other.isSetTbl_name()) {
         this.tbl_name = other.tbl_name;
       }
-      if (other.isSetPart_name()) {
-        this.part_name = other.part_name;
-      }
+      this.max_parts = other.max_parts;
     }
 
-    public get_partition_by_name_args deepCopy() {
-      return new get_partition_by_name_args(this);
+    public get_partitions_args deepCopy() {
+      return new get_partitions_args(this);
     }
 
     @Override
     public void clear() {
       this.db_name = null;
       this.tbl_name = null;
-      this.part_name = null;
+      this.max_parts = (short)-1;
+
     }
 
     public String getDb_name() {
@@ -65510,27 +66757,26 @@ public void setTbl_nameIsSet(boolean value) {
       }
     }
 
-    public String getPart_name() {
-      return this.part_name;
+    public short getMax_parts() {
+      return this.max_parts;
     }
 
-    public void setPart_name(String part_name) {
-      this.part_name = part_name;
+    public void setMax_parts(short max_parts) {
+      this.max_parts = max_parts;
+      setMax_partsIsSet(true);
     }
 
-    public void unsetPart_name() {
-      this.part_name = null;
+    public void unsetMax_parts() {
+      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAX_PARTS_ISSET_ID);
     }
 
-    /** Returns true if field part_name is set (has been assigned a value) and false otherwise */
-    public boolean isSetPart_name() {
-      return this.part_name != null;
+    /** Returns true if field max_parts is set (has been assigned a value) and false otherwise */
+    public boolean isSetMax_parts() {
+      return EncodingUtils.testBit(__isset_bitfield, __MAX_PARTS_ISSET_ID);
     }
 
-    public void setPart_nameIsSet(boolean value) {
-      if (!value) {
-        this.part_name = null;
-      }
+    public void setMax_partsIsSet(boolean value) {
+      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_PARTS_ISSET_ID, value);
     }
 
     public void setFieldValue(_Fields field, Object value) {
@@ -65551,11 +66797,11 @@ public void setFieldValue(_Fields field, Object value) {
         }
         break;
 
-      case PART_NAME:
+      case MAX_PARTS:
         if (value == null) {
-          unsetPart_name();
+          unsetMax_parts();
         } else {
-          setPart_name((String)value);
+          setMax_parts((Short)value);
         }
         break;
 
@@ -65570,8 +66816,8 @@ public Object getFieldValue(_Fields field) {
       case TBL_NAME:
         return getTbl_name();
 
-      case PART_NAME:
-        return getPart_name();
+      case MAX_PARTS:
+        return Short.valueOf(getMax_parts());
 
       }
       throw new IllegalStateException();
@@ -65588,8 +66834,8 @@ public boolean isSet(_Fields field) {
         return isSetDb_name();
       case TBL_NAME:
         return isSetTbl_name();
-      case PART_NAME:
-        return isSetPart_name();
+      case MAX_PARTS:
+        return isSetMax_parts();
       }
       throw new IllegalStateException();
     }
@@ -65598,12 +66844,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partition_by_name_args)
-        return this.equals((get_partition_by_name_args)that);
+      if (that instanceof get_partitions_args)
+        return this.equals((get_partitions_args)that);
       return false;
     }
 
-    public boolean equals(get_partition_by_name_args that) {
+    public boolean equals(get_partitions_args that) {
       if (that == null)
         return false;
 
@@ -65625,12 +66871,12 @@ public boolean equals(get_partition_by_name_args that) {
           return false;
       }
 
-      boolean this_present_part_name = true && this.isSetPart_name();
-      boolean that_present_part_name = true && that.isSetPart_name();
-      if (this_present_part_name || that_present_part_name) {
-        if (!(this_present_part_name && that_present_part_name))
+      boolean this_present_max_parts = true;
+      boolean that_present_max_parts = true;
+      if (this_present_max_parts || that_present_max_parts) {
+        if (!(this_present_max_parts && that_present_max_parts))
           return false;
-        if (!this.part_name.equals(that.part_name))
+        if (this.max_parts != that.max_parts)
           return false;
       }
 
@@ -65651,21 +66897,21 @@ public int hashCode() {
       if (present_tbl_name)
         builder.append(tbl_name);
 
-      boolean present_part_name = true && (isSetPart_name());
-      builder.append(present_part_name);
-      if (present_part_name)
-        builder.append(part_name);
+      boolean present_max_parts = true;
+      builder.append(present_max_parts);
+      if (present_max_parts)
+        builder.append(max_parts);
 
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partition_by_name_args other) {
+    public int compareTo(get_partitions_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partition_by_name_args typedOther = (get_partition_by_name_args)other;
+      get_partitions_args typedOther = (get_partitions_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -65687,12 +66933,12 @@ public int compareTo(get_partition_by_name_args other) {
           return lastComparison;
         }
       }
-      lastComparison = Boolean.valueOf(isSetPart_name()).compareTo(typedOther.isSetPart_name());
+      lastComparison = Boolean.valueOf(isSetMax_parts()).compareTo(typedOther.isSetMax_parts());
       if (lastComparison != 0) {
         return lastComparison;
       }
-      if (isSetPart_name()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.part_name, typedOther.part_name);
+      if (isSetMax_parts()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.max_parts, typedOther.max_parts);
         if (lastComparison != 0) {
           return lastComparison;
         }
@@ -65714,7 +66960,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partition_by_name_args(");
+      StringBuilder sb = new StringBuilder("get_partitions_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -65733,12 +66979,8 @@ public String toString() {
       }
       first = false;
       if (!first) sb.append(", ");
-      sb.append("part_name:");
-      if (this.part_name == null) {
-        sb.append("null");
-      } else {
-        sb.append(this.part_name);
-      }
+      sb.append("max_parts:");
+      sb.append(this.max_parts);
       first = false;
       sb.append(")");
       return sb.toString();
@@ -65759,21 +67001,23 @@ private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOExcept
 
     private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
       try {
+        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
+        __isset_bitfield = 0;
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
         throw new java.io.IOException(te);
       }
     }
 
-    private static class get_partition_by_name_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partition_by_name_argsStandardScheme getScheme() {
-        return new get_partition_by_name_argsStandardScheme();
+    private static class get_partitions_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_argsStandardScheme getScheme() {
+        return new get_partitions_argsStandardScheme();
       }
     }
 
-    private static class get_partition_by_name_argsStandardScheme extends StandardScheme<get_partition_by_name_args> {
+    private static class get_partitions_argsStandardScheme extends StandardScheme<get_partitions_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -65799,10 +67043,10 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_na
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 3: // PART_NAME
-              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
-                struct.part_name = iprot.readString();
-                struct.setPart_nameIsSet(true);
+            case 3: // MAX_PARTS
+              if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
+                struct.max_parts = iprot.readI16();
+                struct.setMax_partsIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
@@ -65816,7 +67060,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_na
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -65830,27 +67074,25 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_by_n
           oprot.writeString(struct.tbl_name);
           oprot.writeFieldEnd();
         }
-        if (struct.part_name != null) {
-          oprot.writeFieldBegin(PART_NAME_FIELD_DESC);
-          oprot.writeString(struct.part_name);
-          oprot.writeFieldEnd();
-        }
+        oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
+        oprot.writeI16(struct.max_parts);
+        oprot.writeFieldEnd();
         oprot.writeFieldStop();
         oprot.writeStructEnd();
       }
 
     }
 
-    private static class get_partition_by_name_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partition_by_name_argsTupleScheme getScheme() {
-        return new get_partition_by_name_argsTupleScheme();
+    private static class get_partitions_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_argsTupleScheme getScheme() {
+        return new get_partitions_argsTupleScheme();
       }
     }
 
-    private static class get_partition_by_name_argsTupleScheme extends TupleScheme<get_partition_by_name_args> {
+    private static class get_partitions_argsTupleScheme extends TupleScheme<get_partitions_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -65859,7 +67101,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_na
         if (struct.isSetTbl_name()) {
           optionals.set(1);
         }
-        if (struct.isSetPart_name()) {
+        if (struct.isSetMax_parts()) {
           optionals.set(2);
         }
         oprot.writeBitSet(optionals, 3);
@@ -65869,13 +67111,13 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_na
         if (struct.isSetTbl_name()) {
           oprot.writeString(struct.tbl_name);
         }
-        if (struct.isSetPart_name()) {
-          oprot.writeString(struct.part_name);
+        if (struct.isSetMax_parts()) {
+          oprot.writeI16(struct.max_parts);
         }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
@@ -65887,30 +67129,30 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_by_nam
           struct.setTbl_nameIsSet(true);
         }
         if (incoming.get(2)) {
-          struct.part_name = iprot.readString();
-          struct.setPart_nameIsSet(true);
+          struct.max_parts = iprot.readI16();
+          struct.setMax_partsIsSet(true);
         }
       }
     }
 
   }
 
-  public static class get_partition_by_name_result implements org.apache.thrift.TBase<get_partition_by_name_result, get_partition_by_name_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_by_name_result");
+  public static class get_partitions_result implements org.apache.thrift.TBase<get_partitions_result, get_partitions_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_result");
 
-    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
+    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
     private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField("o2", org.apache.thrift.protocol.TType.STRUCT, (short)2);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partition_by_name_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partition_by_name_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_resultTupleSchemeFactory());
     }
 
-    private Partition success; // required
-    private MetaException o1; // required
-    private NoSuchObjectException o2; // required
+    private List<Partition> success; // required
+    private NoSuchObjectException o1; // required
+    private MetaException o2; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
@@ -65981,22 +67223,23 @@ public String getFieldName() {
     static {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class)));
+          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
+              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));
       tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_by_name_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_result.class, metaDataMap);
     }
 
-    public get_partition_by_name_result() {
+    public get_partitions_result() {
     }
 
-    public get_partition_by_name_result(
-      Partition success,
-      MetaException o1,
-      NoSuchObjectException o2)
+    public get_partitions_result(
+      List<Partition> success,
+      NoSuchObjectException o1,
+      MetaException o2)
     {
       this();
       this.success = success;
@@ -66007,20 +67250,24 @@ public get_partition_by_name_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partition_by_name_result(get_partition_by_name_result other) {
+    public get_partitions_result(get_partitions_result other) {
       if (other.isSetSuccess()) {
-        this.success = new Partition(other.success);
+        List<Partition> __this__success = new ArrayList<Partition>();
+        for (Partition other_element : other.success) {
+          __this__success.add(new Partition(other_element));
+        }
+        this.success = __this__success;
       }
       if (other.isSetO1()) {
-        this.o1 = new MetaException(other.o1);
+        this.o1 = new NoSuchObjectException(other.o1);
       }
       if (other.isSetO2()) {
-        this.o2 = new NoSuchObjectException(other.o2);
+        this.o2 = new MetaException(other.o2);
       }
     }
 
-    public get_partition_by_name_result deepCopy() {
-      return new get_partition_by_name_result(this);
+    public get_partitions_result deepCopy() {
+      return new get_partitions_result(this);
     }
 
     @Override
@@ -66030,11 +67277,26 @@ public void clear() {
       this.o2 = null;
     }
 
-    public Partition getSuccess() {
+    public int getSuccessSize() {
+      return (this.success == null) ? 0 : this.success.size();
+    }
+
+    public java.util.Iterator<Partition> getSuccessIterator() {
+      return (this.success == null) ? null : this.success.iterator();
+    }
+
+    public void addToSuccess(Partition elem) {
+      if (this.success == null) {
+        this.success = new ArrayList<Partition>();
+      }
+      this.success.add(elem);
+    }
+
+    public List<Partition> getSuccess() {
       return this.success;
     }
 
-    public void setSuccess(Partition success) {
+    public void setSuccess(List<Partition> success) {
       this.success = success;
     }
 
@@ -66053,11 +67315,11 @@ public void setSuccessIsSet(boolean value) {
       }
     }
 
-    public MetaException getO1() {
+    public NoSuchObjectException getO1() {
       return this.o1;
     }
 
-    public void setO1(MetaException o1) {
+    public void setO1(NoSuchObjectException o1) {
       this.o1 = o1;
     }
 
@@ -66076,11 +67338,11 @@ public void setO1IsSet(boolean value) {
       }
     }
 
-    public NoSuchObjectException getO2() {
+    public MetaException getO2() {
       return this.o2;
     }
 
-    public void setO2(NoSuchObjectException o2) {
+    public void setO2(MetaException o2) {
       this.o2 = o2;
     }
 
@@ -66105,7 +67367,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetSuccess();
         } else {
-          setSuccess((Partition)value);
+          setSuccess((List<Partition>)value);
         }
         break;
 
@@ -66113,7 +67375,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetO1();
         } else {
-          setO1((MetaException)value);
+          setO1((NoSuchObjectException)value);
         }
         break;
 
@@ -66121,7 +67383,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetO2();
         } else {
-          setO2((NoSuchObjectException)value);
+          setO2((MetaException)value);
         }
         break;
 
@@ -66164,12 +67426,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partition_by_name_result)
-        return this.equals((get_partition_by_name_result)that);
+      if (that instanceof get_partitions_result)
+        return this.equals((get_partitions_result)that);
       return false;
     }
 
-    public boolean equals(get_partition_by_name_result that) {
+    public boolean equals(get_partitions_result that) {
       if (that == null)
         return false;
 
@@ -66225,13 +67487,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partition_by_name_result other) {
+    public int compareTo(get_partitions_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partition_by_name_result typedOther = (get_partition_by_name_result)other;
+      get_partitions_result typedOther = (get_partitions_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -66280,7 +67542,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partition_by_name_result(");
+      StringBuilder sb = new StringBuilder("get_partitions_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -66313,9 +67575,6 @@ public String toString() {
     public void validate() throws org.apache.thrift.TException {
       // check for required fields
       // check for sub-struct validity
-      if (success != null) {
-        success.validate();
-      }
     }
 
     private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
@@ -66334,15 +67593,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partition_by_name_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partition_by_name_resultStandardScheme getScheme() {
-        return new get_partition_by_name_resultStandardScheme();
+    private static class get_partitions_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_resultStandardScheme getScheme() {
+        return new get_partitions_resultStandardScheme();
       }
     }
 
-    private static class get_partition_by_name_resultStandardScheme extends StandardScheme<get_partition_by_name_result> {
+    private static class get_partitions_resultStandardScheme extends StandardScheme<get_partitions_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -66353,9 +67612,19 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_na
           }
           switch (schemeField.id) {
             case 0: // SUCCESS
-              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.success = new Partition();
-                struct.success.read(iprot);
+              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
+                {
+                  org.apache.thrift.protocol.TList _list738 = iprot.readListBegin();
+                  struct.success = new ArrayList<Partition>(_list738.size);
+                  for (int _i739 = 0; _i739 < _list738.size; ++_i739)
+                  {
+                    Partition _elem740; // required
+                    _elem740 = new Partition();
+                    _elem740.read(iprot);
+                    struct.success.add(_elem740);
+                  }
+                  iprot.readListEnd();
+                }
                 struct.setSuccessIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -66363,7 +67632,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_na
               break;
             case 1: // O1
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o1 = new MetaException();
+                struct.o1 = new NoSuchObjectException();
                 struct.o1.read(iprot);
                 struct.setO1IsSet(true);
               } else { 
@@ -66372,7 +67641,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_na
               break;
             case 2: // O2
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o2 = new NoSuchObjectException();
+                struct.o2 = new MetaException();
                 struct.o2.read(iprot);
                 struct.setO2IsSet(true);
               } else { 
@@ -66388,13 +67657,20 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_by_na
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
         if (struct.success != null) {
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
-          struct.success.write(oprot);
+          {
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
+            for (Partition _iter741 : struct.success)
+            {
+              _iter741.write(oprot);
+            }
+            oprot.writeListEnd();
+          }
           oprot.writeFieldEnd();
         }
         if (struct.o1 != null) {
@@ -66413,16 +67689,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_by_n
 
     }
 
-    private static class get_partition_by_name_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partition_by_name_resultTupleScheme getScheme() {
-        return new get_partition_by_name_resultTupleScheme();
+    private static class get_partitions_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_resultTupleScheme getScheme() {
+        return new get_partitions_resultTupleScheme();
       }
     }
 
-    private static class get_partition_by_name_resultTupleScheme extends TupleScheme<get_partition_by_name_result> {
+    private static class get_partitions_resultTupleScheme extends TupleScheme<get_partitions_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -66436,7 +67712,13 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_na
         }
         oprot.writeBitSet(optionals, 3);
         if (struct.isSetSuccess()) {
-          struct.success.write(oprot);
+          {
+            oprot.writeI32(struct.success.size());
+            for (Partition _iter742 : struct.success)
+            {
+              _iter742.write(oprot);
+            }
+          }
         }
         if (struct.isSetO1()) {
           struct.o1.write(oprot);
@@ -66447,21 +67729,30 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_by_na
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_by_name_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
-          struct.success = new Partition();
-          struct.success.read(iprot);
+          {
+            org.apache.thrift.protocol.TList _list743 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
+            struct.success = new ArrayList<Partition>(_list743.size);
+            for (int _i744 = 0; _i744 < _list743.size; ++_i744)
+            {
+              Partition _elem745; // required
+              _elem745 = new Partition();
+              _elem745.read(iprot);
+              struct.success.add(_elem745);
+            }
+          }
           struct.setSuccessIsSet(true);
         }
         if (incoming.get(1)) {
-          struct.o1 = new MetaException();
+          struct.o1 = new NoSuchObjectException();
           struct.o1.read(iprot);
           struct.setO1IsSet(true);
         }
         if (incoming.get(2)) {
-          struct.o2 = new NoSuchObjectException();
+          struct.o2 = new MetaException();
           struct.o2.read(iprot);
           struct.setO2IsSet(true);
         }
@@ -66470,28 +67761,34 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_by_nam
 
   }
 
-  public static class get_partitions_args implements org.apache.thrift.TBase<get_partitions_args, get_partitions_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_args");
+  public static class get_partitions_with_auth_args implements org.apache.thrift.TBase<get_partitions_with_auth_args, get_partitions_with_auth_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_with_auth_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
     private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)3);
+    private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("user_name", org.apache.thrift.protocol.TType.STRING, (short)4);
+    private static final org.apache.thrift.protocol.TField GROUP_NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("group_names", org.apache.thrift.protocol.TType.LIST, (short)5);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_with_auth_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_with_auth_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
     private short max_parts; // required
+    private String user_name; // required
+    private List<String> group_names; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
-      MAX_PARTS((short)3, "max_parts");
+      MAX_PARTS((short)3, "max_parts"),
+      USER_NAME((short)4, "user_name"),
+      GROUP_NAMES((short)5, "group_names");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -66512,6 +67809,10 @@ public static _Fields findByThriftId(int fieldId) {
             return TBL_NAME;
           case 3: // MAX_PARTS
             return MAX_PARTS;
+          case 4: // USER_NAME
+            return USER_NAME;
+          case 5: // GROUP_NAMES
+            return GROUP_NAMES;
           default:
             return null;
         }
@@ -66563,31 +67864,40 @@ public String getFieldName() {
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
+      tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("user_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
+      tmpMap.put(_Fields.GROUP_NAMES, new org.apache.thrift.meta_data.FieldMetaData("group_names", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
+              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_with_auth_args.class, metaDataMap);
     }
 
-    public get_partitions_args() {
+    public get_partitions_with_auth_args() {
       this.max_parts = (short)-1;
 
     }
 
-    public get_partitions_args(
+    public get_partitions_with_auth_args(
       String db_name,
       String tbl_name,
-      short max_parts)
+      short max_parts,
+      String user_name,
+      List<String> group_names)
     {
       this();
       this.db_name = db_name;
       this.tbl_name = tbl_name;
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
+      this.user_name = user_name;
+      this.group_names = group_names;
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_args(get_partitions_args other) {
+    public get_partitions_with_auth_args(get_partitions_with_auth_args other) {
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
@@ -66596,10 +67906,20 @@ public get_partitions_args(get_partitions_args other) {
         this.tbl_name = other.tbl_name;
       }
       this.max_parts = other.max_parts;
+      if (other.isSetUser_name()) {
+        this.user_name = other.user_name;
+      }
+      if (other.isSetGroup_names()) {
+        List<String> __this__group_names = new ArrayList<String>();
+        for (String other_element : other.group_names) {
+          __this__group_names.add(other_element);
+        }
+        this.group_names = __this__group_names;
+      }
     }
 
-    public get_partitions_args deepCopy() {
-      return new get_partitions_args(this);
+    public get_partitions_with_auth_args deepCopy() {
+      return new get_partitions_with_auth_args(this);
     }
 
     @Override
@@ -66608,6 +67928,8 @@ public void clear() {
       this.tbl_name = null;
       this.max_parts = (short)-1;
 
+      this.user_name = null;
+      this.group_names = null;
     }
 
     public String getDb_name() {
@@ -66678,6 +68000,67 @@ public void setMax_partsIsSet(boolean value) {
       __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_PARTS_ISSET_ID, value);
     }
 
+    public String getUser_name() {
+      return this.user_name;
+    }
+
+    public void setUser_name(String user_name) {
+      this.user_name = user_name;
+    }
+
+    public void unsetUser_name() {
+      this.user_name = null;
+    }
+
+    /** Returns true if field user_name is set (has been assigned a value) and false otherwise */
+    public boolean isSetUser_name() {
+      return this.user_name != null;
+    }
+
+    public void setUser_nameIsSet(boolean value) {
+      if (!value) {
+        this.user_name = null;
+      }
+    }
+
+    public int getGroup_namesSize() {
+      return (this.group_names == null) ? 0 : this.group_names.size();
+    }
+
+    public java.util.Iterator<String> getGroup_namesIterator() {
+      return (this.group_names == null) ? null : this.group_names.iterator();
+    }
+
+    public void addToGroup_names(String elem) {
+      if (this.group_names == null) {
+        this.group_names = new ArrayList<String>();
+      }
+      this.group_names.add(elem);
+    }
+
+    public List<String> getGroup_names() {
+      return this.group_names;
+    }
+
+    public void setGroup_names(List<String> group_names) {
+      this.group_names = group_names;
+    }
+
+    public void unsetGroup_names() {
+      this.group_names = null;
+    }
+
+    /** Returns true if field group_names is set (has been assigned a value) and false otherwise */
+    public boolean isSetGroup_names() {
+      return this.group_names != null;
+    }
+
+    public void setGroup_namesIsSet(boolean value) {
+      if (!value) {
+        this.group_names = null;
+      }
+    }
+
     public void setFieldValue(_Fields field, Object value) {
       switch (field) {
       case DB_NAME:
@@ -66704,6 +68087,22 @@ public void setFieldValue(_Fields field, Object value) {
         }
         break;
 
+      case USER_NAME:
+        if (value == null) {
+          unsetUser_name();
+        } else {
+          setUser_name((String)value);
+        }
+        break;
+
+      case GROUP_NAMES:
+        if (value == null) {
+          unsetGroup_names();
+        } else {
+          setGroup_names((List<String>)value);
+        }
+        break;
+
       }
     }
 
@@ -66718,6 +68117,12 @@ public Object getFieldValue(_Fields field) {
       case MAX_PARTS:
         return Short.valueOf(getMax_parts());
 
+      case USER_NAME:
+        return getUser_name();
+
+      case GROUP_NAMES:
+        return getGroup_names();
+
       }
       throw new IllegalStateException();
     }
@@ -66735,6 +68140,10 @@ public boolean isSet(_Fields field) {
         return isSetTbl_name();
       case MAX_PARTS:
         return isSetMax_parts();
+      case USER_NAME:
+        return isSetUser_name();
+      case GROUP_NAMES:
+        return isSetGroup_names();
       }
       throw new IllegalStateException();
     }
@@ -66743,12 +68152,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_args)
-        return this.equals((get_partitions_args)that);
+      if (that instanceof get_partitions_with_auth_args)
+        return this.equals((get_partitions_with_auth_args)that);
       return false;
     }
 
-    public boolean equals(get_partitions_args that) {
+    public boolean equals(get_partitions_with_auth_args that) {
       if (that == null)
         return false;
 
@@ -66779,6 +68188,24 @@ public boolean equals(get_partitions_args that) {
           return false;
       }
 
+      boolean this_present_user_name = true && this.isSetUser_name();
+      boolean that_present_user_name = true && that.isSetUser_name();
+      if (this_present_user_name || that_present_user_name) {
+        if (!(this_present_user_name && that_present_user_name))
+          return false;
+        if (!this.user_name.equals(that.user_name))
+          return false;
+      }
+
+      boolean this_present_group_names = true && this.isSetGroup_names();
+      boolean that_present_group_names = true && that.isSetGroup_names();
+      if (this_present_group_names || that_present_group_names) {
+        if (!(this_present_group_names && that_present_group_names))
+          return false;
+        if (!this.group_names.equals(that.group_names))
+          return false;
+      }
+
       return true;
     }
 
@@ -66801,16 +68228,26 @@ public int hashCode() {
       if (present_max_parts)
         builder.append(max_parts);
 
+      boolean present_user_name = true && (isSetUser_name());
+      builder.append(present_user_name);
+      if (present_user_name)
+        builder.append(user_name);
+
+      boolean present_group_names = true && (isSetGroup_names());
+      builder.append(present_group_names);
+      if (present_group_names)
+        builder.append(group_names);
+
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_args other) {
+    public int compareTo(get_partitions_with_auth_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_args typedOther = (get_partitions_args)other;
+      get_partitions_with_auth_args typedOther = (get_partitions_with_auth_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -66842,6 +68279,26 @@ public int compareTo(get_partitions_args other) {
           return lastComparison;
         }
       }
+      lastComparison = Boolean.valueOf(isSetUser_name()).compareTo(typedOther.isSetUser_name());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetUser_name()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_name, typedOther.user_name);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      lastComparison = Boolean.valueOf(isSetGroup_names()).compareTo(typedOther.isSetGroup_names());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetGroup_names()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.group_names, typedOther.group_names);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
       return 0;
     }
 
@@ -66859,7 +68316,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_args(");
+      StringBuilder sb = new StringBuilder("get_partitions_with_auth_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -66881,6 +68338,22 @@ public String toString() {
       sb.append("max_parts:");
       sb.append(this.max_parts);
       first = false;
+      if (!first) sb.append(", ");
+      sb.append("user_name:");
+      if (this.user_name == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.user_name);
+      }
+      first = false;
+      if (!first) sb.append(", ");
+      sb.append("group_names:");
+      if (this.group_names == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.group_names);
+      }
+      first = false;
       sb.append(")");
       return sb.toString();
     }
@@ -66908,15 +68381,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_argsStandardScheme getScheme() {
-        return new get_partitions_argsStandardScheme();
+    private static class get_partitions_with_auth_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_with_auth_argsStandardScheme getScheme() {
+        return new get_partitions_with_auth_argsStandardScheme();
       }
     }
 
-    private static class get_partitions_argsStandardScheme extends StandardScheme<get_partitions_args> {
+    private static class get_partitions_with_auth_argsStandardScheme extends StandardScheme<get_partitions_with_auth_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -66950,6 +68423,32 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_args
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
+            case 4: // USER_NAME
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
+                struct.user_name = iprot.readString();
+                struct.setUser_nameIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 5: // GROUP_NAMES
+              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
+                {
+                  org.apache.thrift.protocol.TList _list746 = iprot.readListBegin();
+                  struct.group_names = new ArrayList<String>(_list746.size);
+                  for (int _i747 = 0; _i747 < _list746.size; ++_i747)
+                  {
+                    String _elem748; // required
+                    _elem748 = iprot.readString();
+                    struct.group_names.add(_elem748);
+                  }
+                  iprot.readListEnd();
+                }
+                struct.setGroup_namesIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
             default:
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
           }
@@ -66959,7 +68458,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_args
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -66976,22 +68475,39 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_arg
         oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
         oprot.writeI16(struct.max_parts);
         oprot.writeFieldEnd();
+        if (struct.user_name != null) {
+          oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
+          oprot.writeString(struct.user_name);
+          oprot.writeFieldEnd();
+        }
+        if (struct.group_names != null) {
+          oprot.writeFieldBegin(GROUP_NAMES_FIELD_DESC);
+          {
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.group_names.size()));
+            for (String _iter749 : struct.group_names)
+            {
+              oprot.writeString(_iter749);
+            }
+            oprot.writeListEnd();
+          }
+          oprot.writeFieldEnd();
+        }
         oprot.writeFieldStop();
         oprot.writeStructEnd();
       }
 
     }
 
-    private static class get_partitions_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_argsTupleScheme getScheme() {
-        return new get_partitions_argsTupleScheme();
+    private static class get_partitions_with_auth_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_with_auth_argsTupleScheme getScheme() {
+        return new get_partitions_with_auth_argsTupleScheme();
       }
     }
 
-    private static class get_partitions_argsTupleScheme extends TupleScheme<get_partitions_args> {
+    private static class get_partitions_with_auth_argsTupleScheme extends TupleScheme<get_partitions_with_auth_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -67003,7 +68519,13 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_args
         if (struct.isSetMax_parts()) {
           optionals.set(2);
         }
-        oprot.writeBitSet(optionals, 3);
+        if (struct.isSetUser_name()) {
+          optionals.set(3);
+        }
+        if (struct.isSetGroup_names()) {
+          optionals.set(4);
+        }
+        oprot.writeBitSet(optionals, 5);
         if (struct.isSetDb_name()) {
           oprot.writeString(struct.db_name);
         }
@@ -67013,12 +68535,24 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_args
         if (struct.isSetMax_parts()) {
           oprot.writeI16(struct.max_parts);
         }
+        if (struct.isSetUser_name()) {
+          oprot.writeString(struct.user_name);
+        }
+        if (struct.isSetGroup_names()) {
+          {
+            oprot.writeI32(struct.group_names.size());
+            for (String _iter750 : struct.group_names)
+            {
+              oprot.writeString(_iter750);
+            }
+          }
+        }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(3);
+        BitSet incoming = iprot.readBitSet(5);
         if (incoming.get(0)) {
           struct.db_name = iprot.readString();
           struct.setDb_nameIsSet(true);
@@ -67031,13 +68565,30 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_args
           struct.max_parts = iprot.readI16();
           struct.setMax_partsIsSet(true);
         }
+        if (incoming.get(3)) {
+          struct.user_name = iprot.readString();
+          struct.setUser_nameIsSet(true);
+        }
+        if (incoming.get(4)) {
+          {
+            org.apache.thrift.protocol.TList _list751 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.group_names = new ArrayList<String>(_list751.size);
+            for (int _i752 = 0; _i752 < _list751.size; ++_i752)
+            {
+              String _elem753; // required
+              _elem753 = iprot.readString();
+              struct.group_names.add(_elem753);
+            }
+          }
+          struct.setGroup_namesIsSet(true);
+        }
       }
     }
 
   }
 
-  public static class get_partitions_result implements org.apache.thrift.TBase<get_partitions_result, get_partitions_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_result");
+  public static class get_partitions_with_auth_result implements org.apache.thrift.TBase<get_partitions_with_auth_result, get_partitions_with_auth_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_with_auth_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -67045,8 +68596,8 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_args
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_with_auth_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_with_auth_resultTupleSchemeFactory());
     }
 
     private List<Partition> success; // required
@@ -67129,13 +68680,13 @@ public String getFieldName() {
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_with_auth_result.class, metaDataMap);
     }
 
-    public get_partitions_result() {
+    public get_partitions_with_auth_result() {
     }
 
-    public get_partitions_result(
+    public get_partitions_with_auth_result(
       List<Partition> success,
       NoSuchObjectException o1,
       MetaException o2)
@@ -67149,7 +68700,7 @@ public get_partitions_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_result(get_partitions_result other) {
+    public get_partitions_with_auth_result(get_partitions_with_auth_result other) {
       if (other.isSetSuccess()) {
         List<Partition> __this__success = new ArrayList<Partition>();
         for (Partition other_element : other.success) {
@@ -67165,8 +68716,8 @@ public get_partitions_result(get_partitions_result other) {
       }
     }
 
-    public get_partitions_result deepCopy() {
-      return new get_partitions_result(this);
+    public get_partitions_with_auth_result deepCopy() {
+      return new get_partitions_with_auth_result(this);
     }
 
     @Override
@@ -67325,12 +68876,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_result)
-        return this.equals((get_partitions_result)that);
+      if (that instanceof get_partitions_with_auth_result)
+        return this.equals((get_partitions_with_auth_result)that);
       return false;
     }
 
-    public boolean equals(get_partitions_result that) {
+    public boolean equals(get_partitions_with_auth_result that) {
       if (that == null)
         return false;
 
@@ -67386,13 +68937,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_result other) {
+    public int compareTo(get_partitions_with_auth_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_result typedOther = (get_partitions_result)other;
+      get_partitions_with_auth_result typedOther = (get_partitions_with_auth_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -67441,7 +68992,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_result(");
+      StringBuilder sb = new StringBuilder("get_partitions_with_auth_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -67492,15 +69043,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_resultStandardScheme getScheme() {
-        return new get_partitions_resultStandardScheme();
+    private static class get_partitions_with_auth_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_with_auth_resultStandardScheme getScheme() {
+        return new get_partitions_with_auth_resultStandardScheme();
       }
     }
 
-    private static class get_partitions_resultStandardScheme extends StandardScheme<get_partitions_result> {
+    private static class get_partitions_with_auth_resultStandardScheme extends StandardScheme<get_partitions_with_auth_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -67513,14 +69064,14 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_resu
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list738 = iprot.readListBegin();
-                  struct.success = new ArrayList<Partition>(_list738.size);
-                  for (int _i739 = 0; _i739 < _list738.size; ++_i739)
+                  org.apache.thrift.protocol.TList _list754 = iprot.readListBegin();
+                  struct.success = new ArrayList<Partition>(_list754.size);
+                  for (int _i755 = 0; _i755 < _list754.size; ++_i755)
                   {
-                    Partition _elem740; // required
-                    _elem740 = new Partition();
-                    _elem740.read(iprot);
-                    struct.success.add(_elem740);
+                    Partition _elem756; // required
+                    _elem756 = new Partition();
+                    _elem756.read(iprot);
+                    struct.success.add(_elem756);
                   }
                   iprot.readListEnd();
                 }
@@ -67556,7 +69107,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_resu
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -67564,9 +69115,9 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_res
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
           {
             oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
-            for (Partition _iter741 : struct.success)
+            for (Partition _iter757 : struct.success)
             {
-              _iter741.write(oprot);
+              _iter757.write(oprot);
             }
             oprot.writeListEnd();
           }
@@ -67588,16 +69139,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_res
 
     }
 
-    private static class get_partitions_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_resultTupleScheme getScheme() {
-        return new get_partitions_resultTupleScheme();
+    private static class get_partitions_with_auth_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_with_auth_resultTupleScheme getScheme() {
+        return new get_partitions_with_auth_resultTupleScheme();
       }
     }
 
-    private static class get_partitions_resultTupleScheme extends TupleScheme<get_partitions_result> {
+    private static class get_partitions_with_auth_resultTupleScheme extends TupleScheme<get_partitions_with_auth_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -67613,9 +69164,9 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_resu
         if (struct.isSetSuccess()) {
           {
             oprot.writeI32(struct.success.size());
-            for (Partition _iter742 : struct.success)
+            for (Partition _iter758 : struct.success)
             {
-              _iter742.write(oprot);
+              _iter758.write(oprot);
             }
           }
         }
@@ -67628,19 +69179,19 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_resu
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           {
-            org.apache.thrift.protocol.TList _list743 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
-            struct.success = new ArrayList<Partition>(_list743.size);
-            for (int _i744 = 0; _i744 < _list743.size; ++_i744)
+            org.apache.thrift.protocol.TList _list759 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
+            struct.success = new ArrayList<Partition>(_list759.size);
+            for (int _i760 = 0; _i760 < _list759.size; ++_i760)
             {
-              Partition _elem745; // required
-              _elem745 = new Partition();
-              _elem745.read(iprot);
-              struct.success.add(_elem745);
+              Partition _elem761; // required
+              _elem761 = new Partition();
+              _elem761.read(iprot);
+              struct.success.add(_elem761);
             }
           }
           struct.setSuccessIsSet(true);
@@ -67660,34 +69211,28 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_resul
 
   }
 
-  public static class get_partitions_with_auth_args implements org.apache.thrift.TBase<get_partitions_with_auth_args, get_partitions_with_auth_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_with_auth_args");
+  public static class get_partitions_pspec_args implements org.apache.thrift.TBase<get_partitions_pspec_args, get_partitions_pspec_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_pspec_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
-    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)3);
-    private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("user_name", org.apache.thrift.protocol.TType.STRING, (short)4);
-    private static final org.apache.thrift.protocol.TField GROUP_NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("group_names", org.apache.thrift.protocol.TType.LIST, (short)5);
+    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I32, (short)3);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_with_auth_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_with_auth_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_pspec_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_pspec_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
-    private short max_parts; // required
-    private String user_name; // required
-    private List<String> group_names; // required
+    private int max_parts; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
-      MAX_PARTS((short)3, "max_parts"),
-      USER_NAME((short)4, "user_name"),
-      GROUP_NAMES((short)5, "group_names");
+      MAX_PARTS((short)3, "max_parts");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -67708,10 +69253,6 @@ public static _Fields findByThriftId(int fieldId) {
             return TBL_NAME;
           case 3: // MAX_PARTS
             return MAX_PARTS;
-          case 4: // USER_NAME
-            return USER_NAME;
-          case 5: // GROUP_NAMES
-            return GROUP_NAMES;
           default:
             return null;
         }
@@ -67762,41 +69303,32 @@ public String getFieldName() {
       tmpMap.put(_Fields.TBL_NAME, new org.apache.thrift.meta_data.FieldMetaData("tbl_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
-      tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("user_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
-      tmpMap.put(_Fields.GROUP_NAMES, new org.apache.thrift.meta_data.FieldMetaData("group_names", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_with_auth_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_pspec_args.class, metaDataMap);
     }
 
-    public get_partitions_with_auth_args() {
-      this.max_parts = (short)-1;
+    public get_partitions_pspec_args() {
+      this.max_parts = -1;
 
     }
 
-    public get_partitions_with_auth_args(
+    public get_partitions_pspec_args(
       String db_name,
       String tbl_name,
-      short max_parts,
-      String user_name,
-      List<String> group_names)
+      int max_parts)
     {
       this();
       this.db_name = db_name;
       this.tbl_name = tbl_name;
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
-      this.user_name = user_name;
-      this.group_names = group_names;
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_with_auth_args(get_partitions_with_auth_args other) {
+    public get_partitions_pspec_args(get_partitions_pspec_args other) {
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
@@ -67805,30 +69337,18 @@ public get_partitions_with_auth_args(get_partitions_with_auth_args other) {
         this.tbl_name = other.tbl_name;
       }
       this.max_parts = other.max_parts;
-      if (other.isSetUser_name()) {
-        this.user_name = other.user_name;
-      }
-      if (other.isSetGroup_names()) {
-        List<String> __this__group_names = new ArrayList<String>();
-        for (String other_element : other.group_names) {
-          __this__group_names.add(other_element);
-        }
-        this.group_names = __this__group_names;
-      }
     }
 
-    public get_partitions_with_auth_args deepCopy() {
-      return new get_partitions_with_auth_args(this);
+    public get_partitions_pspec_args deepCopy() {
+      return new get_partitions_pspec_args(this);
     }
 
     @Override
     public void clear() {
       this.db_name = null;
       this.tbl_name = null;
-      this.max_parts = (short)-1;
+      this.max_parts = -1;
 
-      this.user_name = null;
-      this.group_names = null;
     }
 
     public String getDb_name() {
@@ -67877,11 +69397,11 @@ public void setTbl_nameIsSet(boolean value) {
       }
     }
 
-    public short getMax_parts() {
+    public int getMax_parts() {
       return this.max_parts;
     }
 
-    public void setMax_parts(short max_parts) {
+    public void setMax_parts(int max_parts) {
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
     }
@@ -67899,67 +69419,6 @@ public void setMax_partsIsSet(boolean value) {
       __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_PARTS_ISSET_ID, value);
     }
 
-    public String getUser_name() {
-      return this.user_name;
-    }
-
-    public void setUser_name(String user_name) {
-      this.user_name = user_name;
-    }
-
-    public void unsetUser_name() {
-      this.user_name = null;
-    }
-
-    /** Returns true if field user_name is set (has been assigned a value) and false otherwise */
-    public boolean isSetUser_name() {
-      return this.user_name != null;
-    }
-
-    public void setUser_nameIsSet(boolean value) {
-      if (!value) {
-        this.user_name = null;
-      }
-    }
-
-    public int getGroup_namesSize() {
-      return (this.group_names == null) ? 0 : this.group_names.size();
-    }
-
-    public java.util.Iterator<String> getGroup_namesIterator() {
-      return (this.group_names == null) ? null : this.group_names.iterator();
-    }
-
-    public void addToGroup_names(String elem) {
-      if (this.group_names == null) {
-        this.group_names = new ArrayList<String>();
-      }
-      this.group_names.add(elem);
-    }
-
-    public List<String> getGroup_names() {
-      return this.group_names;
-    }
-
-    public void setGroup_names(List<String> group_names) {
-      this.group_names = group_names;
-    }
-
-    public void unsetGroup_names() {
-      this.group_names = null;
-    }
-
-    /** Returns true if field group_names is set (has been assigned a value) and false otherwise */
-    public boolean isSetGroup_names() {
-      return this.group_names != null;
-    }
-
-    public void setGroup_namesIsSet(boolean value) {
-      if (!value) {
-        this.group_names = null;
-      }
-    }
-
     public void setFieldValue(_Fields field, Object value) {
       switch (field) {
       case DB_NAME:
@@ -67982,23 +69441,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetMax_parts();
         } else {
-          setMax_parts((Short)value);
-        }
-        break;
-
-      case USER_NAME:
-        if (value == null) {
-          unsetUser_name();
-        } else {
-          setUser_name((String)value);
-        }
-        break;
-
-      case GROUP_NAMES:
-        if (value == null) {
-          unsetGroup_names();
-        } else {
-          setGroup_names((List<String>)value);
+          setMax_parts((Integer)value);
         }
         break;
 
@@ -68014,13 +69457,7 @@ public Object getFieldValue(_Fields field) {
         return getTbl_name();
 
       case MAX_PARTS:
-        return Short.valueOf(getMax_parts());
-
-      case USER_NAME:
-        return getUser_name();
-
-      case GROUP_NAMES:
-        return getGroup_names();
+        return Integer.valueOf(getMax_parts());
 
       }
       throw new IllegalStateException();
@@ -68039,10 +69476,6 @@ public boolean isSet(_Fields field) {
         return isSetTbl_name();
       case MAX_PARTS:
         return isSetMax_parts();
-      case USER_NAME:
-        return isSetUser_name();
-      case GROUP_NAMES:
-        return isSetGroup_names();
       }
       throw new IllegalStateException();
     }
@@ -68051,12 +69484,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_with_auth_args)
-        return this.equals((get_partitions_with_auth_args)that);
+      if (that instanceof get_partitions_pspec_args)
+        return this.equals((get_partitions_pspec_args)that);
       return false;
     }
 
-    public boolean equals(get_partitions_with_auth_args that) {
+    public boolean equals(get_partitions_pspec_args that) {
       if (that == null)
         return false;
 
@@ -68087,24 +69520,6 @@ public boolean equals(get_partitions_with_auth_args that) {
           return false;
       }
 
-      boolean this_present_user_name = true && this.isSetUser_name();
-      boolean that_present_user_name = true && that.isSetUser_name();
-      if (this_present_user_name || that_present_user_name) {
-        if (!(this_present_user_name && that_present_user_name))
-          return false;
-        if (!this.user_name.equals(that.user_name))
-          return false;
-      }
-
-      boolean this_present_group_names = true && this.isSetGroup_names();
-      boolean that_present_group_names = true && that.isSetGroup_names();
-      if (this_present_group_names || that_present_group_names) {
-        if (!(this_present_group_names && that_present_group_names))
-          return false;
-        if (!this.group_names.equals(that.group_names))
-          return false;
-      }
-
       return true;
     }
 
@@ -68127,26 +69542,16 @@ public int hashCode() {
       if (present_max_parts)
         builder.append(max_parts);
 
-      boolean present_user_name = true && (isSetUser_name());
-      builder.append(present_user_name);
-      if (present_user_name)
-        builder.append(user_name);
-
-      boolean present_group_names = true && (isSetGroup_names());
-      builder.append(present_group_names);
-      if (present_group_names)
-        builder.append(group_names);
-
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_with_auth_args other) {
+    public int compareTo(get_partitions_pspec_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_with_auth_args typedOther = (get_partitions_with_auth_args)other;
+      get_partitions_pspec_args typedOther = (get_partitions_pspec_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -68178,26 +69583,6 @@ public int compareTo(get_partitions_with_auth_args other) {
           return lastComparison;
         }
       }
-      lastComparison = Boolean.valueOf(isSetUser_name()).compareTo(typedOther.isSetUser_name());
-      if (lastComparison != 0) {
-        return lastComparison;
-      }
-      if (isSetUser_name()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_name, typedOther.user_name);
-        if (lastComparison != 0) {
-          return lastComparison;
-        }
-      }
-      lastComparison = Boolean.valueOf(isSetGroup_names()).compareTo(typedOther.isSetGroup_names());
-      if (lastComparison != 0) {
-        return lastComparison;
-      }
-      if (isSetGroup_names()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.group_names, typedOther.group_names);
-        if (lastComparison != 0) {
-          return lastComparison;
-        }
-      }
       return 0;
     }
 
@@ -68215,7 +69600,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_with_auth_args(");
+      StringBuilder sb = new StringBuilder("get_partitions_pspec_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -68237,22 +69622,6 @@ public String toString() {
       sb.append("max_parts:");
       sb.append(this.max_parts);
       first = false;
-      if (!first) sb.append(", ");
-      sb.append("user_name:");
-      if (this.user_name == null) {
-        sb.append("null");
-      } else {
-        sb.append(this.user_name);
-      }
-      first = false;
-      if (!first) sb.append(", ");
-      sb.append("group_names:");
-      if (this.group_names == null) {
-        sb.append("null");
-      } else {
-        sb.append(this.group_names);
-      }
-      first = false;
       sb.append(")");
       return sb.toString();
     }
@@ -68280,15 +69649,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_with_auth_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_with_auth_argsStandardScheme getScheme() {
-        return new get_partitions_with_auth_argsStandardScheme();
+    private static class get_partitions_pspec_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_pspec_argsStandardScheme getScheme() {
+        return new get_partitions_pspec_argsStandardScheme();
       }
     }
 
-    private static class get_partitions_with_auth_argsStandardScheme extends StandardScheme<get_partitions_with_auth_args> {
+    private static class get_partitions_pspec_argsStandardScheme extends StandardScheme<get_partitions_pspec_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -68315,39 +69684,13 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with
               }
               break;
             case 3: // MAX_PARTS
-              if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
-                struct.max_parts = iprot.readI16();
+              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
+                struct.max_parts = iprot.readI32();
                 struct.setMax_partsIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 4: // USER_NAME
-              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
-                struct.user_name = iprot.readString();
-                struct.setUser_nameIsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
-            case 5: // GROUP_NAMES
-              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
-                {
-                  org.apache.thrift.protocol.TList _list746 = iprot.readListBegin();
-                  struct.group_names = new ArrayList<String>(_list746.size);
-                  for (int _i747 = 0; _i747 < _list746.size; ++_i747)
-                  {
-                    String _elem748; // required
-                    _elem748 = iprot.readString();
-                    struct.group_names.add(_elem748);
-                  }
-                  iprot.readListEnd();
-                }
-                struct.setGroup_namesIsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
             default:
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
           }
@@ -68357,7 +69700,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -68372,41 +69715,24 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_wit
           oprot.writeFieldEnd();
         }
         oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
-        oprot.writeI16(struct.max_parts);
+        oprot.writeI32(struct.max_parts);
         oprot.writeFieldEnd();
-        if (struct.user_name != null) {
-          oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
-          oprot.writeString(struct.user_name);
-          oprot.writeFieldEnd();
-        }
-        if (struct.group_names != null) {
-          oprot.writeFieldBegin(GROUP_NAMES_FIELD_DESC);
-          {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.group_names.size()));
-            for (String _iter749 : struct.group_names)
-            {
-              oprot.writeString(_iter749);
-            }
-            oprot.writeListEnd();
-          }
-          oprot.writeFieldEnd();
-        }
         oprot.writeFieldStop();
         oprot.writeStructEnd();
       }
 
     }
 
-    private static class get_partitions_with_auth_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_with_auth_argsTupleScheme getScheme() {
-        return new get_partitions_with_auth_argsTupleScheme();
+    private static class get_partitions_pspec_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_pspec_argsTupleScheme getScheme() {
+        return new get_partitions_pspec_argsTupleScheme();
       }
     }
 
-    private static class get_partitions_with_auth_argsTupleScheme extends TupleScheme<get_partitions_with_auth_args> {
+    private static class get_partitions_pspec_argsTupleScheme extends TupleScheme<get_partitions_pspec_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -68418,13 +69744,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with
         if (struct.isSetMax_parts()) {
           optionals.set(2);
         }
-        if (struct.isSetUser_name()) {
-          optionals.set(3);
-        }
-        if (struct.isSetGroup_names()) {
-          optionals.set(4);
-        }
-        oprot.writeBitSet(optionals, 5);
+        oprot.writeBitSet(optionals, 3);
         if (struct.isSetDb_name()) {
           oprot.writeString(struct.db_name);
         }
@@ -68432,26 +69752,14 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with
           oprot.writeString(struct.tbl_name);
         }
         if (struct.isSetMax_parts()) {
-          oprot.writeI16(struct.max_parts);
-        }
-        if (struct.isSetUser_name()) {
-          oprot.writeString(struct.user_name);
-        }
-        if (struct.isSetGroup_names()) {
-          {
-            oprot.writeI32(struct.group_names.size());
-            for (String _iter750 : struct.group_names)
-            {
-              oprot.writeString(_iter750);
-            }
-          }
+          oprot.writeI32(struct.max_parts);
         }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(5);
+        BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           struct.db_name = iprot.readString();
           struct.setDb_nameIsSet(true);
@@ -68461,33 +69769,16 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_
           struct.setTbl_nameIsSet(true);
         }
         if (incoming.get(2)) {
-          struct.max_parts = iprot.readI16();
+          struct.max_parts = iprot.readI32();
           struct.setMax_partsIsSet(true);
         }
-        if (incoming.get(3)) {
-          struct.user_name = iprot.readString();
-          struct.setUser_nameIsSet(true);
-        }
-        if (incoming.get(4)) {
-          {
-            org.apache.thrift.protocol.TList _list751 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.group_names = new ArrayList<String>(_list751.size);
-            for (int _i752 = 0; _i752 < _list751.size; ++_i752)
-            {
-              String _elem753; // required
-              _elem753 = iprot.readString();
-              struct.group_names.add(_elem753);
-            }
-          }
-          struct.setGroup_namesIsSet(true);
-        }
       }
     }
 
   }
 
-  public static class get_partitions_with_auth_result implements org.apache.thrift.TBase<get_partitions_with_auth_result, get_partitions_with_auth_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_with_auth_result");
+  public static class get_partitions_pspec_result implements org.apache.thrift.TBase<get_partitions_pspec_result, get_partitions_pspec_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_pspec_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -68495,11 +69786,11 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_with_auth_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_with_auth_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_pspec_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_pspec_resultTupleSchemeFactory());
     }
 
-    private List<Partition> success; // required
+    private List<PartitionSpec> success; // required
     private NoSuchObjectException o1; // required
     private MetaException o2; // required
 
@@ -68573,20 +69864,20 @@ public String getFieldName() {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));
+              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PartitionSpec.class))));
       tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_with_auth_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_pspec_result.class, metaDataMap);
     }
 
-    public get_partitions_with_auth_result() {
+    public get_partitions_pspec_result() {
     }
 
-    public get_partitions_with_auth_result(
-      List<Partition> success,
+    public get_partitions_pspec_result(
+      List<PartitionSpec> success,
       NoSuchObjectException o1,
       MetaException o2)
     {
@@ -68599,11 +69890,11 @@ public get_partitions_with_auth_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_with_auth_result(get_partitions_with_auth_result other) {
+    public get_partitions_pspec_result(get_partitions_pspec_result other) {
       if (other.isSetSuccess()) {
-        List<Partition> __this__success = new ArrayList<Partition>();
-        for (Partition other_element : other.success) {
-          __this__success.add(new Partition(other_element));
+        List<PartitionSpec> __this__success = new ArrayList<PartitionSpec>();
+        for (PartitionSpec other_element : other.success) {
+          __this__success.add(new PartitionSpec(other_element));
         }
         this.success = __this__success;
       }
@@ -68615,8 +69906,8 @@ public get_partitions_with_auth_result(get_partitions_with_auth_result other) {
       }
     }
 
-    public get_partitions_with_auth_result deepCopy() {
-      return new get_partitions_with_auth_result(this);
+    public get_partitions_pspec_result deepCopy() {
+      return new get_partitions_pspec_result(this);
     }
 
     @Override
@@ -68630,22 +69921,22 @@ public int getSuccessSize() {
       return (this.success == null) ? 0 : this.success.size();
     }
 
-    public java.util.Iterator<Partition> getSuccessIterator() {
+    public java.util.Iterator<PartitionSpec> getSuccessIterator() {
       return (this.success == null) ? null : this.success.iterator();
     }
 
-    public void addToSuccess(Partition elem) {
+    public void addToSuccess(PartitionSpec elem) {
       if (this.success == null) {
-        this.success = new ArrayList<Partition>();
+        this.success = new ArrayList<PartitionSpec>();
       }
       this.success.add(elem);
     }
 
-    public List<Partition> getSuccess() {
+    public List<PartitionSpec> getSuccess() {
       return this.success;
     }
 
-    public void setSuccess(List<Partition> success) {
+    public void setSuccess(List<PartitionSpec> success) {
       this.success = success;
     }
 
@@ -68716,7 +70007,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetSuccess();
         } else {
-          setSuccess((List<Partition>)value);
+          setSuccess((List<PartitionSpec>)value);
         }
         break;
 
@@ -68775,12 +70066,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_with_auth_result)
-        return this.equals((get_partitions_with_auth_result)that);
+      if (that instanceof get_partitions_pspec_result)
+        return this.equals((get_partitions_pspec_result)that);
       return false;
     }
 
-    public boolean equals(get_partitions_with_auth_result that) {
+    public boolean equals(get_partitions_pspec_result that) {
       if (that == null)
         return false;
 
@@ -68836,13 +70127,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_with_auth_result other) {
+    public int compareTo(get_partitions_pspec_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_with_auth_result typedOther = (get_partitions_with_auth_result)other;
+      get_partitions_pspec_result typedOther = (get_partitions_pspec_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -68891,7 +70182,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_with_auth_result(");
+      StringBuilder sb = new StringBuilder("get_partitions_pspec_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -68942,15 +70233,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_with_auth_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_with_auth_resultStandardScheme getScheme() {
-        return new get_partitions_with_auth_resultStandardScheme();
+    private static class get_partitions_pspec_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_pspec_resultStandardScheme getScheme() {
+        return new get_partitions_pspec_resultStandardScheme();
       }
     }
 
-    private static class get_partitions_with_auth_resultStandardScheme extends StandardScheme<get_partitions_with_auth_result> {
+    private static class get_partitions_pspec_resultStandardScheme extends StandardScheme<get_partitions_pspec_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -68963,14 +70254,14 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list754 = iprot.readListBegin();
-                  struct.success = new ArrayList<Partition>(_list754.size);
-                  for (int _i755 = 0; _i755 < _list754.size; ++_i755)
+                  org.apache.thrift.protocol.TList _list762 = iprot.readListBegin();
+                  struct.success = new ArrayList<PartitionSpec>(_list762.size);
+                  for (int _i763 = 0; _i763 < _list762.size; ++_i763)
                   {
-                    Partition _elem756; // required
-                    _elem756 = new Partition();
-                    _elem756.read(iprot);
-                    struct.success.add(_elem756);
+                    PartitionSpec _elem764; // required
+                    _elem764 = new PartitionSpec();
+                    _elem764.read(iprot);
+                    struct.success.add(_elem764);
                   }
                   iprot.readListEnd();
                 }
@@ -69006,7 +70297,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_with
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -69014,9 +70305,9 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_wit
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
           {
             oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
-            for (Partition _iter757 : struct.success)
+            for (PartitionSpec _iter765 : struct.success)
             {
-              _iter757.write(oprot);
+              _iter765.write(oprot);
             }
             oprot.writeListEnd();
           }
@@ -69038,16 +70329,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_wit
 
     }
 
-    private static class get_partitions_with_auth_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_with_auth_resultTupleScheme getScheme() {
-        return new get_partitions_with_auth_resultTupleScheme();
+    private static class get_partitions_pspec_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_pspec_resultTupleScheme getScheme() {
+        return new get_partitions_pspec_resultTupleScheme();
       }
     }
 
-    private static class get_partitions_with_auth_resultTupleScheme extends TupleScheme<get_partitions_with_auth_result> {
+    private static class get_partitions_pspec_resultTupleScheme extends TupleScheme<get_partitions_pspec_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -69063,9 +70354,9 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with
         if (struct.isSetSuccess()) {
           {
             oprot.writeI32(struct.success.size());
-            for (Partition _iter758 : struct.success)
+            for (PartitionSpec _iter766 : struct.success)
             {
-              _iter758.write(oprot);
+              _iter766.write(oprot);
             }
           }
         }
@@ -69078,19 +70369,19 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_with
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_auth_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           {
-            org.apache.thrift.protocol.TList _list759 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
-            struct.success = new ArrayList<Partition>(_list759.size);
-            for (int _i760 = 0; _i760 < _list759.size; ++_i760)
+            org.apache.thrift.protocol.TList _list767 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
+            struct.success = new ArrayList<PartitionSpec>(_list767.size);
+            for (int _i768 = 0; _i768 < _list767.size; ++_i768)
             {
-              Partition _elem761; // required
-              _elem761 = new Partition();
-              _elem761.read(iprot);
-              struct.success.add(_elem761);
+              PartitionSpec _elem769; // required
+              _elem769 = new PartitionSpec();
+              _elem769.read(iprot);
+              struct.success.add(_elem769);
             }
           }
           struct.setSuccessIsSet(true);
@@ -69110,22 +70401,22 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_with_
 
   }
 
-  public static class get_partitions_pspec_args implements org.apache.thrift.TBase<get_partitions_pspec_args, get_partitions_pspec_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_pspec_args");
+  public static class get_partition_names_args implements org.apache.thrift.TBase<get_partition_names_args, get_partition_names_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
-    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I32, (short)3);
+    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)3);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_pspec_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_pspec_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partition_names_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partition_names_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
-    private int max_parts; // required
+    private short max_parts; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
@@ -69202,20 +70493,20 @@ public String getFieldName() {
       tmpMap.put(_Fields.TBL_NAME, new org.apache.thrift.meta_data.FieldMetaData("tbl_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_pspec_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_args.class, metaDataMap);
     }
 
-    public get_partitions_pspec_args() {
-      this.max_parts = -1;
+    public get_partition_names_args() {
+      this.max_parts = (short)-1;
 
     }
 
-    public get_partitions_pspec_args(
+    public get_partition_names_args(
       String db_name,
       String tbl_name,
-      int max_parts)
+      short max_parts)
     {
       this();
       this.db_name = db_name;
@@ -69227,7 +70518,7 @@ public get_partitions_pspec_args(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_pspec_args(get_partitions_pspec_args other) {
+    public get_partition_names_args(get_partition_names_args other) {
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
@@ -69238,15 +70529,15 @@ public get_partitions_pspec_args(get_partitions_pspec_args other) {
       this.max_parts = other.max_parts;
     }
 
-    public get_partitions_pspec_args deepCopy() {
-      return new get_partitions_pspec_args(this);
+    public get_partition_names_args deepCopy() {
+      return new get_partition_names_args(this);
     }
 
     @Override
     public void clear() {
       this.db_name = null;
       this.tbl_name = null;
-      this.max_parts = -1;
+      this.max_parts = (short)-1;
 
     }
 
@@ -69296,11 +70587,11 @@ public void setTbl_nameIsSet(boolean value) {
       }
     }
 
-    public int getMax_parts() {
+    public short getMax_parts() {
       return this.max_parts;
     }
 
-    public void setMax_parts(int max_parts) {
+    public void setMax_parts(short max_parts) {
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
     }
@@ -69340,7 +70631,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetMax_parts();
         } else {
-          setMax_parts((Integer)value);
+          setMax_parts((Short)value);
         }
         break;
 
@@ -69356,7 +70647,7 @@ public Object getFieldValue(_Fields field) {
         return getTbl_name();
 
       case MAX_PARTS:
-        return Integer.valueOf(getMax_parts());
+        return Short.valueOf(getMax_parts());
 
       }
       throw new IllegalStateException();
@@ -69383,12 +70674,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_pspec_args)
-        return this.equals((get_partitions_pspec_args)that);
+      if (that instanceof get_partition_names_args)
+        return this.equals((get_partition_names_args)that);
       return false;
     }
 
-    public boolean equals(get_partitions_pspec_args that) {
+    public boolean equals(get_partition_names_args that) {
       if (that == null)
         return false;
 
@@ -69444,13 +70735,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_pspec_args other) {
+    public int compareTo(get_partition_names_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_pspec_args typedOther = (get_partitions_pspec_args)other;
+      get_partition_names_args typedOther = (get_partition_names_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -69499,7 +70790,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_pspec_args(");
+      StringBuilder sb = new StringBuilder("get_partition_names_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -69548,15 +70839,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_pspec_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_pspec_argsStandardScheme getScheme() {
-        return new get_partitions_pspec_argsStandardScheme();
+    private static class get_partition_names_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partition_names_argsStandardScheme getScheme() {
+        return new get_partition_names_argsStandardScheme();
       }
     }
 
-    private static class get_partitions_pspec_argsStandardScheme extends StandardScheme<get_partitions_pspec_args> {
+    private static class get_partition_names_argsStandardScheme extends StandardScheme<get_partition_names_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -69583,8 +70874,8 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspe
               }
               break;
             case 3: // MAX_PARTS
-              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
-                struct.max_parts = iprot.readI32();
+              if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
+                struct.max_parts = iprot.readI16();
                 struct.setMax_partsIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -69599,7 +70890,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspe
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -69614,7 +70905,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_psp
           oprot.writeFieldEnd();
         }
         oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
-        oprot.writeI32(struct.max_parts);
+        oprot.writeI16(struct.max_parts);
         oprot.writeFieldEnd();
         oprot.writeFieldStop();
         oprot.writeStructEnd();
@@ -69622,16 +70913,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_psp
 
     }
 
-    private static class get_partitions_pspec_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_pspec_argsTupleScheme getScheme() {
-        return new get_partitions_pspec_argsTupleScheme();
+    private static class get_partition_names_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partition_names_argsTupleScheme getScheme() {
+        return new get_partition_names_argsTupleScheme();
       }
     }
 
-    private static class get_partitions_pspec_argsTupleScheme extends TupleScheme<get_partitions_pspec_args> {
+    private static class get_partition_names_argsTupleScheme extends TupleScheme<get_partition_names_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -69651,12 +70942,12 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspe
           oprot.writeString(struct.tbl_name);
         }
         if (struct.isSetMax_parts()) {
-          oprot.writeI32(struct.max_parts);
+          oprot.writeI16(struct.max_parts);
         }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
@@ -69668,7 +70959,7 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec
           struct.setTbl_nameIsSet(true);
         }
         if (incoming.get(2)) {
-          struct.max_parts = iprot.readI32();
+          struct.max_parts = iprot.readI16();
           struct.setMax_partsIsSet(true);
         }
       }
@@ -69676,28 +70967,25 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec
 
   }
 
-  public static class get_partitions_pspec_result implements org.apache.thrift.TBase<get_partitions_pspec_result, get_partitions_pspec_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_pspec_result");
+  public static class get_partition_names_result implements org.apache.thrift.TBase<get_partition_names_result, get_partition_names_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
-    private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
-    private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField("o2", org.apache.thrift.protocol.TType.STRUCT, (short)2);
+    private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField("o2", org.apache.thrift.protocol.TType.STRUCT, (short)1);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_pspec_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_pspec_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partition_names_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partition_names_resultTupleSchemeFactory());
     }
 
-    private List<PartitionSpec> success; // required
-    private NoSuchObjectException o1; // required
+    private List<String> success; // required
     private MetaException o2; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       SUCCESS((short)0, "success"),
-      O1((short)1, "o1"),
-      O2((short)2, "o2");
+      O2((short)1, "o2");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -69714,9 +71002,7 @@ public static _Fields findByThriftId(int fieldId) {
         switch(fieldId) {
           case 0: // SUCCESS
             return SUCCESS;
-          case 1: // O1
-            return O1;
-          case 2: // O2
+          case 1: // O2
             return O2;
           default:
             return null;
@@ -69763,56 +71049,48 @@ public String getFieldName() {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PartitionSpec.class))));
-      tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
+              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_pspec_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_result.class, metaDataMap);
     }
 
-    public get_partitions_pspec_result() {
+    public get_partition_names_result() {
     }
 
-    public get_partitions_pspec_result(
-      List<PartitionSpec> success,
-      NoSuchObjectException o1,
+    public get_partition_names_result(
+      List<String> success,
       MetaException o2)
     {
       this();
       this.success = success;
-      this.o1 = o1;
       this.o2 = o2;
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_pspec_result(get_partitions_pspec_result other) {
+    public get_partition_names_result(get_partition_names_result other) {
       if (other.isSetSuccess()) {
-        List<PartitionSpec> __this__success = new ArrayList<PartitionSpec>();
-        for (PartitionSpec other_element : other.success) {
-          __this__success.add(new PartitionSpec(other_element));
+        List<String> __this__success = new ArrayList<String>();
+        for (String other_element : other.success) {
+          __this__success.add(other_element);
         }
         this.success = __this__success;
       }
-      if (other.isSetO1()) {
-        this.o1 = new NoSuchObjectException(other.o1);
-      }
       if (other.isSetO2()) {
         this.o2 = new MetaException(other.o2);
       }
     }
 
-    public get_partitions_pspec_result deepCopy() {
-      return new get_partitions_pspec_result(this);
+    public get_partition_names_result deepCopy() {
+      return new get_partition_names_result(this);
     }
 
     @Override
     public void clear() {
       this.success = null;
-      this.o1 = null;
       this.o2 = null;
     }
 
@@ -69820,22 +71098,22 @@ public int getSuccessSize() {
       return (this.success == null) ? 0 : this.success.size();
     }
 
-    public java.util.Iterator<PartitionSpec> getSuccessIterator() {
+    public java.util.Iterator<String> getSuccessIterator() {
       return (this.success == null) ? null : this.success.iterator();
     }
 
-    public void addToSuccess(PartitionSpec elem) {
+    public void addToSuccess(String elem) {
       if (this.success == null) {
-        this.success = new ArrayList<PartitionSpec>();
+        this.success = new ArrayList<String>();
       }
       this.success.add(elem);
     }
 
-    public List<PartitionSpec> getSuccess() {
+    public List<String> getSuccess() {
       return this.success;
     }
 
-    public void setSuccess(List<PartitionSpec> success) {
+    public void setSuccess(List<String> success) {
       this.success = success;
     }
 
@@ -69854,29 +71132,6 @@ public void setSuccessIsSet(boolean value) {
       }
     }
 
-    public NoSuchObjectException getO1() {
-      return this.o1;
-    }
-
-    public void setO1(NoSuchObjectException o1) {
-      this.o1 = o1;
-    }
-
-    public void unsetO1() {
-      this.o1 = null;
-    }
-
-    /** Returns true if field o1 is set (has been assigned a value) and false otherwise */
-    public boolean isSetO1() {
-      return this.o1 != null;
-    }
-
-    public void setO1IsSet(boolean value) {
-      if (!value) {
-        this.o1 = null;
-      }
-    }
-
     public MetaException getO2() {
       return this.o2;
     }
@@ -69906,15 +71161,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetSuccess();
         } else {
-          setSuccess((List<PartitionSpec>)value);
-        }
-        break;
-
-      case O1:
-        if (value == null) {
-          unsetO1();
-        } else {
-          setO1((NoSuchObjectException)value);
+          setSuccess((List<String>)value);
         }
         break;
 
@@ -69934,9 +71181,6 @@ public Object getFieldValue(_Fields field) {
       case SUCCESS:
         return getSuccess();
 
-      case O1:
-        return getO1();
-
       case O2:
         return getO2();
 
@@ -69953,8 +71197,6 @@ public boolean isSet(_Fields field) {
       switch (field) {
       case SUCCESS:
         return isSetSuccess();
-      case O1:
-        return isSetO1();
       case O2:
         return isSetO2();
       }
@@ -69965,12 +71207,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_pspec_result)
-        return this.equals((get_partitions_pspec_result)that);
+      if (that instanceof get_partition_names_result)
+        return this.equals((get_partition_names_result)that);
       return false;
     }
 
-    public boolean equals(get_partitions_pspec_result that) {
+    public boolean equals(get_partition_names_result that) {
       if (that == null)
         return false;
 
@@ -69983,15 +71225,6 @@ public boolean equals(get_partitions_pspec_result that) {
           return false;
       }
 
-      boolean this_present_o1 = true && this.isSetO1();
-      boolean that_present_o1 = true && that.isSetO1();
-      if (this_present_o1 || that_present_o1) {
-        if (!(this_present_o1 && that_present_o1))
-          return false;
-        if (!this.o1.equals(that.o1))
-          return false;
-      }
-
       boolean this_present_o2 = true && this.isSetO2();
       boolean that_present_o2 = true && that.isSetO2();
       if (this_present_o2 || that_present_o2) {
@@ -70013,11 +71246,6 @@ public int hashCode() {
       if (present_success)
         builder.append(success);
 
-      boolean present_o1 = true && (isSetO1());
-      builder.append(present_o1);
-      if (present_o1)
-        builder.append(o1);
-
       boolean present_o2 = true && (isSetO2());
       builder.append(present_o2);
       if (present_o2)
@@ -70026,13 +71254,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_pspec_result other) {
+    public int compareTo(get_partition_names_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_pspec_result typedOther = (get_partitions_pspec_result)other;
+      get_partition_names_result typedOther = (get_partition_names_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -70044,16 +71272,6 @@ public int compareTo(get_partitions_pspec_result other) {
           return lastComparison;
         }
       }
-      lastComparison = Boolean.valueOf(isSetO1()).compareTo(typedOther.isSetO1());
-      if (lastComparison != 0) {
-        return lastComparison;
-      }
-      if (isSetO1()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.o1, typedOther.o1);
-        if (lastComparison != 0) {
-          return lastComparison;
-        }
-      }
       lastComparison = Boolean.valueOf(isSetO2()).compareTo(typedOther.isSetO2());
       if (lastComparison != 0) {
         return lastComparison;
@@ -70081,7 +71299,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_pspec_result(");
+      StringBuilder sb = new StringBuilder("get_partition_names_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -70092,14 +71310,6 @@ public String toString() {
       }
       first = false;
       if (!first) sb.append(", ");
-      sb.append("o1:");
-      if (this.o1 == null) {
-        sb.append("null");
-      } else {
-        sb.append(this.o1);
-      }
-      first = false;
-      if (!first) sb.append(", ");
       sb.append("o2:");
       if (this.o2 == null) {
         sb.append("null");
@@ -70132,15 +71342,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_pspec_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_pspec_resultStandardScheme getScheme() {
-        return new get_partitions_pspec_resultStandardScheme();
+    private static class get_partition_names_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partition_names_resultStandardScheme getScheme() {
+        return new get_partition_names_resultStandardScheme();
       }
     }
 
-    private static class get_partitions_pspec_resultStandardScheme extends StandardScheme<get_partitions_pspec_result> {
+    private static class get_partition_names_resultStandardScheme extends StandardScheme<get_partition_names_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -70153,14 +71363,13 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspe
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list762 = iprot.readListBegin();
-                  struct.success = new ArrayList<PartitionSpec>(_list762.size);
-                  for (int _i763 = 0; _i763 < _list762.size; ++_i763)
+                  org.apache.thrift.protocol.TList _list770 = iprot.readListBegin();
+                  struct.success = new ArrayList<String>(_list770.size);
+                  for (int _i771 = 0; _i771 < _list770.size; ++_i771)
                   {
-                    PartitionSpec _elem764; // required
-                    _elem764 = new PartitionSpec();
-                    _elem764.read(iprot);
-                    struct.success.add(_elem764);
+                    String _elem772; // required
+                    _elem772 = iprot.readString();
+                    struct.success.add(_elem772);
                   }
                   iprot.readListEnd();
                 }
@@ -70169,16 +71378,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspe
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 1: // O1
-              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o1 = new NoSuchObjectException();
-                struct.o1.read(iprot);
-                struct.setO1IsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
-            case 2: // O2
+            case 1: // O2
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                 struct.o2 = new MetaException();
                 struct.o2.read(iprot);
@@ -70196,27 +71396,22 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_pspe
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
         if (struct.success != null) {
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
           {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
-            for (PartitionSpec _iter765 : struct.success)
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.success.size()));
+            for (String _iter773 : struct.success)
             {
-              _iter765.write(oprot);
+              oprot.writeString(_iter773);
             }
             oprot.writeListEnd();
           }
           oprot.writeFieldEnd();
         }
-        if (struct.o1 != null) {
-          oprot.writeFieldBegin(O1_FIELD_DESC);
-          struct.o1.write(oprot);
-          oprot.writeFieldEnd();
-        }
         if (struct.o2 != null) {
           oprot.writeFieldBegin(O2_FIELD_DESC);
           struct.o2.write(oprot);
@@ -70228,69 +71423,57 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_psp
 
     }
 
-    private static class get_partitions_pspec_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_pspec_resultTupleScheme getScheme() {
-        return new get_partitions_pspec_resultTupleScheme();
+    private static class get_partition_names_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partition_names_resultTupleScheme getScheme() {
+        return new get_partition_names_resultTupleScheme();
       }
     }
 
-    private static class get_partitions_pspec_resultTupleScheme extends TupleScheme<get_partitions_pspec_result> {
+    private static class get_partition_names_resultTupleScheme extends TupleScheme<get_partition_names_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
           optionals.set(0);
         }
-        if (struct.isSetO1()) {
-          optionals.set(1);
-        }
         if (struct.isSetO2()) {
-          optionals.set(2);
+          optionals.set(1);
         }
-        oprot.writeBitSet(optionals, 3);
+        oprot.writeBitSet(optionals, 2);
         if (struct.isSetSuccess()) {
           {
             oprot.writeI32(struct.success.size());
-            for (PartitionSpec _iter766 : struct.success)
+            for (String _iter774 : struct.success)
             {
-              _iter766.write(oprot);
+              oprot.writeString(_iter774);
             }
           }
         }
-        if (struct.isSetO1()) {
-          struct.o1.write(oprot);
-        }
         if (struct.isSetO2()) {
           struct.o2.write(oprot);
         }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(3);
+        BitSet incoming = iprot.readBitSet(2);
         if (incoming.get(0)) {
           {
-            org.apache.thrift.protocol.TList _list767 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
-            struct.success = new ArrayList<PartitionSpec>(_list767.size);
-            for (int _i768 = 0; _i768 < _list767.size; ++_i768)
+            org.apache.thrift.protocol.TList _list775 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.success = new ArrayList<String>(_list775.size);
+            for (int _i776 = 0; _i776 < _list775.size; ++_i776)
             {
-              PartitionSpec _elem769; // required
-              _elem769 = new PartitionSpec();
-              _elem769.read(iprot);
-              struct.success.add(_elem769);
+              String _elem777; // required
+              _elem777 = iprot.readString();
+              struct.success.add(_elem777);
             }
           }
           struct.setSuccessIsSet(true);
         }
         if (incoming.get(1)) {
-          struct.o1 = new NoSuchObjectException();
-          struct.o1.read(iprot);
-          struct.setO1IsSet(true);
-        }
-        if (incoming.get(2)) {
           struct.o2 = new MetaException();
           struct.o2.read(iprot);
           struct.setO2IsSet(true);
@@ -70300,28 +71483,31 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_pspec
 
   }
 
-  public static class get_partition_names_args implements org.apache.thrift.TBase<get_partition_names_args, get_partition_names_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_args");
+  public static class get_partitions_ps_args implements org.apache.thrift.TBase<get_partitions_ps_args, get_partitions_ps_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
-    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)3);
+    private static final org.apache.thrift.protocol.TField PART_VALS_FIELD_DESC = new org.apache.thrift.protocol.TField("part_vals", org.apache.thrift.protocol.TType.LIST, (short)3);
+    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)4);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partition_names_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partition_names_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_ps_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_ps_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
+    private List<String> part_vals; // required
     private short max_parts; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
-      MAX_PARTS((short)3, "max_parts");
+      PART_VALS((short)3, "part_vals"),
+      MAX_PARTS((short)4, "max_parts");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -70340,7 +71526,9 @@ public static _Fields findByThriftId(int fieldId) {
             return DB_NAME;
           case 2: // TBL_NAME
             return TBL_NAME;
-          case 3: // MAX_PARTS
+          case 3: // PART_VALS
+            return PART_VALS;
+          case 4: // MAX_PARTS
             return MAX_PARTS;
           default:
             return null;
@@ -70391,25 +71579,30 @@ public String getFieldName() {
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.TBL_NAME, new org.apache.thrift.meta_data.FieldMetaData("tbl_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
+      tmpMap.put(_Fields.PART_VALS, new org.apache.thrift.meta_data.FieldMetaData("part_vals", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
+              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_args.class, metaDataMap);
     }
 
-    public get_partition_names_args() {
+    public get_partitions_ps_args() {
       this.max_parts = (short)-1;
 
     }
 
-    public get_partition_names_args(
+    public get_partitions_ps_args(
       String db_name,
       String tbl_name,
+      List<String> part_vals,
       short max_parts)
     {
       this();
       this.db_name = db_name;
       this.tbl_name = tbl_name;
+      this.part_vals = part_vals;
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
     }
@@ -70417,7 +71610,7 @@ public get_partition_names_args(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partition_names_args(get_partition_names_args other) {
+    public get_partitions_ps_args(get_partitions_ps_args other) {
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
@@ -70425,17 +71618,25 @@ public get_partition_names_args(get_partition_names_args other) {
       if (other.isSetTbl_name()) {
         this.tbl_name = other.tbl_name;
       }
+      if (other.isSetPart_vals()) {
+        List<String> __this__part_vals = new ArrayList<String>();
+        for (String other_element : other.part_vals) {
+          __this__part_vals.add(other_element);
+        }
+        this.part_vals = __this__part_vals;
+      }
       this.max_parts = other.max_parts;
     }
 
-    public get_partition_names_args deepCopy() {
-      return new get_partition_names_args(this);
+    public get_partitions_ps_args deepCopy() {
+      return new get_partitions_ps_args(this);
     }
 
     @Override
     public void clear() {
       this.db_name = null;
       this.tbl_name = null;
+      this.part_vals = null;
       this.max_parts = (short)-1;
 
     }
@@ -70486,6 +71687,44 @@ public void setTbl_nameIsSet(boolean value) {
       }
     }
 
+    public int getPart_valsSize() {
+      return (this.part_vals == null) ? 0 : this.part_vals.size();
+    }
+
+    public java.util.Iterator<String> getPart_valsIterator() {
+      return (this.part_vals == null) ? null : this.part_vals.iterator();
+    }
+
+    public void addToPart_vals(String elem) {
+      if (this.part_vals == null) {
+        this.part_vals = new ArrayList<String>();
+      }
+      this.part_vals.add(elem);
+    }
+
+    public List<String> getPart_vals() {
+      return this.part_vals;
+    }
+
+    public void setPart_vals(List<String> part_vals) {
+      this.part_vals = part_vals;
+    }
+
+    public void unsetPart_vals() {
+      this.part_vals = null;
+    }
+
+    /** Returns true if field part_vals is set (has been assigned a value) and false otherwise */
+    public boolean isSetPart_vals() {
+      return this.part_vals != null;
+    }
+
+    public void setPart_valsIsSet(boolean value) {
+      if (!value) {
+        this.part_vals = null;
+      }
+    }
+
     public short getMax_parts() {
       return this.max_parts;
     }
@@ -70526,6 +71765,14 @@ public void setFieldValue(_Fields field, Object value) {
         }
         break;
 
+      case PART_VALS:
+        if (value == null) {
+          unsetPart_vals();
+        } else {
+          setPart_vals((List<String>)value);
+        }
+        break;
+
       case MAX_PARTS:
         if (value == null) {
           unsetMax_parts();
@@ -70545,6 +71792,9 @@ public Object getFieldValue(_Fields field) {
       case TBL_NAME:
         return getTbl_name();
 
+      case PART_VALS:
+        return getPart_vals();
+
       case MAX_PARTS:
         return Short.valueOf(getMax_parts());
 
@@ -70563,6 +71813,8 @@ public boolean isSet(_Fields field) {
         return isSetDb_name();
       case TBL_NAME:
         return isSetTbl_name();
+      case PART_VALS:
+        return isSetPart_vals();
       case MAX_PARTS:
         return isSetMax_parts();
       }
@@ -70573,12 +71825,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partition_names_args)
-        return this.equals((get_partition_names_args)that);
+      if (that instanceof get_partitions_ps_args)
+        return this.equals((get_partitions_ps_args)that);
       return false;
     }
 
-    public boolean equals(get_partition_names_args that) {
+    public boolean equals(get_partitions_ps_args that) {
       if (that == null)
         return false;
 
@@ -70600,6 +71852,15 @@ public boolean equals(get_partition_names_args that) {
           return false;
       }
 
+      boolean this_present_part_vals = true && this.isSetPart_vals();
+      boolean that_present_part_vals = true && that.isSetPart_vals();
+      if (this_present_part_vals || that_present_part_vals) {
+        if (!(this_present_part_vals && that_present_part_vals))
+          return false;
+        if (!this.part_vals.equals(that.part_vals))
+          return false;
+      }
+
       boolean this_present_max_parts = true;
       boolean that_present_max_parts = true;
       if (this_present_max_parts || that_present_max_parts) {
@@ -70626,6 +71887,11 @@ public int hashCode() {
       if (present_tbl_name)
         builder.append(tbl_name);
 
+      boolean present_part_vals = true && (isSetPart_vals());
+      builder.append(present_part_vals);
+      if (present_part_vals)
+        builder.append(part_vals);
+
       boolean present_max_parts = true;
       builder.append(present_max_parts);
       if (present_max_parts)
@@ -70634,13 +71900,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partition_names_args other) {
+    public int compareTo(get_partitions_ps_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partition_names_args typedOther = (get_partition_names_args)other;
+      get_partitions_ps_args typedOther = (get_partitions_ps_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -70662,6 +71928,16 @@ public int compareTo(get_partition_names_args other) {
           return lastComparison;
         }
       }
+      lastComparison = Boolean.valueOf(isSetPart_vals()).compareTo(typedOther.isSetPart_vals());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetPart_vals()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.part_vals, typedOther.part_vals);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
       lastComparison = Boolean.valueOf(isSetMax_parts()).compareTo(typedOther.isSetMax_parts());
       if (lastComparison != 0) {
         return lastComparison;
@@ -70689,7 +71965,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partition_names_args(");
+      StringBuilder sb = new StringBuilder("get_partitions_ps_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -70708,6 +71984,14 @@ public String toString() {
       }
       first = false;
       if (!first) sb.append(", ");
+      sb.append("part_vals:");
+      if (this.part_vals == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.part_vals);
+      }
+      first = false;
+      if (!first) sb.append(", ");
       sb.append("max_parts:");
       sb.append(this.max_parts);
       first = false;
@@ -70738,15 +72022,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partition_names_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partition_names_argsStandardScheme getScheme() {
-        return new get_partition_names_argsStandardScheme();
+    private static class get_partitions_ps_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_argsStandardScheme getScheme() {
+        return new get_partitions_ps_argsStandardScheme();
       }
     }
 
-    private static class get_partition_names_argsStandardScheme extends StandardScheme<get_partition_names_args> {
+    private static class get_partitions_ps_argsStandardScheme extends StandardScheme<get_partitions_ps_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -70772,7 +72056,25 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 3: // MAX_PARTS
+            case 3: // PART_VALS
+              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
+                {
+                  org.apache.thrift.protocol.TList _list778 = iprot.readListBegin();
+                  struct.part_vals = new ArrayList<String>(_list778.size);
+                  for (int _i779 = 0; _i779 < _list778.size; ++_i779)
+                  {
+                    String _elem780; // required
+                    _elem780 = iprot.readString();
+                    struct.part_vals.add(_elem780);
+                  }
+                  iprot.readListEnd();
+                }
+                struct.setPart_valsIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 4: // MAX_PARTS
               if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                 struct.max_parts = iprot.readI16();
                 struct.setMax_partsIsSet(true);
@@ -70789,7 +72091,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -70803,6 +72105,18 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_name
           oprot.writeString(struct.tbl_name);
           oprot.writeFieldEnd();
         }
+        if (struct.part_vals != null) {
+          oprot.writeFieldBegin(PART_VALS_FIELD_DESC);
+          {
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.part_vals.size()));
+            for (String _iter781 : struct.part_vals)
+            {
+              oprot.writeString(_iter781);
+            }
+            oprot.writeListEnd();
+          }
+          oprot.writeFieldEnd();
+        }
         oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
         oprot.writeI16(struct.max_parts);
         oprot.writeFieldEnd();
@@ -70812,16 +72126,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_name
 
     }
 
-    private static class get_partition_names_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partition_names_argsTupleScheme getScheme() {
-        return new get_partition_names_argsTupleScheme();
+    private static class get_partitions_ps_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_argsTupleScheme getScheme() {
+        return new get_partitions_ps_argsTupleScheme();
       }
     }
 
-    private static class get_partition_names_argsTupleScheme extends TupleScheme<get_partition_names_args> {
+    private static class get_partitions_ps_argsTupleScheme extends TupleScheme<get_partitions_ps_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -70830,25 +72144,37 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names
         if (struct.isSetTbl_name()) {
           optionals.set(1);
         }
-        if (struct.isSetMax_parts()) {
+        if (struct.isSetPart_vals()) {
           optionals.set(2);
         }
-        oprot.writeBitSet(optionals, 3);
+        if (struct.isSetMax_parts()) {
+          optionals.set(3);
+        }
+        oprot.writeBitSet(optionals, 4);
         if (struct.isSetDb_name()) {
           oprot.writeString(struct.db_name);
         }
         if (struct.isSetTbl_name()) {
           oprot.writeString(struct.tbl_name);
         }
+        if (struct.isSetPart_vals()) {
+          {
+            oprot.writeI32(struct.part_vals.size());
+            for (String _iter782 : struct.part_vals)
+            {
+              oprot.writeString(_iter782);
+            }
+          }
+        }
         if (struct.isSetMax_parts()) {
           oprot.writeI16(struct.max_parts);
         }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(3);
+        BitSet incoming = iprot.readBitSet(4);
         if (incoming.get(0)) {
           struct.db_name = iprot.readString();
           struct.setDb_nameIsSet(true);
@@ -70858,6 +72184,19 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_
           struct.setTbl_nameIsSet(true);
         }
         if (incoming.get(2)) {
+          {
+            org.apache.thrift.protocol.TList _list783 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.part_vals = new ArrayList<String>(_list783.size);
+            for (int _i784 = 0; _i784 < _list783.size; ++_i784)
+            {
+              String _elem785; // required
+              _elem785 = iprot.readString();
+              struct.part_vals.add(_elem785);
+            }
+          }
+          struct.setPart_valsIsSet(true);
+        }
+        if (incoming.get(3)) {
           struct.max_parts = iprot.readI16();
           struct.setMax_partsIsSet(true);
         }
@@ -70866,25 +72205,28 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_
 
   }
 
-  public static class get_partition_names_result implements org.apache.thrift.TBase<get_partition_names_result, get_partition_names_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_result");
+  public static class get_partitions_ps_result implements org.apache.thrift.TBase<get_partitions_ps_result, get_partitions_ps_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
-    private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField("o2", org.apache.thrift.protocol.TType.STRUCT, (short)1);
+    private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
+    private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField("o2", org.apache.thrift.protocol.TType.STRUCT, (short)2);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partition_names_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partition_names_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_ps_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_ps_resultTupleSchemeFactory());
     }
 
-    private List<String> success; // required
-    private MetaException o2; // required
+    private List<Partition> success; // required
+    private MetaException o1; // required
+    private NoSuchObjectException o2; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       SUCCESS((short)0, "success"),
-      O2((short)1, "o2");
+      O1((short)1, "o1"),
+      O2((short)2, "o2");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -70901,7 +72243,9 @@ public static _Fields findByThriftId(int fieldId) {
         switch(fieldId) {
           case 0: // SUCCESS
             return SUCCESS;
-          case 1: // O2
+          case 1: // O1
+            return O1;
+          case 2: // O2
             return O2;
           default:
             return null;
@@ -70948,48 +72292,56 @@ public String getFieldName() {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
+              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));
+      tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_result.class, metaDataMap);
     }
 
-    public get_partition_names_result() {
+    public get_partitions_ps_result() {
     }
 
-    public get_partition_names_result(
-      List<String> success,
-      MetaException o2)
+    public get_partitions_ps_result(
+      List<Partition> success,
+      MetaException o1,
+      NoSuchObjectException o2)
     {
       this();
       this.success = success;
+      this.o1 = o1;
       this.o2 = o2;
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partition_names_result(get_partition_names_result other) {
+    public get_partitions_ps_result(get_partitions_ps_result other) {
       if (other.isSetSuccess()) {
-        List<String> __this__success = new ArrayList<String>();
-        for (String other_element : other.success) {
-          __this__success.add(other_element);
+        List<Partition> __this__success = new ArrayList<Partition>();
+        for (Partition other_element : other.success) {
+          __this__success.add(new Partition(other_element));
         }
         this.success = __this__success;
       }
+      if (other.isSetO1()) {
+        this.o1 = new MetaException(other.o1);
+      }
       if (other.isSetO2()) {
-        this.o2 = new MetaException(other.o2);
+        this.o2 = new NoSuchObjectException(other.o2);
       }
     }
 
-    public get_partition_names_result deepCopy() {
-      return new get_partition_names_result(this);
+    public get_partitions_ps_result deepCopy() {
+      return new get_partitions_ps_result(this);
     }
 
     @Override
     public void clear() {
       this.success = null;
+      this.o1 = null;
       this.o2 = null;
     }
 
@@ -70997,22 +72349,22 @@ public int getSuccessSize() {
       return (this.success == null) ? 0 : this.success.size();
     }
 
-    public java.util.Iterator<String> getSuccessIterator() {
+    public java.util.Iterator<Partition> getSuccessIterator() {
       return (this.success == null) ? null : this.success.iterator();
     }
 
-    public void addToSuccess(String elem) {
+    public void addToSuccess(Partition elem) {
       if (this.success == null) {
-        this.success = new ArrayList<String>();
+        this.success = new ArrayList<Partition>();
       }
       this.success.add(elem);
     }
 
-    public List<String> getSuccess() {
+    public List<Partition> getSuccess() {
       return this.success;
     }
 
-    public void setSuccess(List<String> success) {
+    public void setSuccess(List<Partition> success) {
       this.success = success;
     }
 
@@ -71031,11 +72383,34 @@ public void setSuccessIsSet(boolean value) {
       }
     }
 
-    public MetaException getO2() {
+    public MetaException getO1() {
+      return this.o1;
+    }
+
+    public void setO1(MetaException o1) {
+      this.o1 = o1;
+    }
+
+    public void unsetO1() {
+      this.o1 = null;
+    }
+
+    /** Returns true if field o1 is set (has been assigned a value) and false otherwise */
+    public boolean isSetO1() {
+      return this.o1 != null;
+    }
+
+    public void setO1IsSet(boolean value) {
+      if (!value) {
+        this.o1 = null;
+      }
+    }
+
+    public NoSuchObjectException getO2() {
       return this.o2;
     }
 
-    public void setO2(MetaException o2) {
+    public void setO2(NoSuchObjectException o2) {
       this.o2 = o2;
     }
 
@@ -71060,7 +72435,15 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetSuccess();
         } else {
-          setSuccess((List<String>)value);
+          setSuccess((List<Partition>)value);
+        }
+        break;
+
+      case O1:
+        if (value == null) {
+          unsetO1();
+        } else {
+          setO1((MetaException)value);
         }
         break;
 
@@ -71068,7 +72451,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetO2();
         } else {
-          setO2((MetaException)value);
+          setO2((NoSuchObjectException)value);
         }
         break;
 
@@ -71080,6 +72463,9 @@ public Object getFieldValue(_Fields field) {
       case SUCCESS:
         return getSuccess();
 
+      case O1:
+        return getO1();
+
       case O2:
         return getO2();
 
@@ -71096,6 +72482,8 @@ public boolean isSet(_Fields field) {
       switch (field) {
       case SUCCESS:
         return isSetSuccess();
+      case O1:
+        return isSetO1();
       case O2:
         return isSetO2();
       }
@@ -71106,12 +72494,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partition_names_result)
-        return this.equals((get_partition_names_result)that);
+      if (that instanceof get_partitions_ps_result)
+        return this.equals((get_partitions_ps_result)that);
       return false;
     }
 
-    public boolean equals(get_partition_names_result that) {
+    public boolean equals(get_partitions_ps_result that) {
       if (that == null)
         return false;
 
@@ -71124,6 +72512,15 @@ public boolean equals(get_partition_names_result that) {
           return false;
       }
 
+      boolean this_present_o1 = true && this.isSetO1();
+      boolean that_present_o1 = true && that.isSetO1();
+      if (this_present_o1 || that_present_o1) {
+        if (!(this_present_o1 && that_present_o1))
+          return false;
+        if (!this.o1.equals(that.o1))
+          return false;
+      }
+
       boolean this_present_o2 = true && this.isSetO2();
       boolean that_present_o2 = true && that.isSetO2();
       if (this_present_o2 || that_present_o2) {
@@ -71145,6 +72542,11 @@ public int hashCode() {
       if (present_success)
         builder.append(success);
 
+      boolean present_o1 = true && (isSetO1());
+      builder.append(present_o1);
+      if (present_o1)
+        builder.append(o1);
+
       boolean present_o2 = true && (isSetO2());
       builder.append(present_o2);
       if (present_o2)
@@ -71153,13 +72555,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partition_names_result other) {
+    public int compareTo(get_partitions_ps_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partition_names_result typedOther = (get_partition_names_result)other;
+      get_partitions_ps_result typedOther = (get_partitions_ps_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -71171,6 +72573,16 @@ public int compareTo(get_partition_names_result other) {
           return lastComparison;
         }
       }
+      lastComparison = Boolean.valueOf(isSetO1()).compareTo(typedOther.isSetO1());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetO1()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.o1, typedOther.o1);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
       lastComparison = Boolean.valueOf(isSetO2()).compareTo(typedOther.isSetO2());
       if (lastComparison != 0) {
         return lastComparison;
@@ -71198,7 +72610,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partition_names_result(");
+      StringBuilder sb = new StringBuilder("get_partitions_ps_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -71209,6 +72621,14 @@ public String toString() {
       }
       first = false;
       if (!first) sb.append(", ");
+      sb.append("o1:");
+      if (this.o1 == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.o1);
+      }
+      first = false;
+      if (!first) sb.append(", ");
       sb.append("o2:");
       if (this.o2 == null) {
         sb.append("null");
@@ -71241,15 +72661,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partition_names_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partition_names_resultStandardScheme getScheme() {
-        return new get_partition_names_resultStandardScheme();
+    private static class get_partitions_ps_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_resultStandardScheme getScheme() {
+        return new get_partitions_ps_resultStandardScheme();
       }
     }
 
-    private static class get_partition_names_resultStandardScheme extends StandardScheme<get_partition_names_result> {
+    private static class get_partitions_ps_resultStandardScheme extends StandardScheme<get_partitions_ps_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -71262,13 +72682,14 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list770 = iprot.readListBegin();
-                  struct.success = new ArrayList<String>(_list770.size);
-                  for (int _i771 = 0; _i771 < _list770.size; ++_i771)
+                  org.apache.thrift.protocol.TList _list786 = iprot.readListBegin();
+                  struct.success = new ArrayList<Partition>(_list786.size);
+                  for (int _i787 = 0; _i787 < _list786.size; ++_i787)
                   {
-                    String _elem772; // required
-                    _elem772 = iprot.readString();
-                    struct.success.add(_elem772);
+                    Partition _elem788; // required
+                    _elem788 = new Partition();
+                    _elem788.read(iprot);
+                    struct.success.add(_elem788);
                   }
                   iprot.readListEnd();
                 }
@@ -71277,9 +72698,18 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 1: // O2
+            case 1: // O1
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o2 = new MetaException();
+                struct.o1 = new MetaException();
+                struct.o1.read(iprot);
+                struct.setO1IsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 2: // O2
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
+                struct.o2 = new NoSuchObjectException();
                 struct.o2.read(iprot);
                 struct.setO2IsSet(true);
               } else { 
@@ -71295,22 +72725,27 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
         if (struct.success != null) {
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
           {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.success.size()));
-            for (String _iter773 : struct.success)
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
+            for (Partition _iter789 : struct.success)
             {
-              oprot.writeString(_iter773);
+              _iter789.write(oprot);
             }
             oprot.writeListEnd();
           }
           oprot.writeFieldEnd();
         }
+        if (struct.o1 != null) {
+          oprot.writeFieldBegin(O1_FIELD_DESC);
+          struct.o1.write(oprot);
+          oprot.writeFieldEnd();
+        }
         if (struct.o2 != null) {
           oprot.writeFieldBegin(O2_FIELD_DESC);
           struct.o2.write(oprot);
@@ -71322,58 +72757,70 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_name
 
     }
 
-    private static class get_partition_names_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partition_names_resultTupleScheme getScheme() {
-        return new get_partition_names_resultTupleScheme();
+    private static class get_partitions_ps_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_resultTupleScheme getScheme() {
+        return new get_partitions_ps_resultTupleScheme();
       }
     }
 
-    private static class get_partition_names_resultTupleScheme extends TupleScheme<get_partition_names_result> {
+    private static class get_partitions_ps_resultTupleScheme extends TupleScheme<get_partitions_ps_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
           optionals.set(0);
         }
-        if (struct.isSetO2()) {
+        if (struct.isSetO1()) {
           optionals.set(1);
         }
-        oprot.writeBitSet(optionals, 2);
+        if (struct.isSetO2()) {
+          optionals.set(2);
+        }
+        oprot.writeBitSet(optionals, 3);
         if (struct.isSetSuccess()) {
           {
             oprot.writeI32(struct.success.size());
-            for (String _iter774 : struct.success)
+            for (Partition _iter790 : struct.success)
             {
-              oprot.writeString(_iter774);
+              _iter790.write(oprot);
             }
           }
         }
+        if (struct.isSetO1()) {
+          struct.o1.write(oprot);
+        }
         if (struct.isSetO2()) {
           struct.o2.write(oprot);
         }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(2);
+        BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           {
-            org.apache.thrift.protocol.TList _list775 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.success = new ArrayList<String>(_list775.size);
-            for (int _i776 = 0; _i776 < _list775.size; ++_i776)
+            org.apache.thrift.protocol.TList _list791 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
+            struct.success = new ArrayList<Partition>(_list791.size);
+            for (int _i792 = 0; _i792 < _list791.size; ++_i792)
             {
-              String _elem777; // required
-              _elem777 = iprot.readString();
-              struct.success.add(_elem777);
+              Partition _elem793; // required
+              _elem793 = new Partition();
+              _elem793.read(iprot);
+              struct.success.add(_elem793);
             }
           }
           struct.setSuccessIsSet(true);
         }
         if (incoming.get(1)) {
-          struct.o2 = new MetaException();
+          struct.o1 = new MetaException();
+          struct.o1.read(iprot);
+          struct.setO1IsSet(true);
+        }
+        if (incoming.get(2)) {
+          struct.o2 = new NoSuchObjectException();
           struct.o2.read(iprot);
           struct.setO2IsSet(true);
         }
@@ -71382,31 +72829,37 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_
 
   }
 
-  public static class get_partitions_ps_args implements org.apache.thrift.TBase<get_partitions_ps_args, get_partitions_ps_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_args");
+  public static class get_partitions_ps_with_auth_args implements org.apache.thrift.TBase<get_partitions_ps_with_auth_args, get_partitions_ps_with_auth_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_with_auth_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
     private static final org.apache.thrift.protocol.TField PART_VALS_FIELD_DESC = new org.apache.thrift.protocol.TField("part_vals", org.apache.thrift.protocol.TType.LIST, (short)3);
     private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)4);
+    private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("user_name", org.apache.thrift.protocol.TType.STRING, (short)5);
+    private static final org.apache.thrift.protocol.TField GROUP_NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("group_names", org.apache.thrift.protocol.TType.LIST, (short)6);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_ps_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_ps_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_ps_with_auth_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_ps_with_auth_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
     private List<String> part_vals; // required
     private short max_parts; // required
+    private String user_name; // required
+    private List<String> group_names; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
       PART_VALS((short)3, "part_vals"),
-      MAX_PARTS((short)4, "max_parts");
+      MAX_PARTS((short)4, "max_parts"),
+      USER_NAME((short)5, "user_name"),
+      GROUP_NAMES((short)6, "group_names");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -71429,6 +72882,10 @@ public static _Fields findByThriftId(int fieldId) {
             return PART_VALS;
           case 4: // MAX_PARTS
             return MAX_PARTS;
+          case 5: // USER_NAME
+            return USER_NAME;
+          case 6: // GROUP_NAMES
+            return GROUP_NAMES;
           default:
             return null;
         }
@@ -71483,20 +72940,27 @@ public String getFieldName() {
               new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
+      tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("user_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
+      tmpMap.put(_Fields.GROUP_NAMES, new org.apache.thrift.meta_data.FieldMetaData("group_names", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
+              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_with_auth_args.class, metaDataMap);
     }
 
-    public get_partitions_ps_args() {
+    public get_partitions_ps_with_auth_args() {
       this.max_parts = (short)-1;
 
     }
 
-    public get_partitions_ps_args(
+    public get_partitions_ps_with_auth_args(
       String db_name,
       String tbl_name,
       List<String> part_vals,
-      short max_parts)
+      short max_parts,
+      String user_name,
+      List<String> group_names)
     {
       this();
       this.db_name = db_name;
@@ -71504,12 +72968,14 @@ public get_partitions_ps_args(
       this.part_vals = part_vals;
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
+      this.user_name = user_name;
+      this.group_names = group_names;
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_ps_args(get_partitions_ps_args other) {
+    public get_partitions_ps_with_auth_args(get_partitions_ps_with_auth_args other) {
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
@@ -71525,10 +72991,20 @@ public get_partitions_ps_args(get_partitions_ps_args other) {
         this.part_vals = __this__part_vals;
       }
       this.max_parts = other.max_parts;
+      if (other.isSetUser_name()) {
+        this.user_name = other.user_name;
+      }
+      if (other.isSetGroup_names()) {
+        List<String> __this__group_names = new ArrayList<String>();
+        for (String other_element : other.group_names) {
+          __this__group_names.add(other_element);
+        }
+        this.group_names = __this__group_names;
+      }
     }
 
-    public get_partitions_ps_args deepCopy() {
-      return new get_partitions_ps_args(this);
+    public get_partitions_ps_with_auth_args deepCopy() {
+      return new get_partitions_ps_with_auth_args(this);
     }
 
     @Override
@@ -71538,6 +73014,8 @@ public void clear() {
       this.part_vals = null;
       this.max_parts = (short)-1;
 
+      this.user_name = null;
+      this.group_names = null;
     }
 
     public String getDb_name() {
@@ -71646,6 +73124,67 @@ public void setMax_partsIsSet(boolean value) {
       __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_PARTS_ISSET_ID, value);
     }
 
+    public String getUser_name() {
+      return this.user_name;
+    }
+
+    public void setUser_name(String user_name) {
+      this.user_name = user_name;
+    }
+
+    public void unsetUser_name() {
+      this.user_name = null;
+    }
+
+    /** Returns true if field user_name is set (has been assigned a value) and false otherwise */
+    public boolean isSetUser_name() {
+      return this.user_name != null;
+    }
+
+    public void setUser_nameIsSet(boolean value) {
+      if (!value) {
+        this.user_name = null;
+      }
+    }
+
+    public int getGroup_namesSize() {
+      return (this.group_names == null) ? 0 : this.group_names.size();
+    }
+
+    public java.util.Iterator<String> getGroup_namesIterator() {
+      return (this.group_names == null) ? null : this.group_names.iterator();
+    }
+
+    public void addToGroup_names(String elem) {
+      if (this.group_names == null) {
+        this.group_names = new ArrayList<String>();
+      }
+      this.group_names.add(elem);
+    }
+
+    public List<String> getGroup_names() {
+      return this.group_names;
+    }
+
+    public void setGroup_names(List<String> group_names) {
+      this.group_names = group_names;
+    }
+
+    public void unsetGroup_names() {
+      this.group_names = null;
+    }
+
+    /** Returns true if field group_names is set (has been assigned a value) and false otherwise */
+    public boolean isSetGroup_names() {
+      return this.group_names != null;
+    }
+
+    public void setGroup_namesIsSet(boolean value) {
+      if (!value) {
+        this.group_names = null;
+      }
+    }
+
     public void setFieldValue(_Fields field, Object value) {
       switch (field) {
       case DB_NAME:
@@ -71680,6 +73219,22 @@ public void setFieldValue(_Fields field, Object value) {
         }
         break;
 
+      case USER_NAME:
+        if (value == null) {
+          unsetUser_name();
+        } else {
+          setUser_name((String)value);
+        }
+        break;
+
+      case GROUP_NAMES:
+        if (value == null) {
+          unsetGroup_names();
+        } else {
+          setGroup_names((List<String>)value);
+        }
+        break;
+
       }
     }
 
@@ -71697,6 +73252,12 @@ public Object getFieldValue(_Fields field) {
       case MAX_PARTS:
         return Short.valueOf(getMax_parts());
 
+      case USER_NAME:
+        return getUser_name();
+
+      case GROUP_NAMES:
+        return getGroup_names();
+
       }
       throw new IllegalStateException();
     }
@@ -71716,6 +73277,10 @@ public boolean isSet(_Fields field) {
         return isSetPart_vals();
       case MAX_PARTS:
         return isSetMax_parts();
+      case USER_NAME:
+        return isSetUser_name();
+      case GROUP_NAMES:
+        return isSetGroup_names();
       }
       throw new IllegalStateException();
     }
@@ -71724,12 +73289,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_ps_args)
-        return this.equals((get_partitions_ps_args)that);
+      if (that instanceof get_partitions_ps_with_auth_args)
+        return this.equals((get_partitions_ps_with_auth_args)that);
       return false;
     }
 
-    public boolean equals(get_partitions_ps_args that) {
+    public boolean equals(get_partitions_ps_with_auth_args that) {
       if (that == null)
         return false;
 
@@ -71769,6 +73334,24 @@ public boolean equals(get_partitions_ps_args that) {
           return false;
       }
 
+      boolean this_present_user_name = true && this.isSetUser_name();
+      boolean that_present_user_name = true && that.isSetUser_name();
+      if (this_present_user_name || that_present_user_name) {
+        if (!(this_present_user_name && that_present_user_name))
+          return false;
+        if (!this.user_name.equals(that.user_name))
+          return false;
+      }
+
+      boolean this_present_group_names = true && this.isSetGroup_names();
+      boolean that_present_group_names = true && that.isSetGroup_names();
+      if (this_present_group_names || that_present_group_names) {
+        if (!(this_present_group_names && that_present_group_names))
+          return false;
+        if (!this.group_names.equals(that.group_names))
+          return false;
+      }
+
       return true;
     }
 
@@ -71796,16 +73379,26 @@ public int hashCode() {
       if (present_max_parts)
         builder.append(max_parts);
 
+      boolean present_user_name = true && (isSetUser_name());
+      builder.append(present_user_name);
+      if (present_user_name)
+        builder.append(user_name);
+
+      boolean present_group_names = true && (isSetGroup_names());
+      builder.append(present_group_names);
+      if (present_group_names)
+        builder.append(group_names);
+
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_ps_args other) {
+    public int compareTo(get_partitions_ps_with_auth_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_ps_args typedOther = (get_partitions_ps_args)other;
+      get_partitions_ps_with_auth_args typedOther = (get_partitions_ps_with_auth_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -71847,6 +73440,26 @@ public int compareTo(get_partitions_ps_args other) {
           return lastComparison;
         }
       }
+      lastComparison = Boolean.valueOf(isSetUser_name()).compareTo(typedOther.isSetUser_name());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetUser_name()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_name, typedOther.user_name);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
+      lastComparison = Boolean.valueOf(isSetGroup_names()).compareTo(typedOther.isSetGroup_names());
+      if (lastComparison != 0) {
+        return lastComparison;
+      }
+      if (isSetGroup_names()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.group_names, typedOther.group_names);
+        if (lastComparison != 0) {
+          return lastComparison;
+        }
+      }
       return 0;
     }
 
@@ -71864,7 +73477,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_ps_args(");
+      StringBuilder sb = new StringBuilder("get_partitions_ps_with_auth_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -71894,6 +73507,22 @@ public String toString() {
       sb.append("max_parts:");
       sb.append(this.max_parts);
       first = false;
+      if (!first) sb.append(", ");
+      sb.append("user_name:");
+      if (this.user_name == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.user_name);
+      }
+      first = false;
+      if (!first) sb.append(", ");
+      sb.append("group_names:");
+      if (this.group_names == null) {
+        sb.append("null");
+      } else {
+        sb.append(this.group_names);
+      }
+      first = false;
       sb.append(")");
       return sb.toString();
     }
@@ -71921,15 +73550,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_ps_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_argsStandardScheme getScheme() {
-        return new get_partitions_ps_argsStandardScheme();
+    private static class get_partitions_ps_with_auth_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_with_auth_argsStandardScheme getScheme() {
+        return new get_partitions_ps_with_auth_argsStandardScheme();
       }
     }
 
-    private static class get_partitions_ps_argsStandardScheme extends StandardScheme<get_partitions_ps_args> {
+    private static class get_partitions_ps_with_auth_argsStandardScheme extends StandardScheme<get_partitions_ps_with_auth_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -71958,13 +73587,13 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_a
             case 3: // PART_VALS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list778 = iprot.readListBegin();
-                  struct.part_vals = new ArrayList<String>(_list778.size);
-                  for (int _i779 = 0; _i779 < _list778.size; ++_i779)
+                  org.apache.thrift.protocol.TList _list794 = iprot.readListBegin();
+                  struct.part_vals = new ArrayList<String>(_list794.size);
+                  for (int _i795 = 0; _i795 < _list794.size; ++_i795)
                   {
-                    String _elem780; // required
-                    _elem780 = iprot.readString();
-                    struct.part_vals.add(_elem780);
+                    String _elem796; // required
+                    _elem796 = iprot.readString();
+                    struct.part_vals.add(_elem796);
                   }
                   iprot.readListEnd();
                 }
@@ -71981,6 +73610,32 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_a
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
+            case 5: // USER_NAME
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
+                struct.user_name = iprot.readString();
+                struct.setUser_nameIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
+            case 6: // GROUP_NAMES
+              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
+                {
+                  org.apache.thrift.protocol.TList _list797 = iprot.readListBegin();
+                  struct.group_names = new ArrayList<String>(_list797.size);
+                  for (int _i798 = 0; _i798 < _list797.size; ++_i798)
+                  {
+                    String _elem799; // required
+                    _elem799 = iprot.readString();
+                    struct.group_names.add(_elem799);
+                  }
+                  iprot.readListEnd();
+                }
+                struct.setGroup_namesIsSet(true);
+              } else { 
+                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
+              }
+              break;
             default:
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
           }
@@ -71990,7 +73645,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_a
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -72008,9 +73663,9 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_
           oprot.writeFieldBegin(PART_VALS_FIELD_DESC);
           {
             oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.part_vals.size()));
-            for (String _iter781 : struct.part_vals)
+            for (String _iter800 : struct.part_vals)
             {
-              oprot.writeString(_iter781);
+              oprot.writeString(_iter800);
             }
             oprot.writeListEnd();
           }
@@ -72019,22 +73674,39 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_
         oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
         oprot.writeI16(struct.max_parts);
         oprot.writeFieldEnd();
+        if (struct.user_name != null) {
+          oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
+          oprot.writeString(struct.user_name);
+          oprot.writeFieldEnd();
+        }
+        if (struct.group_names != null) {
+          oprot.writeFieldBegin(GROUP_NAMES_FIELD_DESC);
+          {
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.group_names.size()));
+            for (String _iter801 : struct.group_names)
+            {
+              oprot.writeString(_iter801);
+            }
+            oprot.writeListEnd();
+          }
+          oprot.writeFieldEnd();
+        }
         oprot.writeFieldStop();
         oprot.writeStructEnd();
       }
 
     }
 
-    private static class get_partitions_ps_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_argsTupleScheme getScheme() {
-        return new get_partitions_ps_argsTupleScheme();
+    private static class get_partitions_ps_with_auth_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_with_auth_argsTupleScheme getScheme() {
+        return new get_partitions_ps_with_auth_argsTupleScheme();
       }
     }
 
-    private static class get_partitions_ps_argsTupleScheme extends TupleScheme<get_partitions_ps_args> {
+    private static class get_partitions_ps_with_auth_argsTupleScheme extends TupleScheme<get_partitions_ps_with_auth_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -72049,7 +73721,13 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_a
         if (struct.isSetMax_parts()) {
           optionals.set(3);
         }
-        oprot.writeBitSet(optionals, 4);
+        if (struct.isSetUser_name()) {
+          optionals.set(4);
+        }
+        if (struct.isSetGroup_names()) {
+          optionals.set(5);
+        }
+        oprot.writeBitSet(optionals, 6);
         if (struct.isSetDb_name()) {
           oprot.writeString(struct.db_name);
         }
@@ -72059,21 +73737,33 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_a
         if (struct.isSetPart_vals()) {
           {
             oprot.writeI32(struct.part_vals.size());
-            for (String _iter782 : struct.part_vals)
+            for (String _iter802 : struct.part_vals)
             {
-              oprot.writeString(_iter782);
+              oprot.writeString(_iter802);
             }
           }
         }
         if (struct.isSetMax_parts()) {
           oprot.writeI16(struct.max_parts);
         }
+        if (struct.isSetUser_name()) {
+          oprot.writeString(struct.user_name);
+        }
+        if (struct.isSetGroup_names()) {
+          {
+            oprot.writeI32(struct.group_names.size());
+            for (String _iter803 : struct.group_names)
+            {
+              oprot.writeString(_iter803);
+            }
+          }
+        }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(4);
+        BitSet incoming = iprot.readBitSet(6);
         if (incoming.get(0)) {
           struct.db_name = iprot.readString();
           struct.setDb_nameIsSet(true);
@@ -72084,13 +73774,13 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_ar
         }
         if (incoming.get(2)) {
           {
-            org.apache.thrift.protocol.TList _list783 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.part_vals = new ArrayList<String>(_list783.size);
-            for (int _i784 = 0; _i784 < _list783.size; ++_i784)
+            org.apache.thrift.protocol.TList _list804 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.part_vals = new ArrayList<String>(_list804.size);
+            for (int _i805 = 0; _i805 < _list804.size; ++_i805)
             {
-              String _elem785; // required
-              _elem785 = iprot.readString();
-              struct.part_vals.add(_elem785);
+              String _elem806; // required
+              _elem806 = iprot.readString();
+              struct.part_vals.add(_elem806);
             }
           }
           struct.setPart_valsIsSet(true);
@@ -72099,13 +73789,30 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_ar
           struct.max_parts = iprot.readI16();
           struct.setMax_partsIsSet(true);
         }
+        if (incoming.get(4)) {
+          struct.user_name = iprot.readString();
+          struct.setUser_nameIsSet(true);
+        }
+        if (incoming.get(5)) {
+          {
+            org.apache.thrift.protocol.TList _list807 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.group_names = new ArrayList<String>(_list807.size);
+            for (int _i808 = 0; _i808 < _list807.size; ++_i808)
+            {
+              String _elem809; // required
+              _elem809 = iprot.readString();
+              struct.group_names.add(_elem809);
+            }
+          }
+          struct.setGroup_namesIsSet(true);
+        }
       }
     }
 
   }
 
-  public static class get_partitions_ps_result implements org.apache.thrift.TBase<get_partitions_ps_result, get_partitions_ps_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_result");
+  public static class get_partitions_ps_with_auth_result implements org.apache.thrift.TBase<get_partitions_ps_with_auth_result, get_partitions_ps_with_auth_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_with_auth_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -72113,13 +73820,13 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_ar
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_ps_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_ps_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_ps_with_auth_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_ps_with_auth_resultTupleSchemeFactory());
     }
 
     private List<Partition> success; // required
-    private MetaException o1; // required
-    private NoSuchObjectException o2; // required
+    private NoSuchObjectException o1; // required
+    private MetaException o2; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
@@ -72197,16 +73904,16 @@ public String getFieldName() {
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_with_auth_result.class, metaDataMap);
     }
 
-    public get_partitions_ps_result() {
+    public get_partitions_ps_with_auth_result() {
     }
 
-    public get_partitions_ps_result(
+    public get_partitions_ps_with_auth_result(
       List<Partition> success,
-      MetaException o1,
-      NoSuchObjectException o2)
+      NoSuchObjectException o1,
+      MetaException o2)
     {
       this();
       this.success = success;
@@ -72217,7 +73924,7 @@ public get_partitions_ps_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_ps_result(get_partitions_ps_result other) {
+    public get_partitions_ps_with_auth_result(get_partitions_ps_with_auth_result other) {
       if (other.isSetSuccess()) {
         List<Partition> __this__success = new ArrayList<Partition>();
         for (Partition other_element : other.success) {
@@ -72226,15 +73933,15 @@ public get_partitions_ps_result(get_partitions_ps_result other) {
         this.success = __this__success;
       }
       if (other.isSetO1()) {
-        this.o1 = new MetaException(other.o1);
+        this.o1 = new NoSuchObjectException(other.o1);
       }
       if (other.isSetO2()) {
-        this.o2 = new NoSuchObjectException(other.o2);
+        this.o2 = new MetaException(other.o2);
       }
     }
 
-    public get_partitions_ps_result deepCopy() {
-      return new get_partitions_ps_result(this);
+    public get_partitions_ps_with_auth_result deepCopy() {
+      return new get_partitions_ps_with_auth_result(this);
     }
 
     @Override
@@ -72282,11 +73989,11 @@ public void setSuccessIsSet(boolean value) {
       }
     }
 
-    public MetaException getO1() {
+    public NoSuchObjectException getO1() {
       return this.o1;
     }
 
-    public void setO1(MetaException o1) {
+    public void setO1(NoSuchObjectException o1) {
       this.o1 = o1;
     }
 
@@ -72305,11 +74012,11 @@ public void setO1IsSet(boolean value) {
       }
     }
 
-    public NoSuchObjectException getO2() {
+    public MetaException getO2() {
       return this.o2;
     }
 
-    public void setO2(NoSuchObjectException o2) {
+    public void setO2(MetaException o2) {
       this.o2 = o2;
     }
 
@@ -72342,7 +74049,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetO1();
         } else {
-          setO1((MetaException)value);
+          setO1((NoSuchObjectException)value);
         }
         break;
 
@@ -72350,7 +74057,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetO2();
         } else {
-          setO2((NoSuchObjectException)value);
+          setO2((MetaException)value);
         }
         break;
 
@@ -72393,12 +74100,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_ps_result)
-        return this.equals((get_partitions_ps_result)that);
+      if (that instanceof get_partitions_ps_with_auth_result)
+        return this.equals((get_partitions_ps_with_auth_result)that);
       return false;
     }
 
-    public boolean equals(get_partitions_ps_result that) {
+    public boolean equals(get_partitions_ps_with_auth_result that) {
       if (that == null)
         return false;
 
@@ -72454,13 +74161,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_ps_result other) {
+    public int compareTo(get_partitions_ps_with_auth_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_ps_result typedOther = (get_partitions_ps_result)other;
+      get_partitions_ps_with_auth_result typedOther = (get_partitions_ps_with_auth_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -72509,7 +74216,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_ps_result(");
+      StringBuilder sb = new StringBuilder("get_partitions_ps_with_auth_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -72560,15 +74267,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_ps_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_resultStandardScheme getScheme() {
-        return new get_partitions_ps_resultStandardScheme();
+    private static class get_partitions_ps_with_auth_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_with_auth_resultStandardScheme getScheme() {
+        return new get_partitions_ps_with_auth_resultStandardScheme();
       }
     }
 
-    private static class get_partitions_ps_resultStandardScheme extends StandardScheme<get_partitions_ps_result> {
+    private static class get_partitions_ps_with_auth_resultStandardScheme extends StandardScheme<get_partitions_ps_with_auth_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -72581,14 +74288,14 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_r
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list786 = iprot.readListBegin();
-                  struct.success = new ArrayList<Partition>(_list786.size);
-                  for (int _i787 = 0; _i787 < _list786.size; ++_i787)
+                  org.apache.thrift.protocol.TList _list810 = iprot.readListBegin();
+                  struct.success = new ArrayList<Partition>(_list810.size);
+                  for (int _i811 = 0; _i811 < _list810.size; ++_i811)
                   {
-                    Partition _elem788; // required
-                    _elem788 = new Partition();
-                    _elem788.read(iprot);
-                    struct.success.add(_elem788);
+                    Partition _elem812; // required
+                    _elem812 = new Partition();
+                    _elem812.read(iprot);
+                    struct.success.add(_elem812);
                   }
                   iprot.readListEnd();
                 }
@@ -72599,7 +74306,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_r
               break;
             case 1: // O1
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o1 = new MetaException();
+                struct.o1 = new NoSuchObjectException();
                 struct.o1.read(iprot);
                 struct.setO1IsSet(true);
               } else { 
@@ -72608,7 +74315,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_r
               break;
             case 2: // O2
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o2 = new NoSuchObjectException();
+                struct.o2 = new MetaException();
                 struct.o2.read(iprot);
                 struct.setO2IsSet(true);
               } else { 
@@ -72624,7 +74331,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_r
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -72632,9 +74339,9 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
           {
             oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
-            for (Partition _iter789 : struct.success)
+            for (Partition _iter813 : struct.success)
             {
-              _iter789.write(oprot);
+              _iter813.write(oprot);
             }
             oprot.writeListEnd();
           }
@@ -72656,16 +74363,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_
 
     }
 
-    private static class get_partitions_ps_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_resultTupleScheme getScheme() {
-        return new get_partitions_ps_resultTupleScheme();
+    private static class get_partitions_ps_with_auth_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_ps_with_auth_resultTupleScheme getScheme() {
+        return new get_partitions_ps_with_auth_resultTupleScheme();
       }
     }
 
-    private static class get_partitions_ps_resultTupleScheme extends TupleScheme<get_partitions_ps_result> {
+    private static class get_partitions_ps_with_auth_resultTupleScheme extends TupleScheme<get_partitions_ps_with_auth_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -72681,9 +74388,9 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_r
         if (struct.isSetSuccess()) {
           {
             oprot.writeI32(struct.success.size());
-            for (Partition _iter790 : struct.success)
+            for (Partition _iter814 : struct.success)
             {
-              _iter790.write(oprot);
+              _iter814.write(oprot);
             }
           }
         }
@@ -72696,30 +74403,30 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_r
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           {
-            org.apache.thrift.protocol.TList _list791 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
-            struct.success = new ArrayList<Partition>(_list791.size);
-            for (int _i792 = 0; _i792 < _list791.size; ++_i792)
+            org.apache.thrift.protocol.TList _list815 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
+            struct.success = new ArrayList<Partition>(_list815.size);
+            for (int _i816 = 0; _i816 < _list815.size; ++_i816)
             {
-              Partition _elem793; // required
-              _elem793 = new Partition();
-              _elem793.read(iprot);
-              struct.success.add(_elem793);
+              Partition _elem817; // required
+              _elem817 = new Partition();
+              _elem817.read(iprot);
+              struct.success.add(_elem817);
             }
           }
           struct.setSuccessIsSet(true);
         }
         if (incoming.get(1)) {
-          struct.o1 = new MetaException();
+          struct.o1 = new NoSuchObjectException();
           struct.o1.read(iprot);
           struct.setO1IsSet(true);
         }
         if (incoming.get(2)) {
-          struct.o2 = new NoSuchObjectException();
+          struct.o2 = new MetaException();
           struct.o2.read(iprot);
           struct.setO2IsSet(true);
         }
@@ -72728,37 +74435,31 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_re
 
   }
 
-  public static class get_partitions_ps_with_auth_args implements org.apache.thrift.TBase<get_partitions_ps_with_auth_args, get_partitions_ps_with_auth_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_with_auth_args");
+  public static class get_partition_names_ps_args implements org.apache.thrift.TBase<get_partition_names_ps_args, get_partition_names_ps_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_ps_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
     private static final org.apache.thrift.protocol.TField PART_VALS_FIELD_DESC = new org.apache.thrift.protocol.TField("part_vals", org.apache.thrift.protocol.TType.LIST, (short)3);
     private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)4);
-    private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("user_name", org.apache.thrift.protocol.TType.STRING, (short)5);
-    private static final org.apache.thrift.protocol.TField GROUP_NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("group_names", org.apache.thrift.protocol.TType.LIST, (short)6);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_ps_with_auth_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_ps_with_auth_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partition_names_ps_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partition_names_ps_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
     private List<String> part_vals; // required
     private short max_parts; // required
-    private String user_name; // required
-    private List<String> group_names; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
       PART_VALS((short)3, "part_vals"),
-      MAX_PARTS((short)4, "max_parts"),
-      USER_NAME((short)5, "user_name"),
-      GROUP_NAMES((short)6, "group_names");
+      MAX_PARTS((short)4, "max_parts");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -72781,10 +74482,6 @@ public static _Fields findByThriftId(int fieldId) {
             return PART_VALS;
           case 4: // MAX_PARTS
             return MAX_PARTS;
-          case 5: // USER_NAME
-            return USER_NAME;
-          case 6: // GROUP_NAMES
-            return GROUP_NAMES;
           default:
             return null;
         }
@@ -72839,27 +74536,20 @@ public String getFieldName() {
               new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
-      tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("user_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
-      tmpMap.put(_Fields.GROUP_NAMES, new org.apache.thrift.meta_data.FieldMetaData("group_names", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_with_auth_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_ps_args.class, metaDataMap);
     }
 
-    public get_partitions_ps_with_auth_args() {
+    public get_partition_names_ps_args() {
       this.max_parts = (short)-1;
 
     }
 
-    public get_partitions_ps_with_auth_args(
+    public get_partition_names_ps_args(
       String db_name,
       String tbl_name,
       List<String> part_vals,
-      short max_parts,
-      String user_name,
-      List<String> group_names)
+      short max_parts)
     {
       this();
       this.db_name = db_name;
@@ -72867,14 +74557,12 @@ public get_partitions_ps_with_auth_args(
       this.part_vals = part_vals;
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
-      this.user_name = user_name;
-      this.group_names = group_names;
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_ps_with_auth_args(get_partitions_ps_with_auth_args other) {
+    public get_partition_names_ps_args(get_partition_names_ps_args other) {
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
@@ -72890,20 +74578,10 @@ public get_partitions_ps_with_auth_args(get_partitions_ps_with_auth_args other)
         this.part_vals = __this__part_vals;
       }
       this.max_parts = other.max_parts;
-      if (other.isSetUser_name()) {
-        this.user_name = other.user_name;
-      }
-      if (other.isSetGroup_names()) {
-        List<String> __this__group_names = new ArrayList<String>();
-        for (String other_element : other.group_names) {
-          __this__group_names.add(other_element);
-        }
-        this.group_names = __this__group_names;
-      }
     }
 
-    public get_partitions_ps_with_auth_args deepCopy() {
-      return new get_partitions_ps_with_auth_args(this);
+    public get_partition_names_ps_args deepCopy() {
+      return new get_partition_names_ps_args(this);
     }
 
     @Override
@@ -72913,8 +74591,6 @@ public void clear() {
       this.part_vals = null;
       this.max_parts = (short)-1;
 
-      this.user_name = null;
-      this.group_names = null;
     }
 
     public String getDb_name() {
@@ -73023,67 +74699,6 @@ public void setMax_partsIsSet(boolean value) {
       __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_PARTS_ISSET_ID, value);
     }
 
-    public String getUser_name() {
-      return this.user_name;
-    }
-
-    public void setUser_name(String user_name) {
-      this.user_name = user_name;
-    }
-
-    public void unsetUser_name() {
-      this.user_name = null;
-    }
-
-    /** Returns true if field user_name is set (has been assigned a value) and false otherwise */
-    public boolean isSetUser_name() {
-      return this.user_name != null;
-    }
-
-    public void setUser_nameIsSet(boolean value) {
-      if (!value) {
-        this.user_name = null;
-      }
-    }
-
-    public int getGroup_namesSize() {
-      return (this.group_names == null) ? 0 : this.group_names.size();
-    }
-
-    public java.util.Iterator<String> getGroup_namesIterator() {
-      return (this.group_names == null) ? null : this.group_names.iterator();
-    }
-
-    public void addToGroup_names(String elem) {
-      if (this.group_names == null) {
-        this.group_names = new ArrayList<String>();
-      }
-      this.group_names.add(elem);
-    }
-
-    public List<String> getGroup_names() {
-      return this.group_names;
-    }
-
-    public void setGroup_names(List<String> group_names) {
-      this.group_names = group_names;
-    }
-
-    public void unsetGroup_names() {
-      this.group_names = null;
-    }
-
-    /** Returns true if field group_names is set (has been assigned a value) and false otherwise */
-    public boolean isSetGroup_names() {
-      return this.group_names != null;
-    }
-
-    public void setGroup_namesIsSet(boolean value) {
-      if (!value) {
-        this.group_names = null;
-      }
-    }
-
     public void setFieldValue(_Fields field, Object value) {
       switch (field) {
       case DB_NAME:
@@ -73118,22 +74733,6 @@ public void setFieldValue(_Fields field, Object value) {
         }
         break;
 
-      case USER_NAME:
-        if (value == null) {
-          unsetUser_name();
-        } else {
-          setUser_name((String)value);
-        }
-        break;
-
-      case GROUP_NAMES:
-        if (value == null) {
-          unsetGroup_names();
-        } else {
-          setGroup_names((List<String>)value);
-        }
-        break;
-
       }
     }
 
@@ -73151,12 +74750,6 @@ public Object getFieldValue(_Fields field) {
       case MAX_PARTS:
         return Short.valueOf(getMax_parts());
 
-      case USER_NAME:
-        return getUser_name();
-
-      case GROUP_NAMES:
-        return getGroup_names();
-
       }
       throw new IllegalStateException();
     }
@@ -73176,10 +74769,6 @@ public boolean isSet(_Fields field) {
         return isSetPart_vals();
       case MAX_PARTS:
         return isSetMax_parts();
-      case USER_NAME:
-        return isSetUser_name();
-      case GROUP_NAMES:
-        return isSetGroup_names();
       }
       throw new IllegalStateException();
     }
@@ -73188,12 +74777,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_ps_with_auth_args)
-        return this.equals((get_partitions_ps_with_auth_args)that);
+      if (that instanceof get_partition_names_ps_args)
+        return this.equals((get_partition_names_ps_args)that);
       return false;
     }
 
-    public boolean equals(get_partitions_ps_with_auth_args that) {
+    public boolean equals(get_partition_names_ps_args that) {
       if (that == null)
         return false;
 
@@ -73233,24 +74822,6 @@ public boolean equals(get_partitions_ps_with_auth_args that) {
           return false;
       }
 
-      boolean this_present_user_name = true && this.isSetUser_name();
-      boolean that_present_user_name = true && that.isSetUser_name();
-      if (this_present_user_name || that_present_user_name) {
-        if (!(this_present_user_name && that_present_user_name))
-          return false;
-        if (!this.user_name.equals(that.user_name))
-          return false;
-      }
-
-      boolean this_present_group_names = true && this.isSetGroup_names();
-      boolean that_present_group_names = true && that.isSetGroup_names();
-      if (this_present_group_names || that_present_group_names) {
-        if (!(this_present_group_names && that_present_group_names))
-          return false;
-        if (!this.group_names.equals(that.group_names))
-          return false;
-      }
-
       return true;
     }
 
@@ -73278,26 +74849,16 @@ public int hashCode() {
       if (present_max_parts)
         builder.append(max_parts);
 
-      boolean present_user_name = true && (isSetUser_name());
-      builder.append(present_user_name);
-      if (present_user_name)
-        builder.append(user_name);
-
-      boolean present_group_names = true && (isSetGroup_names());
-      builder.append(present_group_names);
-      if (present_group_names)
-        builder.append(group_names);
-
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_ps_with_auth_args other) {
+    public int compareTo(get_partition_names_ps_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_ps_with_auth_args typedOther = (get_partitions_ps_with_auth_args)other;
+      get_partition_names_ps_args typedOther = (get_partition_names_ps_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -73339,26 +74900,6 @@ public int compareTo(get_partitions_ps_with_auth_args other) {
           return lastComparison;
         }
       }
-      lastComparison = Boolean.valueOf(isSetUser_name()).compareTo(typedOther.isSetUser_name());
-      if (lastComparison != 0) {
-        return lastComparison;
-      }
-      if (isSetUser_name()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_name, typedOther.user_name);
-        if (lastComparison != 0) {
-          return lastComparison;
-        }
-      }
-      lastComparison = Boolean.valueOf(isSetGroup_names()).compareTo(typedOther.isSetGroup_names());
-      if (lastComparison != 0) {
-        return lastComparison;
-      }
-      if (isSetGroup_names()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.group_names, typedOther.group_names);
-        if (lastComparison != 0) {
-          return lastComparison;
-        }
-      }
       return 0;
     }
 
@@ -73376,7 +74917,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_ps_with_auth_args(");
+      StringBuilder sb = new StringBuilder("get_partition_names_ps_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -73406,22 +74947,6 @@ public String toString() {
       sb.append("max_parts:");
       sb.append(this.max_parts);
       first = false;
-      if (!first) sb.append(", ");
-      sb.append("user_name:");
-      if (this.user_name == null) {
-        sb.append("null");
-      } else {
-        sb.append(this.user_name);
-      }
-      first = false;
-      if (!first) sb.append(", ");
-      sb.append("group_names:");
-      if (this.group_names == null) {
-        sb.append("null");
-      } else {
-        sb.append(this.group_names);
-      }
-      first = false;
       sb.append(")");
       return sb.toString();
     }
@@ -73449,15 +74974,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_ps_with_auth_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_with_auth_argsStandardScheme getScheme() {
-        return new get_partitions_ps_with_auth_argsStandardScheme();
+    private static class get_partition_names_ps_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partition_names_ps_argsStandardScheme getScheme() {
+        return new get_partition_names_ps_argsStandardScheme();
       }
     }
 
-    private static class get_partitions_ps_with_auth_argsStandardScheme extends StandardScheme<get_partitions_ps_with_auth_args> {
+    private static class get_partition_names_ps_argsStandardScheme extends StandardScheme<get_partition_names_ps_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -73486,13 +75011,13 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_w
             case 3: // PART_VALS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list794 = iprot.readListBegin();
-                  struct.part_vals = new ArrayList<String>(_list794.size);
-                  for (int _i795 = 0; _i795 < _list794.size; ++_i795)
+                  org.apache.thrift.protocol.TList _list818 = iprot.readListBegin();
+                  struct.part_vals = new ArrayList<String>(_list818.size);
+                  for (int _i819 = 0; _i819 < _list818.size; ++_i819)
                   {
-                    String _elem796; // required
-                    _elem796 = iprot.readString();
-                    struct.part_vals.add(_elem796);
+                    String _elem820; // required
+                    _elem820 = iprot.readString();
+                    struct.part_vals.add(_elem820);
                   }
                   iprot.readListEnd();
                 }
@@ -73509,32 +75034,6 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_w
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 5: // USER_NAME
-              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
-                struct.user_name = iprot.readString();
-                struct.setUser_nameIsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
-            case 6: // GROUP_NAMES
-              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
-                {
-                  org.apache.thrift.protocol.TList _list797 = iprot.readListBegin();
-                  struct.group_names = new ArrayList<String>(_list797.size);
-                  for (int _i798 = 0; _i798 < _list797.size; ++_i798)
-                  {
-                    String _elem799; // required
-                    _elem799 = iprot.readString();
-                    struct.group_names.add(_elem799);
-                  }
-                  iprot.readListEnd();
-                }
-                struct.setGroup_namesIsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
             default:
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
           }
@@ -73544,7 +75043,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_w
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -73562,9 +75061,9 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_
           oprot.writeFieldBegin(PART_VALS_FIELD_DESC);
           {
             oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.part_vals.size()));
-            for (String _iter800 : struct.part_vals)
+            for (String _iter821 : struct.part_vals)
             {
-              oprot.writeString(_iter800);
+              oprot.writeString(_iter821);
             }
             oprot.writeListEnd();
           }
@@ -73573,39 +75072,22 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_
         oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
         oprot.writeI16(struct.max_parts);
         oprot.writeFieldEnd();
-        if (struct.user_name != null) {
-          oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
-          oprot.writeString(struct.user_name);
-          oprot.writeFieldEnd();
-        }
-        if (struct.group_names != null) {
-          oprot.writeFieldBegin(GROUP_NAMES_FIELD_DESC);
-          {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.group_names.size()));
-            for (String _iter801 : struct.group_names)
-            {
-              oprot.writeString(_iter801);
-            }
-            oprot.writeListEnd();
-          }
-          oprot.writeFieldEnd();
-        }
         oprot.writeFieldStop();
         oprot.writeStructEnd();
       }
 
     }
 
-    private static class get_partitions_ps_with_auth_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_with_auth_argsTupleScheme getScheme() {
-        return new get_partitions_ps_with_auth_argsTupleScheme();
+    private static class get_partition_names_ps_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partition_names_ps_argsTupleScheme getScheme() {
+        return new get_partition_names_ps_argsTupleScheme();
       }
     }
 
-    private static class get_partitions_ps_with_auth_argsTupleScheme extends TupleScheme<get_partitions_ps_with_auth_args> {
+    private static class get_partition_names_ps_argsTupleScheme extends TupleScheme<get_partition_names_ps_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -73620,13 +75102,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_w
         if (struct.isSetMax_parts()) {
           optionals.set(3);
         }
-        if (struct.isSetUser_name()) {
-          optionals.set(4);
-        }
-        if (struct.isSetGroup_names()) {
-          optionals.set(5);
-        }
-        oprot.writeBitSet(optionals, 6);
+        oprot.writeBitSet(optionals, 4);
         if (struct.isSetDb_name()) {
           oprot.writeString(struct.db_name);
         }
@@ -73636,33 +75112,21 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_w
         if (struct.isSetPart_vals()) {
           {
             oprot.writeI32(struct.part_vals.size());
-            for (String _iter802 : struct.part_vals)
+            for (String _iter822 : struct.part_vals)
             {
-              oprot.writeString(_iter802);
+              oprot.writeString(_iter822);
             }
           }
         }
         if (struct.isSetMax_parts()) {
           oprot.writeI16(struct.max_parts);
         }
-        if (struct.isSetUser_name()) {
-          oprot.writeString(struct.user_name);
-        }
-        if (struct.isSetGroup_names()) {
-          {
-            oprot.writeI32(struct.group_names.size());
-            for (String _iter803 : struct.group_names)
-            {
-              oprot.writeString(_iter803);
-            }
-          }
-        }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(6);
+        BitSet incoming = iprot.readBitSet(4);
         if (incoming.get(0)) {
           struct.db_name = iprot.readString();
           struct.setDb_nameIsSet(true);
@@ -73673,13 +75137,13 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_wi
         }
         if (incoming.get(2)) {
           {
-            org.apache.thrift.protocol.TList _list804 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.part_vals = new ArrayList<String>(_list804.size);
-            for (int _i805 = 0; _i805 < _list804.size; ++_i805)
+            org.apache.thrift.protocol.TList _list823 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.part_vals = new ArrayList<String>(_list823.size);
+            for (int _i824 = 0; _i824 < _list823.size; ++_i824)
             {
-              String _elem806; // required
-              _elem806 = iprot.readString();
-              struct.part_vals.add(_elem806);
+              String _elem825; // required
+              _elem825 = iprot.readString();
+              struct.part_vals.add(_elem825);
             }
           }
           struct.setPart_valsIsSet(true);
@@ -73688,30 +75152,13 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_wi
           struct.max_parts = iprot.readI16();
           struct.setMax_partsIsSet(true);
         }
-        if (incoming.get(4)) {
-          struct.user_name = iprot.readString();
-          struct.setUser_nameIsSet(true);
-        }
-        if (incoming.get(5)) {
-          {
-            org.apache.thrift.protocol.TList _list807 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.group_names = new ArrayList<String>(_list807.size);
-            for (int _i808 = 0; _i808 < _list807.size; ++_i808)
-            {
-              String _elem809; // required
-              _elem809 = iprot.readString();
-              struct.group_names.add(_elem809);
-            }
-          }
-          struct.setGroup_namesIsSet(true);
-        }
       }
     }
 
   }
 
-  public static class get_partitions_ps_with_auth_result implements org.apache.thrift.TBase<get_partitions_ps_with_auth_result, get_partitions_ps_with_auth_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_ps_with_auth_result");
+  public static class get_partition_names_ps_result implements org.apache.thrift.TBase<get_partition_names_ps_result, get_partition_names_ps_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_ps_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -73719,13 +75166,13 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_wi
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_ps_with_auth_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_ps_with_auth_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partition_names_ps_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partition_names_ps_resultTupleSchemeFactory());
     }
 
-    private List<Partition> success; // required
-    private NoSuchObjectException o1; // required
-    private MetaException o2; // required
+    private List<String> success; // required
+    private MetaException o1; // required
+    private NoSuchObjectException o2; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
@@ -73797,22 +75244,22 @@ public String getFieldName() {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));
+              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
       tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_ps_with_auth_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_ps_result.class, metaDataMap);
     }
 
-    public get_partitions_ps_with_auth_result() {
+    public get_partition_names_ps_result() {
     }
 
-    public get_partitions_ps_with_auth_result(
-      List<Partition> success,
-      NoSuchObjectException o1,
-      MetaException o2)
+    public get_partition_names_ps_result(
+      List<String> success,
+      MetaException o1,
+      NoSuchObjectException o2)
     {
       this();
       this.success = success;
@@ -73823,24 +75270,24 @@ public get_partitions_ps_with_auth_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_ps_with_auth_result(get_partitions_ps_with_auth_result other) {
+    public get_partition_names_ps_result(get_partition_names_ps_result other) {
       if (other.isSetSuccess()) {
-        List<Partition> __this__success = new ArrayList<Partition>();
-        for (Partition other_element : other.success) {
-          __this__success.add(new Partition(other_element));
+        List<String> __this__success = new ArrayList<String>();
+        for (String other_element : other.success) {
+          __this__success.add(other_element);
         }
         this.success = __this__success;
       }
       if (other.isSetO1()) {
-        this.o1 = new NoSuchObjectException(other.o1);
+        this.o1 = new MetaException(other.o1);
       }
       if (other.isSetO2()) {
-        this.o2 = new MetaException(other.o2);
+        this.o2 = new NoSuchObjectException(other.o2);
       }
     }
 
-    public get_partitions_ps_with_auth_result deepCopy() {
-      return new get_partitions_ps_with_auth_result(this);
+    public get_partition_names_ps_result deepCopy() {
+      return new get_partition_names_ps_result(this);
     }
 
     @Override
@@ -73854,22 +75301,22 @@ public int getSuccessSize() {
       return (this.success == null) ? 0 : this.success.size();
     }
 
-    public java.util.Iterator<Partition> getSuccessIterator() {
+    public java.util.Iterator<String> getSuccessIterator() {
       return (this.success == null) ? null : this.success.iterator();
     }
 
-    public void addToSuccess(Partition elem) {
+    public void addToSuccess(String elem) {
       if (this.success == null) {
-        this.success = new ArrayList<Partition>();
+        this.success = new ArrayList<String>();
       }
       this.success.add(elem);
     }
 
-    public List<Partition> getSuccess() {
+    public List<String> getSuccess() {
       return this.success;
     }
 
-    public void setSuccess(List<Partition> success) {
+    public void setSuccess(List<String> success) {
       this.success = success;
     }
 
@@ -73888,11 +75335,11 @@ public void setSuccessIsSet(boolean value) {
       }
     }
 
-    public NoSuchObjectException getO1() {
+    public MetaException getO1() {
       return this.o1;
     }
 
-    public void setO1(NoSuchObjectException o1) {
+    public void setO1(MetaException o1) {
       this.o1 = o1;
     }
 
@@ -73911,11 +75358,11 @@ public void setO1IsSet(boolean value) {
       }
     }
 
-    public MetaException getO2() {
+    public NoSuchObjectException getO2() {
       return this.o2;
     }
 
-    public void setO2(MetaException o2) {
+    public void setO2(NoSuchObjectException o2) {
       this.o2 = o2;
     }
 
@@ -73940,7 +75387,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetSuccess();
         } else {
-          setSuccess((List<Partition>)value);
+          setSuccess((List<String>)value);
         }
         break;
 
@@ -73948,7 +75395,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetO1();
         } else {
-          setO1((NoSuchObjectException)value);
+          setO1((MetaException)value);
         }
         break;
 
@@ -73956,7 +75403,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetO2();
         } else {
-          setO2((MetaException)value);
+          setO2((NoSuchObjectException)value);
         }
         break;
 
@@ -73999,12 +75446,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_ps_with_auth_result)
-        return this.equals((get_partitions_ps_with_auth_result)that);
+      if (that instanceof get_partition_names_ps_result)
+        return this.equals((get_partition_names_ps_result)that);
       return false;
     }
 
-    public boolean equals(get_partitions_ps_with_auth_result that) {
+    public boolean equals(get_partition_names_ps_result that) {
       if (that == null)
         return false;
 
@@ -74060,13 +75507,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_ps_with_auth_result other) {
+    public int compareTo(get_partition_names_ps_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_ps_with_auth_result typedOther = (get_partitions_ps_with_auth_result)other;
+      get_partition_names_ps_result typedOther = (get_partition_names_ps_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -74115,7 +75562,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_ps_with_auth_result(");
+      StringBuilder sb = new StringBuilder("get_partition_names_ps_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -74166,15 +75613,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partitions_ps_with_auth_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_with_auth_resultStandardScheme getScheme() {
-        return new get_partitions_ps_with_auth_resultStandardScheme();
+    private static class get_partition_names_ps_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partition_names_ps_resultStandardScheme getScheme() {
+        return new get_partition_names_ps_resultStandardScheme();
       }
     }
 
-    private static class get_partitions_ps_with_auth_resultStandardScheme extends StandardScheme<get_partitions_ps_with_auth_result> {
+    private static class get_partition_names_ps_resultStandardScheme extends StandardScheme<get_partition_names_ps_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -74187,14 +75634,13 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_w
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list810 = iprot.readListBegin();
-                  struct.success = new ArrayList<Partition>(_list810.size);
-                  for (int _i811 = 0; _i811 < _list810.size; ++_i811)
+                  org.apache.thrift.protocol.TList _list826 = iprot.readListBegin();
+                  struct.success = new ArrayList<String>(_list826.size);
+                  for (int _i827 = 0; _i827 < _list826.size; ++_i827)
                   {
-                    Partition _elem812; // required
-                    _elem812 = new Partition();
-                    _elem812.read(iprot);
-                    struct.success.add(_elem812);
+                    String _elem828; // required
+                    _elem828 = iprot.readString();
+                    struct.success.add(_elem828);
                   }
                   iprot.readListEnd();
                 }
@@ -74205,7 +75651,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_w
               break;
             case 1: // O1
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o1 = new NoSuchObjectException();
+                struct.o1 = new MetaException();
                 struct.o1.read(iprot);
                 struct.setO1IsSet(true);
               } else { 
@@ -74214,7 +75660,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_w
               break;
             case 2: // O2
               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
-                struct.o2 = new MetaException();
+                struct.o2 = new NoSuchObjectException();
                 struct.o2.read(iprot);
                 struct.setO2IsSet(true);
               } else { 
@@ -74230,17 +75676,17 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_ps_w
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
         if (struct.success != null) {
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
           {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
-            for (Partition _iter813 : struct.success)
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.success.size()));
+            for (String _iter829 : struct.success)
             {
-              _iter813.write(oprot);
+              oprot.writeString(_iter829);
             }
             oprot.writeListEnd();
           }
@@ -74262,16 +75708,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_ps_
 
     }
 
-    private static class get_partitions_ps_with_auth_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_ps_with_auth_resultTupleScheme getScheme() {
-        return new get_partitions_ps_with_auth_resultTupleScheme();
+    private static class get_partition_names_ps_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partition_names_ps_resultTupleScheme getScheme() {
+        return new get_partition_names_ps_resultTupleScheme();
       }
     }
 
-    private static class get_partitions_ps_with_auth_resultTupleScheme extends TupleScheme<get_partitions_ps_with_auth_result> {
+    private static class get_partition_names_ps_resultTupleScheme extends TupleScheme<get_partition_names_ps_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -74287,9 +75733,9 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_w
         if (struct.isSetSuccess()) {
           {
             oprot.writeI32(struct.success.size());
-            for (Partition _iter814 : struct.success)
+            for (String _iter830 : struct.success)
             {
-              _iter814.write(oprot);
+              oprot.writeString(_iter830);
             }
           }
         }
@@ -74302,30 +75748,29 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_w
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_with_auth_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           {
-            org.apache.thrift.protocol.TList _list815 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
-            struct.success = new ArrayList<Partition>(_list815.size);
-            for (int _i816 = 0; _i816 < _list815.size; ++_i816)
+            org.apache.thrift.protocol.TList _list831 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
+            struct.success = new ArrayList<String>(_list831.size);
+            for (int _i832 = 0; _i832 < _list831.size; ++_i832)
             {
-              Partition _elem817; // required
-              _elem817 = new Partition();
-              _elem817.read(iprot);
-              struct.success.add(_elem817);
+              String _elem833; // required
+              _elem833 = iprot.readString();
+              struct.success.add(_elem833);
             }
           }
           struct.setSuccessIsSet(true);
         }
         if (incoming.get(1)) {
-          struct.o1 = new NoSuchObjectException();
+          struct.o1 = new MetaException();
           struct.o1.read(iprot);
           struct.setO1IsSet(true);
         }
         if (incoming.get(2)) {
-          struct.o2 = new MetaException();
+          struct.o2 = new NoSuchObjectException();
           struct.o2.read(iprot);
           struct.setO2IsSet(true);
         }
@@ -74334,30 +75779,30 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_ps_wi
 
   }
 
-  public static class get_partition_names_ps_args implements org.apache.thrift.TBase<get_partition_names_ps_args, get_partition_names_ps_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_ps_args");
+  public static class get_partitions_by_filter_args implements org.apache.thrift.TBase<get_partitions_by_filter_args, get_partitions_by_filter_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_by_filter_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
-    private static final org.apache.thrift.protocol.TField PART_VALS_FIELD_DESC = new org.apache.thrift.protocol.TField("part_vals", org.apache.thrift.protocol.TType.LIST, (short)3);
+    private static final org.apache.thrift.protocol.TField FILTER_FIELD_DESC = new org.apache.thrift.protocol.TField("filter", org.apache.thrift.protocol.TType.STRING, (short)3);
     private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)4);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partition_names_ps_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partition_names_ps_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_by_filter_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_by_filter_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
-    private List<String> part_vals; // required
+    private String filter; // required
     private short max_parts; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
-      PART_VALS((short)3, "part_vals"),
+      FILTER((short)3, "filter"),
       MAX_PARTS((short)4, "max_parts");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
@@ -74377,8 +75822,8 @@ public static _Fields findByThriftId(int fieldId) {
             return DB_NAME;
           case 2: // TBL_NAME
             return TBL_NAME;
-          case 3: // PART_VALS
-            return PART_VALS;
+          case 3: // FILTER
+            return FILTER;
           case 4: // MAX_PARTS
             return MAX_PARTS;
           default:
@@ -74430,30 +75875,29 @@ public String getFieldName() {
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.TBL_NAME, new org.apache.thrift.meta_data.FieldMetaData("tbl_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
-      tmpMap.put(_Fields.PART_VALS, new org.apache.thrift.meta_data.FieldMetaData("part_vals", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
+      tmpMap.put(_Fields.FILTER, new org.apache.thrift.meta_data.FieldMetaData("filter", org.apache.thrift.TFieldRequirementType.DEFAULT, 
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_ps_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_by_filter_args.class, metaDataMap);
     }
 
-    public get_partition_names_ps_args() {
+    public get_partitions_by_filter_args() {
       this.max_parts = (short)-1;
 
     }
 
-    public get_partition_names_ps_args(
+    public get_partitions_by_filter_args(
       String db_name,
       String tbl_name,
-      List<String> part_vals,
+      String filter,
       short max_parts)
     {
       this();
       this.db_name = db_name;
       this.tbl_name = tbl_name;
-      this.part_vals = part_vals;
+      this.filter = filter;
       this.max_parts = max_parts;
       setMax_partsIsSet(true);
     }
@@ -74461,7 +75905,7 @@ public get_partition_names_ps_args(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partition_names_ps_args(get_partition_names_ps_args other) {
+    public get_partitions_by_filter_args(get_partitions_by_filter_args other) {
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
@@ -74469,25 +75913,21 @@ public get_partition_names_ps_args(get_partition_names_ps_args other) {
       if (other.isSetTbl_name()) {
         this.tbl_name = other.tbl_name;
       }
-      if (other.isSetPart_vals()) {
-        List<String> __this__part_vals = new ArrayList<String>();
-        for (String other_element : other.part_vals) {
-          __this__part_vals.add(other_element);
-        }
-        this.part_vals = __this__part_vals;
+      if (other.isSetFilter()) {
+        this.filter = other.filter;
       }
       this.max_parts = other.max_parts;
     }
 
-    public get_partition_names_ps_args deepCopy() {
-      return new get_partition_names_ps_args(this);
+    public get_partitions_by_filter_args deepCopy() {
+      return new get_partitions_by_filter_args(this);
     }
 
     @Override
     public void clear() {
       this.db_name = null;
       this.tbl_name = null;
-      this.part_vals = null;
+      this.filter = null;
       this.max_parts = (short)-1;
 
     }
@@ -74538,41 +75978,26 @@ public void setTbl_nameIsSet(boolean value) {
       }
     }
 
-    public int getPart_valsSize() {
-      return (this.part_vals == null) ? 0 : this.part_vals.size();
-    }
-
-    public java.util.Iterator<String> getPart_valsIterator() {
-      return (this.part_vals == null) ? null : this.part_vals.iterator();
-    }
-
-    public void addToPart_vals(String elem) {
-      if (this.part_vals == null) {
-        this.part_vals = new ArrayList<String>();
-      }
-      this.part_vals.add(elem);
-    }
-
-    public List<String> getPart_vals() {
-      return this.part_vals;
+    public String getFilter() {
+      return this.filter;
     }
 
-    public void setPart_vals(List<String> part_vals) {
-      this.part_vals = part_vals;
+    public void setFilter(String filter) {
+      this.filter = filter;
     }
 
-    public void unsetPart_vals() {
-      this.part_vals = null;
+    public void unsetFilter() {
+      this.filter = null;
     }
 
-    /** Returns true if field part_vals is set (has been assigned a value) and false otherwise */
-    public boolean isSetPart_vals() {
-      return this.part_vals != null;
+    /** Returns true if field filter is set (has been assigned a value) and false otherwise */
+    public boolean isSetFilter() {
+      return this.filter != null;
     }
 
-    public void setPart_valsIsSet(boolean value) {
+    public void setFilterIsSet(boolean value) {
       if (!value) {
-        this.part_vals = null;
+        this.filter = null;
       }
     }
 
@@ -74616,11 +76041,11 @@ public void setFieldValue(_Fields field, Object value) {
         }
         break;
 
-      case PART_VALS:
+      case FILTER:
         if (value == null) {
-          unsetPart_vals();
+          unsetFilter();
         } else {
-          setPart_vals((List<String>)value);
+          setFilter((String)value);
         }
         break;
 
@@ -74643,8 +76068,8 @@ public Object getFieldValue(_Fields field) {
       case TBL_NAME:
         return getTbl_name();
 
-      case PART_VALS:
-        return getPart_vals();
+      case FILTER:
+        return getFilter();
 
       case MAX_PARTS:
         return Short.valueOf(getMax_parts());
@@ -74664,8 +76089,8 @@ public boolean isSet(_Fields field) {
         return isSetDb_name();
       case TBL_NAME:
         return isSetTbl_name();
-      case PART_VALS:
-        return isSetPart_vals();
+      case FILTER:
+        return isSetFilter();
       case MAX_PARTS:
         return isSetMax_parts();
       }
@@ -74676,12 +76101,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partition_names_ps_args)
-        return this.equals((get_partition_names_ps_args)that);
+      if (that instanceof get_partitions_by_filter_args)
+        return this.equals((get_partitions_by_filter_args)that);
       return false;
     }
 
-    public boolean equals(get_partition_names_ps_args that) {
+    public boolean equals(get_partitions_by_filter_args that) {
       if (that == null)
         return false;
 
@@ -74703,12 +76128,12 @@ public boolean equals(get_partition_names_ps_args that) {
           return false;
       }
 
-      boolean this_present_part_vals = true && this.isSetPart_vals();
-      boolean that_present_part_vals = true && that.isSetPart_vals();
-      if (this_present_part_vals || that_present_part_vals) {
-        if (!(this_present_part_vals && that_present_part_vals))
+      boolean this_present_filter = true && this.isSetFilter();
+      boolean that_present_filter = true && that.isSetFilter();
+      if (this_present_filter || that_present_filter) {
+        if (!(this_present_filter && that_present_filter))
           return false;
-        if (!this.part_vals.equals(that.part_vals))
+        if (!this.filter.equals(that.filter))
           return false;
       }
 
@@ -74738,10 +76163,10 @@ public int hashCode() {
       if (present_tbl_name)
         builder.append(tbl_name);
 
-      boolean present_part_vals = true && (isSetPart_vals());
-      builder.append(present_part_vals);
-      if (present_part_vals)
-        builder.append(part_vals);
+      boolean present_filter = true && (isSetFilter());
+      builder.append(present_filter);
+      if (present_filter)
+        builder.append(filter);
 
       boolean present_max_parts = true;
       builder.append(present_max_parts);
@@ -74751,13 +76176,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partition_names_ps_args other) {
+    public int compareTo(get_partitions_by_filter_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partition_names_ps_args typedOther = (get_partition_names_ps_args)other;
+      get_partitions_by_filter_args typedOther = (get_partitions_by_filter_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -74779,12 +76204,12 @@ public int compareTo(get_partition_names_ps_args other) {
           return lastComparison;
         }
       }
-      lastComparison = Boolean.valueOf(isSetPart_vals()).compareTo(typedOther.isSetPart_vals());
+      lastComparison = Boolean.valueOf(isSetFilter()).compareTo(typedOther.isSetFilter());
       if (lastComparison != 0) {
         return lastComparison;
       }
-      if (isSetPart_vals()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.part_vals, typedOther.part_vals);
+      if (isSetFilter()) {
+        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filter, typedOther.filter);
         if (lastComparison != 0) {
           return lastComparison;
         }
@@ -74816,7 +76241,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partition_names_ps_args(");
+      StringBuilder sb = new StringBuilder("get_partitions_by_filter_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -74835,11 +76260,11 @@ public String toString() {
       }
       first = false;
       if (!first) sb.append(", ");
-      sb.append("part_vals:");
-      if (this.part_vals == null) {
+      sb.append("filter:");
+      if (this.filter == null) {
         sb.append("null");
       } else {
-        sb.append(this.part_vals);
+        sb.append(this.filter);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -74873,15 +76298,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partition_names_ps_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partition_names_ps_argsStandardScheme getScheme() {
-        return new get_partition_names_ps_argsStandardScheme();
+    private static class get_partitions_by_filter_argsStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_by_filter_argsStandardScheme getScheme() {
+        return new get_partitions_by_filter_argsStandardScheme();
       }
     }
 
-    private static class get_partition_names_ps_argsStandardScheme extends StandardScheme<get_partition_names_ps_args> {
+    private static class get_partitions_by_filter_argsStandardScheme extends StandardScheme<get_partitions_by_filter_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -74907,20 +76332,10 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 3: // PART_VALS
-              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
-                {
-                  org.apache.thrift.protocol.TList _list818 = iprot.readListBegin();
-                  struct.part_vals = new ArrayList<String>(_list818.size);
-                  for (int _i819 = 0; _i819 < _list818.size; ++_i819)
-                  {
-                    String _elem820; // required
-                    _elem820 = iprot.readString();
-                    struct.part_vals.add(_elem820);
-                  }
-                  iprot.readListEnd();
-                }
-                struct.setPart_valsIsSet(true);
+            case 3: // FILTER
+              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
+                struct.filter = iprot.readString();
+                struct.setFilterIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
@@ -74942,7 +76357,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -74956,16 +76371,9 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_name
           oprot.writeString(struct.tbl_name);
           oprot.writeFieldEnd();
         }
-        if (struct.part_vals != null) {
-          oprot.writeFieldBegin(PART_VALS_FIELD_DESC);
-          {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.part_vals.size()));
-            for (String _iter821 : struct.part_vals)
-            {
-              oprot.writeString(_iter821);
-            }
-            oprot.writeListEnd();
-          }
+        if (struct.filter != null) {
+          oprot.writeFieldBegin(FILTER_FIELD_DESC);
+          oprot.writeString(struct.filter);
           oprot.writeFieldEnd();
         }
         oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
@@ -74977,16 +76385,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_name
 
     }
 
-    private static class get_partition_names_ps_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partition_names_ps_argsTupleScheme getScheme() {
-        return new get_partition_names_ps_argsTupleScheme();
+    private static class get_partitions_by_filter_argsTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_by_filter_argsTupleScheme getScheme() {
+        return new get_partitions_by_filter_argsTupleScheme();
       }
     }
 
-    private static class get_partition_names_ps_argsTupleScheme extends TupleScheme<get_partition_names_ps_args> {
+    private static class get_partitions_by_filter_argsTupleScheme extends TupleScheme<get_partitions_by_filter_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -74995,7 +76403,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names
         if (struct.isSetTbl_name()) {
           optionals.set(1);
         }
-        if (struct.isSetPart_vals()) {
+        if (struct.isSetFilter()) {
           optionals.set(2);
         }
         if (struct.isSetMax_parts()) {
@@ -75008,14 +76416,8 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names
         if (struct.isSetTbl_name()) {
           oprot.writeString(struct.tbl_name);
         }
-        if (struct.isSetPart_vals()) {
-          {
-            oprot.writeI32(struct.part_vals.size());
-            for (String _iter822 : struct.part_vals)
-            {
-              oprot.writeString(_iter822);
-            }
-          }
+        if (struct.isSetFilter()) {
+          oprot.writeString(struct.filter);
         }
         if (struct.isSetMax_parts()) {
           oprot.writeI16(struct.max_parts);
@@ -75023,7 +76425,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(4);
         if (incoming.get(0)) {
@@ -75035,17 +76437,8 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_
           struct.setTbl_nameIsSet(true);
         }
         if (incoming.get(2)) {
-          {
-            org.apache.thrift.protocol.TList _list823 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.part_vals = new ArrayList<String>(_list823.size);
-            for (int _i824 = 0; _i824 < _list823.size; ++_i824)
-            {
-              String _elem825; // required
-              _elem825 = iprot.readString();
-              struct.part_vals.add(_elem825);
-            }
-          }
-          struct.setPart_valsIsSet(true);
+          struct.filter = iprot.readString();
+          struct.setFilterIsSet(true);
         }
         if (incoming.get(3)) {
           struct.max_parts = iprot.readI16();
@@ -75056,8 +76449,8 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_
 
   }
 
-  public static class get_partition_names_ps_result implements org.apache.thrift.TBase<get_partition_names_ps_result, get_partition_names_ps_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partition_names_ps_result");
+  public static class get_partitions_by_filter_result implements org.apache.thrift.TBase<get_partitions_by_filter_result, get_partitions_by_filter_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_by_filter_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -75065,11 +76458,11 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partition_names_ps_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partition_names_ps_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_partitions_by_filter_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_partitions_by_filter_resultTupleSchemeFactory());
     }
 
-    private List<String> success; // required
+    private List<Partition> success; // required
     private MetaException o1; // required
     private NoSuchObjectException o2; // required
 
@@ -75143,20 +76536,20 @@ public String getFieldName() {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
+              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));
       tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partition_names_ps_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_by_filter_result.class, metaDataMap);
     }
 
-    public get_partition_names_ps_result() {
+    public get_partitions_by_filter_result() {
     }
 
-    public get_partition_names_ps_result(
-      List<String> success,
+    public get_partitions_by_filter_result(
+      List<Partition> success,
       MetaException o1,
       NoSuchObjectException o2)
     {
@@ -75169,11 +76562,11 @@ public get_partition_names_ps_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partition_names_ps_result(get_partition_names_ps_result other) {
+    public get_partitions_by_filter_result(get_partitions_by_filter_result other) {
       if (other.isSetSuccess()) {
-        List<String> __this__success = new ArrayList<String>();
-        for (String other_element : other.success) {
-          __this__success.add(other_element);
+        List<Partition> __this__success = new ArrayList<Partition>();
+        for (Partition other_element : other.success) {
+          __this__success.add(new Partition(other_element));
         }
         this.success = __this__success;
       }
@@ -75185,8 +76578,8 @@ public get_partition_names_ps_result(get_partition_names_ps_result other) {
       }
     }
 
-    public get_partition_names_ps_result deepCopy() {
-      return new get_partition_names_ps_result(this);
+    public get_partitions_by_filter_result deepCopy() {
+      return new get_partitions_by_filter_result(this);
     }
 
     @Override
@@ -75200,22 +76593,22 @@ public int getSuccessSize() {
       return (this.success == null) ? 0 : this.success.size();
     }
 
-    public java.util.Iterator<String> getSuccessIterator() {
+    public java.util.Iterator<Partition> getSuccessIterator() {
       return (this.success == null) ? null : this.success.iterator();
     }
 
-    public void addToSuccess(String elem) {
+    public void addToSuccess(Partition elem) {
       if (this.success == null) {
-        this.success = new ArrayList<String>();
+        this.success = new ArrayList<Partition>();
       }
       this.success.add(elem);
     }
 
-    public List<String> getSuccess() {
+    public List<Partition> getSuccess() {
       return this.success;
     }
 
-    public void setSuccess(List<String> success) {
+    public void setSuccess(List<Partition> success) {
       this.success = success;
     }
 
@@ -75286,7 +76679,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetSuccess();
         } else {
-          setSuccess((List<String>)value);
+          setSuccess((List<Partition>)value);
         }
         break;
 
@@ -75345,12 +76738,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partition_names_ps_result)
-        return this.equals((get_partition_names_ps_result)that);
+      if (that instanceof get_partitions_by_filter_result)
+        return this.equals((get_partitions_by_filter_result)that);
       return false;
     }
 
-    public boolean equals(get_partition_names_ps_result that) {
+    public boolean equals(get_partitions_by_filter_result that) {
       if (that == null)
         return false;
 
@@ -75406,13 +76799,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partition_names_ps_result other) {
+    public int compareTo(get_partitions_by_filter_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partition_names_ps_result typedOther = (get_partition_names_ps_result)other;
+      get_partitions_by_filter_result typedOther = (get_partitions_by_filter_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -75461,7 +76854,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partition_names_ps_result(");
+      StringBuilder sb = new StringBuilder("get_partitions_by_filter_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -75512,15 +76905,15 @@ private void readObject(java.io.ObjectInputStream in) throws java.io.IOException
       }
     }
 
-    private static class get_partition_names_ps_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partition_names_ps_resultStandardScheme getScheme() {
-        return new get_partition_names_ps_resultStandardScheme();
+    private static class get_partitions_by_filter_resultStandardSchemeFactory implements SchemeFactory {
+      public get_partitions_by_filter_resultStandardScheme getScheme() {
+        return new get_partitions_by_filter_resultStandardScheme();
       }
     }
 
-    private static class get_partition_names_ps_resultStandardScheme extends StandardScheme<get_partition_names_ps_result> {
+    private static class get_partitions_by_filter_resultStandardScheme extends StandardScheme<get_partitions_by_filter_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -75533,13 +76926,14 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                 {
-                  org.apache.thrift.protocol.TList _list826 = iprot.readListBegin();
-                  struct.success = new ArrayList<String>(_list826.size);
-                  for (int _i827 = 0; _i827 < _list826.size; ++_i827)
+                  org.apache.thrift.protocol.TList _list834 = iprot.readListBegin();
+                  struct.success = new ArrayList<Partition>(_list834.size);
+                  for (int _i835 = 0; _i835 < _list834.size; ++_i835)
                   {
-                    String _elem828; // required
-                    _elem828 = iprot.readString();
-                    struct.success.add(_elem828);
+                    Partition _elem836; // required
+                    _elem836 = new Partition();
+                    _elem836.read(iprot);
+                    struct.success.add(_elem836);
                   }
                   iprot.readListEnd();
                 }
@@ -75575,17 +76969,17 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partition_names
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
         if (struct.success != null) {
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
           {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.success.size()));
-            for (String _iter829 : struct.success)
+            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
+            for (Partition _iter837 : struct.success)
             {
-              oprot.writeString(_iter829);
+              _iter837.write(oprot);
             }
             oprot.writeListEnd();
           }
@@ -75607,16 +77001,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partition_name
 
     }
 
-    private static class get_partition_names_ps_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partition_names_ps_resultTupleScheme getScheme() {
-        return new get_partition_names_ps_resultTupleScheme();
+    private static class get_partitions_by_filter_resultTupleSchemeFactory implements SchemeFactory {
+      public get_partitions_by_filter_resultTupleScheme getScheme() {
+        return new get_partitions_by_filter_resultTupleScheme();
       }
     }
 
-    private static class get_partition_names_ps_resultTupleScheme extends TupleScheme<get_partition_names_ps_result> {
+    private static class get_partitions_by_filter_resultTupleScheme extends TupleScheme<get_partitions_by_filter_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -75632,9 +77026,9 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names
         if (struct.isSetSuccess()) {
           {
             oprot.writeI32(struct.success.size());
-            for (String _iter830 : struct.success)
+            for (Partition _iter838 : struct.success)
             {
-              oprot.writeString(_iter830);
+              _iter838.write(oprot);
             }
           }
         }
@@ -75647,18 +77041,19 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partition_names
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_ps_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           {
-            org.apache.thrift.protocol.TList _list831 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
-            struct.success = new ArrayList<String>(_list831.size);
-            for (int _i832 = 0; _i832 < _list831.size; ++_i832)
+            org.apache.thrift.protocol.TList _list839 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
+            struct.success = new ArrayList<Partition>(_list839.size);
+            for (int _i840 = 0; _i840 < _list839.size; ++_i840)
             {
-              String _elem833; // required
-              _elem833 = iprot.readString();
-              struct.success.add(_elem833);
+              Partition _elem841; // required
+              _elem841 = new Partition();
+              _elem841.read(iprot);
+              struct.success.add(_elem841);
             }
           }
           struct.setSuccessIsSet(true);
@@ -75678,31 +77073,28 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partition_names_
 
   }
 
-  public static class get_partitions_by_filter_args implements org.apache.thrift.TBase<get_partitions_by_filter_args, get_partitions_by_filter_args._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_by_filter_args");
+  public static class get_num_partitions_by_filter_args implements org.apache.thrift.TBase<get_num_partitions_by_filter_args, get_num_partitions_by_filter_args._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_num_partitions_by_filter_args");
 
     private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("db_name", org.apache.thrift.protocol.TType.STRING, (short)1);
     private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("tbl_name", org.apache.thrift.protocol.TType.STRING, (short)2);
     private static final org.apache.thrift.protocol.TField FILTER_FIELD_DESC = new org.apache.thrift.protocol.TField("filter", org.apache.thrift.protocol.TType.STRING, (short)3);
-    private static final org.apache.thrift.protocol.TField MAX_PARTS_FIELD_DESC = new org.apache.thrift.protocol.TField("max_parts", org.apache.thrift.protocol.TType.I16, (short)4);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_by_filter_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_by_filter_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_num_partitions_by_filter_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_num_partitions_by_filter_argsTupleSchemeFactory());
     }
 
     private String db_name; // required
     private String tbl_name; // required
     private String filter; // required
-    private short max_parts; // required
 
     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
     public enum _Fields implements org.apache.thrift.TFieldIdEnum {
       DB_NAME((short)1, "db_name"),
       TBL_NAME((short)2, "tbl_name"),
-      FILTER((short)3, "filter"),
-      MAX_PARTS((short)4, "max_parts");
+      FILTER((short)3, "filter");
 
       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
 
@@ -75723,8 +77115,6 @@ public static _Fields findByThriftId(int fieldId) {
             return TBL_NAME;
           case 3: // FILTER
             return FILTER;
-          case 4: // MAX_PARTS
-            return MAX_PARTS;
           default:
             return null;
         }
@@ -75765,8 +77155,6 @@ public String getFieldName() {
     }
 
     // isset id assignments
-    private static final int __MAX_PARTS_ISSET_ID = 0;
-    private byte __isset_bitfield = 0;
     public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
     static {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
@@ -75776,36 +77164,28 @@ public String getFieldName() {
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       tmpMap.put(_Fields.FILTER, new org.apache.thrift.meta_data.FieldMetaData("filter", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
-      tmpMap.put(_Fields.MAX_PARTS, new org.apache.thrift.meta_data.FieldMetaData("max_parts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_by_filter_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_num_partitions_by_filter_args.class, metaDataMap);
     }
 
-    public get_partitions_by_filter_args() {
-      this.max_parts = (short)-1;
-
+    public get_num_partitions_by_filter_args() {
     }
 
-    public get_partitions_by_filter_args(
+    public get_num_partitions_by_filter_args(
       String db_name,
       String tbl_name,
-      String filter,
-      short max_parts)
+      String filter)
     {
       this();
       this.db_name = db_name;
       this.tbl_name = tbl_name;
       this.filter = filter;
-      this.max_parts = max_parts;
-      setMax_partsIsSet(true);
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_by_filter_args(get_partitions_by_filter_args other) {
-      __isset_bitfield = other.__isset_bitfield;
+    public get_num_partitions_by_filter_args(get_num_partitions_by_filter_args other) {
       if (other.isSetDb_name()) {
         this.db_name = other.db_name;
       }
@@ -75815,11 +77195,10 @@ public get_partitions_by_filter_args(get_partitions_by_filter_args other) {
       if (other.isSetFilter()) {
         this.filter = other.filter;
       }
-      this.max_parts = other.max_parts;
     }
 
-    public get_partitions_by_filter_args deepCopy() {
-      return new get_partitions_by_filter_args(this);
+    public get_num_partitions_by_filter_args deepCopy() {
+      return new get_num_partitions_by_filter_args(this);
     }
 
     @Override
@@ -75827,8 +77206,6 @@ public void clear() {
       this.db_name = null;
       this.tbl_name = null;
       this.filter = null;
-      this.max_parts = (short)-1;
-
     }
 
     public String getDb_name() {
@@ -75900,28 +77277,6 @@ public void setFilterIsSet(boolean value) {
       }
     }
 
-    public short getMax_parts() {
-      return this.max_parts;
-    }
-
-    public void setMax_parts(short max_parts) {
-      this.max_parts = max_parts;
-      setMax_partsIsSet(true);
-    }
-
-    public void unsetMax_parts() {
-      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAX_PARTS_ISSET_ID);
-    }
-
-    /** Returns true if field max_parts is set (has been assigned a value) and false otherwise */
-    public boolean isSetMax_parts() {
-      return EncodingUtils.testBit(__isset_bitfield, __MAX_PARTS_ISSET_ID);
-    }
-
-    public void setMax_partsIsSet(boolean value) {
-      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_PARTS_ISSET_ID, value);
-    }
-
     public void setFieldValue(_Fields field, Object value) {
       switch (field) {
       case DB_NAME:
@@ -75948,14 +77303,6 @@ public void setFieldValue(_Fields field, Object value) {
         }
         break;
 
-      case MAX_PARTS:
-        if (value == null) {
-          unsetMax_parts();
-        } else {
-          setMax_parts((Short)value);
-        }
-        break;
-
       }
     }
 
@@ -75970,9 +77317,6 @@ public Object getFieldValue(_Fields field) {
       case FILTER:
         return getFilter();
 
-      case MAX_PARTS:
-        return Short.valueOf(getMax_parts());
-
       }
       throw new IllegalStateException();
     }
@@ -75990,8 +77334,6 @@ public boolean isSet(_Fields field) {
         return isSetTbl_name();
       case FILTER:
         return isSetFilter();
-      case MAX_PARTS:
-        return isSetMax_parts();
       }
       throw new IllegalStateException();
     }
@@ -76000,12 +77342,12 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_by_filter_args)
-        return this.equals((get_partitions_by_filter_args)that);
+      if (that instanceof get_num_partitions_by_filter_args)
+        return this.equals((get_num_partitions_by_filter_args)that);
       return false;
     }
 
-    public boolean equals(get_partitions_by_filter_args that) {
+    public boolean equals(get_num_partitions_by_filter_args that) {
       if (that == null)
         return false;
 
@@ -76036,15 +77378,6 @@ public boolean equals(get_partitions_by_filter_args that) {
           return false;
       }
 
-      boolean this_present_max_parts = true;
-      boolean that_present_max_parts = true;
-      if (this_present_max_parts || that_present_max_parts) {
-        if (!(this_present_max_parts && that_present_max_parts))
-          return false;
-        if (this.max_parts != that.max_parts)
-          return false;
-      }
-
       return true;
     }
 
@@ -76067,21 +77400,16 @@ public int hashCode() {
       if (present_filter)
         builder.append(filter);
 
-      boolean present_max_parts = true;
-      builder.append(present_max_parts);
-      if (present_max_parts)
-        builder.append(max_parts);
-
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_by_filter_args other) {
+    public int compareTo(get_num_partitions_by_filter_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_by_filter_args typedOther = (get_partitions_by_filter_args)other;
+      get_num_partitions_by_filter_args typedOther = (get_num_partitions_by_filter_args)other;
 
       lastComparison = Boolean.valueOf(isSetDb_name()).compareTo(typedOther.isSetDb_name());
       if (lastComparison != 0) {
@@ -76113,16 +77441,6 @@ public int compareTo(get_partitions_by_filter_args other) {
           return lastComparison;
         }
       }
-      lastComparison = Boolean.valueOf(isSetMax_parts()).compareTo(typedOther.isSetMax_parts());
-      if (lastComparison != 0) {
-        return lastComparison;
-      }
-      if (isSetMax_parts()) {
-        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.max_parts, typedOther.max_parts);
-        if (lastComparison != 0) {
-          return lastComparison;
-        }
-      }
       return 0;
     }
 
@@ -76140,7 +77458,7 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_by_filter_args(");
+      StringBuilder sb = new StringBuilder("get_num_partitions_by_filter_args(");
       boolean first = true;
 
       sb.append("db_name:");
@@ -76166,10 +77484,6 @@ public String toString() {
         sb.append(this.filter);
       }
       first = false;
-      if (!first) sb.append(", ");
-      sb.append("max_parts:");
-      sb.append(this.max_parts);
-      first = false;
       sb.append(")");
       return sb.toString();
     }
@@ -76189,23 +77503,21 @@ private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOExcept
 
     private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
       try {
-        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
-        __isset_bitfield = 0;
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
         throw new java.io.IOException(te);
       }
     }
 
-    private static class get_partitions_by_filter_argsStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_by_filter_argsStandardScheme getScheme() {
-        return new get_partitions_by_filter_argsStandardScheme();
+    private static class get_num_partitions_by_filter_argsStandardSchemeFactory implements SchemeFactory {
+      public get_num_partitions_by_filter_argsStandardScheme getScheme() {
+        return new get_num_partitions_by_filter_argsStandardScheme();
       }
     }
 
-    private static class get_partitions_by_filter_argsStandardScheme extends StandardScheme<get_partitions_by_filter_args> {
+    private static class get_num_partitions_by_filter_argsStandardScheme extends StandardScheme<get_num_partitions_by_filter_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_num_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -76239,14 +77551,6 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_f
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
               }
               break;
-            case 4: // MAX_PARTS
-              if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
-                struct.max_parts = iprot.readI16();
-                struct.setMax_partsIsSet(true);
-              } else { 
-                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
-              }
-              break;
             default:
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
           }
@@ -76256,7 +77560,7 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_f
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_num_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -76275,25 +77579,22 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_by_
           oprot.writeString(struct.filter);
           oprot.writeFieldEnd();
         }
-        oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
-        oprot.writeI16(struct.max_parts);
-        oprot.writeFieldEnd();
         oprot.writeFieldStop();
         oprot.writeStructEnd();
       }
 
     }
 
-    private static class get_partitions_by_filter_argsTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_by_filter_argsTupleScheme getScheme() {
-        return new get_partitions_by_filter_argsTupleScheme();
+    private static class get_num_partitions_by_filter_argsTupleSchemeFactory implements SchemeFactory {
+      public get_num_partitions_by_filter_argsTupleScheme getScheme() {
+        return new get_num_partitions_by_filter_argsTupleScheme();
       }
     }
 
-    private static class get_partitions_by_filter_argsTupleScheme extends TupleScheme<get_partitions_by_filter_args> {
+    private static class get_num_partitions_by_filter_argsTupleScheme extends TupleScheme<get_num_partitions_by_filter_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_num_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetDb_name()) {
@@ -76305,10 +77606,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_f
         if (struct.isSetFilter()) {
           optionals.set(2);
         }
-        if (struct.isSetMax_parts()) {
-          optionals.set(3);
-        }
-        oprot.writeBitSet(optionals, 4);
+        oprot.writeBitSet(optionals, 3);
         if (struct.isSetDb_name()) {
           oprot.writeString(struct.db_name);
         }
@@ -76318,15 +77616,12 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_f
         if (struct.isSetFilter()) {
           oprot.writeString(struct.filter);
         }
-        if (struct.isSetMax_parts()) {
-          oprot.writeI16(struct.max_parts);
-        }
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_num_partitions_by_filter_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
-        BitSet incoming = iprot.readBitSet(4);
+        BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
           struct.db_name = iprot.readString();
           struct.setDb_nameIsSet(true);
@@ -76339,29 +77634,25 @@ public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_fi
           struct.filter = iprot.readString();
           struct.setFilterIsSet(true);
         }
-        if (incoming.get(3)) {
-          struct.max_parts = iprot.readI16();
-          struct.setMax_partsIsSet(true);
-        }
       }
     }
 
   }
 
-  public static class get_partitions_by_filter_result implements org.apache.thrift.TBase<get_partitions_by_filter_result, get_partitions_by_filter_result._Fields>, java.io.Serializable, Cloneable   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_partitions_by_filter_result");
+  public static class get_num_partitions_by_filter_result implements org.apache.thrift.TBase<get_num_partitions_by_filter_result, get_num_partitions_by_filter_result._Fields>, java.io.Serializable, Cloneable   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("get_num_partitions_by_filter_result");
 
-    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
+    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);
     private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField("o1", org.apache.thrift.protocol.TType.STRUCT, (short)1);
     private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField("o2", org.apache.thrift.protocol.TType.STRUCT, (short)2);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new get_partitions_by_filter_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new get_partitions_by_filter_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new get_num_partitions_by_filter_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new get_num_partitions_by_filter_resultTupleSchemeFactory());
     }
 
-    private List<Partition> success; // required
+    private int success; // required
     private MetaException o1; // required
     private NoSuchObjectException o2; // required
 
@@ -76430,30 +77721,32 @@ public String getFieldName() {
     }
 
     // isset id assignments
+    private static final int __SUCCESS_ISSET_ID = 0;
+    private byte __isset_bitfield = 0;
     public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
     static {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
-          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
-              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));
+          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
       tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData("o1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData("o2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_by_filter_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_num_partitions_by_filter_result.class, metaDataMap);
     }
 
-    public get_partitions_by_filter_result() {
+    public get_num_partitions_by_filter_result() {
     }
 
-    public get_partitions_by_filter_result(
-      List<Partition> success,
+    public get_num_partitions_by_filter_result(
+      int success,
       MetaException o1,
       NoSuchObjectException o2)
     {
       this();
       this.success = success;
+      setSuccessIsSet(true);
       this.o1 = o1;
       this.o2 = o2;
     }
@@ -76461,14 +77754,9 @@ public get_partitions_by_filter_result(
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public get_partitions_by_filter_result(get_partitions_by_filter_result other) {
-      if (other.isSetSuccess()) {
-        List<Partition> __this__success = new ArrayList<Partition>();
-        for (Partition other_element : other.success) {
-          __this__success.add(new Partition(other_element));
-        }
-        this.success = __this__success;
-      }
+    public get_num_partitions_by_filter_result(get_num_partitions_by_filter_result other) {
+      __isset_bitfield = other.__isset_bitfield;
+      this.success = other.success;
       if (other.isSetO1()) {
         this.o1 = new MetaException(other.o1);
       }
@@ -76477,53 +77765,38 @@ public get_partitions_by_filter_result(get_partitions_by_filter_result other) {
       }
     }
 
-    public get_partitions_by_filter_result deepCopy() {
-      return new get_partitions_by_filter_result(this);
+    public get_num_partitions_by_filter_result deepCopy() {
+      return new get_num_partitions_by_filter_result(this);
     }
 
     @Override
     public void clear() {
-      this.success = null;
+      setSuccessIsSet(false);
+      this.success = 0;
       this.o1 = null;
       this.o2 = null;
     }
 
-    public int getSuccessSize() {
-      return (this.success == null) ? 0 : this.success.size();
-    }
-
-    public java.util.Iterator<Partition> getSuccessIterator() {
-      return (this.success == null) ? null : this.success.iterator();
-    }
-
-    public void addToSuccess(Partition elem) {
-      if (this.success == null) {
-        this.success = new ArrayList<Partition>();
-      }
-      this.success.add(elem);
-    }
-
-    public List<Partition> getSuccess() {
+    public int getSuccess() {
       return this.success;
     }
 
-    public void setSuccess(List<Partition> success) {
+    public void setSuccess(int success) {
       this.success = success;
+      setSuccessIsSet(true);
     }
 
     public void unsetSuccess() {
-      this.success = null;
+      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
     }
 
     /** Returns true if field success is set (has been assigned a value) and false otherwise */
     public boolean isSetSuccess() {
-      return this.success != null;
+      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
     }
 
     public void setSuccessIsSet(boolean value) {
-      if (!value) {
-        this.success = null;
-      }
+      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
     }
 
     public MetaException getO1() {
@@ -76578,7 +77851,7 @@ public void setFieldValue(_Fields field, Object value) {
         if (value == null) {
           unsetSuccess();
         } else {
-          setSuccess((List<Partition>)value);
+          setSuccess((Integer)value);
         }
         break;
 
@@ -76604,7 +77877,7 @@ public void setFieldValue(_Fields field, Object value) {
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
-        return getSuccess();
+        return Integer.valueOf(getSuccess());
 
       case O1:
         return getO1();
@@ -76637,21 +77910,21 @@ public boolean isSet(_Fields field) {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof get_partitions_by_filter_result)
-        return this.equals((get_partitions_by_filter_result)that);
+      if (that instanceof get_num_partitions_by_filter_result)
+        return this.equals((get_num_partitions_by_filter_result)that);
       return false;
     }
 
-    public boolean equals(get_partitions_by_filter_result that) {
+    public boolean equals(get_num_partitions_by_filter_result that) {
       if (that == null)
         return false;
 
-      boolean this_present_success = true && this.isSetSuccess();
-      boolean that_present_success = true && that.isSetSuccess();
+      boolean this_present_success = true;
+      boolean that_present_success = true;
       if (this_present_success || that_present_success) {
         if (!(this_present_success && that_present_success))
           return false;
-        if (!this.success.equals(that.success))
+        if (this.success != that.success)
           return false;
       }
 
@@ -76680,7 +77953,7 @@ public boolean equals(get_partitions_by_filter_result that) {
     public int hashCode() {
       HashCodeBuilder builder = new HashCodeBuilder();
 
-      boolean present_success = true && (isSetSuccess());
+      boolean present_success = true;
       builder.append(present_success);
       if (present_success)
         builder.append(success);
@@ -76698,13 +77971,13 @@ public int hashCode() {
       return builder.toHashCode();
     }
 
-    public int compareTo(get_partitions_by_filter_result other) {
+    public int compareTo(get_num_partitions_by_filter_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
 
       int lastComparison = 0;
-      get_partitions_by_filter_result typedOther = (get_partitions_by_filter_result)other;
+      get_num_partitions_by_filter_result typedOther = (get_num_partitions_by_filter_result)other;
 
       lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
       if (lastComparison != 0) {
@@ -76753,15 +78026,11 @@ public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("get_partitions_by_filter_result(");
+      StringBuilder sb = new StringBuilder("get_num_partitions_by_filter_result(");
       boolean first = true;
 
       sb.append("success:");
-      if (this.success == null) {
-        sb.append("null");
-      } else {
-        sb.append(this.success);
-      }
+      sb.append(this.success);
       first = false;
       if (!first) sb.append(", ");
       sb.append("o1:");
@@ -76798,21 +78067,23 @@ private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOExcept
 
     private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
       try {
+        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
+        __isset_bitfield = 0;
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
         throw new java.io.IOException(te);
       }
     }
 
-    private static class get_partitions_by_filter_resultStandardSchemeFactory implements SchemeFactory {
-      public get_partitions_by_filter_resultStandardScheme getScheme() {
-        return new get_partitions_by_filter_resultStandardScheme();
+    private static class get_num_partitions_by_filter_resultStandardSchemeFactory implements SchemeFactory {
+      public get_num_partitions_by_filter_resultStandardScheme getScheme() {
+        return new get_num_partitions_by_filter_resultStandardScheme();
       }
     }
 
-    private static class get_partitions_by_filter_resultStandardScheme extends StandardScheme<get_partitions_by_filter_result> {
+    private static class get_num_partitions_by_filter_resultStandardScheme extends StandardScheme<get_num_partitions_by_filter_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, get_num_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -76823,19 +78094,8 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_f
           }
           switch (schemeField.id) {
             case 0: // SUCCESS
-              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
-                {
-                  org.apache.thrift.protocol.TList _list834 = iprot.readListBegin();
-                  struct.success = new ArrayList<Partition>(_list834.size);
-                  for (int _i835 = 0; _i835 < _list834.size; ++_i835)
-                  {
-                    Partition _elem836; // required
-                    _elem836 = new Partition();
-                    _elem836.read(iprot);
-                    struct.success.add(_elem836);
-                  }
-                  iprot.readListEnd();
-                }
+              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
+                struct.success = iprot.readI32();
                 struct.setSuccessIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -76868,20 +78128,13 @@ public void read(org.apache.thrift.protocol.TProtocol iprot, get_partitions_by_f
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, get_num_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
-        if (struct.success != null) {
+        if (struct.isSetSuccess()) {
           oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
-          {
-            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
-            for (Partition _iter837 : struct.success)
-            {
-              _iter837.write(oprot);
-            }
-            oprot.writeListEnd();
-          }
+          oprot.writeI32(struct.success);
           oprot.writeFieldEnd();
         }
         if (struct.o1 != null) {
@@ -76900,16 +78153,16 @@ public void write(org.apache.thrift.protocol.TProtocol oprot, get_partitions_by_
 
     }
 
-    private static class get_partitions_by_filter_resultTupleSchemeFactory implements SchemeFactory {
-      public get_partitions_by_filter_resultTupleScheme getScheme() {
-        return new get_partitions_by_filter_resultTupleScheme();
+    private static class get_num_partitions_by_filter_resultTupleSchemeFactory implements SchemeFactory {
+      public get_num_partitions_by_filter_resultTupleScheme getScheme() {
+        return new get_num_partitions_by_filter_resultTupleScheme();
       }
     }
 
-    private static class get_partitions_by_filter_resultTupleScheme extends TupleScheme<get_partitions_by_filter_result> {
+    private static class get_num_partitions_by_filter_resultTupleScheme extends TupleScheme<get_num_partitions_by_filter_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, get_num_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -76923,13 +78176,7 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_f
         }
         oprot.writeBitSet(optionals, 3);
         if (struct.isSetSuccess()) {
-          {
-            oprot.writeI32(struct.success.size());
-            for (Partition _iter838 : struct.success)
-            {
-              _iter838.write(oprot);
-            }
-          }
+          oprot.writeI32(struct.success);
         }
         if (struct.isSetO1()) {
           struct.o1.write(oprot);
@@ -76940,21 +78187,11 @@ public void write(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_f
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, get_partitions_by_filter_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, get_num_partitions_by_filter_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(3);
         if (incoming.get(0)) {
-          {
-            org.apache.thrift.protocol.TList _list839 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
-            struct.success = new ArrayList<Partition>(_list839.size);
-            for (int _i840 = 0; _i840 < _list839.size; ++_i840)
-            {
-              Partition _elem841; // required
-              _elem841 = new Partition();
-              _elem841.read(iprot);
-              struct.success.add(_elem841);
-            }
-          }
+          struct.success = iprot.readI32();
           struct.setSuccessIsSet(true);
         }
         if (incoming.get(1)) {
diff --git a/metastore/src/gen/thrift/gen-php/metastore/ThriftHiveMetastore.php b/metastore/src/gen/thrift/gen-php/metastore/ThriftHiveMetastore.php
index 529d55f..8bef609 100644
--- a/metastore/src/gen/thrift/gen-php/metastore/ThriftHiveMetastore.php
+++ b/metastore/src/gen/thrift/gen-php/metastore/ThriftHiveMetastore.php
@@ -72,6 +72,7 @@ interface ThriftHiveMetastoreIf extends \FacebookServiceIf {
   public function get_partitions_ps_with_auth($db_name, $tbl_name, $part_vals, $max_parts, $user_name, $group_names);
   public function get_partition_names_ps($db_name, $tbl_name, $part_vals, $max_parts);
   public function get_partitions_by_filter($db_name, $tbl_name, $filter, $max_parts);
+  public function get_num_partitions_by_filter($db_name, $tbl_name, $filter);
   public function get_part_specs_by_filter($db_name, $tbl_name, $filter, $max_parts);
   public function get_partitions_by_expr(\metastore\PartitionsByExprRequest $req);
   public function get_partitions_by_names($db_name, $tbl_name, $names);
@@ -3454,6 +3455,65 @@ class ThriftHiveMetastoreClient extends \FacebookServiceClient implements \metas
     throw new \Exception("get_partitions_by_filter failed: unknown result");
   }
 
+  public function get_num_partitions_by_filter($db_name, $tbl_name, $filter)
+  {
+    $this->send_get_num_partitions_by_filter($db_name, $tbl_name, $filter);
+    return $this->recv_get_num_partitions_by_filter();
+  }
+
+  public function send_get_num_partitions_by_filter($db_name, $tbl_name, $filter)
+  {
+    $args = new \metastore\ThriftHiveMetastore_get_num_partitions_by_filter_args();
+    $args->db_name = $db_name;
+    $args->tbl_name = $tbl_name;
+    $args->filter = $filter;
+    $bin_accel = ($this->output_ instanceof TProtocol::$TBINARYPROTOCOLACCELERATED) && function_exists('thrift_protocol_write_binary');
+    if ($bin_accel)
+    {
+      thrift_protocol_write_binary($this->output_, 'get_num_partitions_by_filter', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
+    }
+    else
+    {
+      $this->output_->writeMessageBegin('get_num_partitions_by_filter', TMessageType::CALL, $this->seqid_);
+      $args->write($this->output_);
+      $this->output_->writeMessageEnd();
+      $this->output_->getTransport()->flush();
+    }
+  }
+
+  public function recv_get_num_partitions_by_filter()
+  {
+    $bin_accel = ($this->input_ instanceof TProtocol::$TBINARYPROTOCOLACCELERATED) && function_exists('thrift_protocol_read_binary');
+    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\metastore\ThriftHiveMetastore_get_num_partitions_by_filter_result', $this->input_->isStrictRead());
+    else
+    {
+      $rseqid = 0;
+      $fname = null;
+      $mtype = 0;
+
+      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
+      if ($mtype == TMessageType::EXCEPTION) {
+        $x = new TApplicationException();
+        $x->read($this->input_);
+        $this->input_->readMessageEnd();
+        throw $x;
+      }
+      $result = new \metastore\ThriftHiveMetastore_get_num_partitions_by_filter_result();
+      $result->read($this->input_);
+      $this->input_->readMessageEnd();
+    }
+    if ($result->success !== null) {
+      return $result->success;
+    }
+    if ($result->o1 !== null) {
+      throw $result->o1;
+    }
+    if ($result->o2 !== null) {
+      throw $result->o2;
+    }
+    throw new \Exception("get_num_partitions_by_filter failed: unknown result");
+  }
+
   public function get_part_specs_by_filter($db_name, $tbl_name, $filter, $max_parts)
   {
     $this->send_get_part_specs_by_filter($db_name, $tbl_name, $filter, $max_parts);
@@ -21237,6 +21297,234 @@ class ThriftHiveMetastore_get_partitions_by_filter_result {
 
 }
 
+class ThriftHiveMetastore_get_num_partitions_by_filter_args {
+  static $_TSPEC;
+
+  public $db_name = null;
+  public $tbl_name = null;
+  public $filter = null;
+
+  public function __construct($vals=null) {
+    if (!isset(self::$_TSPEC)) {
+      self::$_TSPEC = array(
+        1 => array(
+          'var' => 'db_name',
+          'type' => TType::STRING,
+          ),
+        2 => array(
+          'var' => 'tbl_name',
+          'type' => TType::STRING,
+          ),
+        3 => array(
+          'var' => 'filter',
+          'type' => TType::STRING,
+          ),
+        );
+    }
+    if (is_array($vals)) {
+      if (isset($vals['db_name'])) {
+        $this->db_name = $vals['db_name'];
+      }
+      if (isset($vals['tbl_name'])) {
+        $this->tbl_name = $vals['tbl_name'];
+      }
+      if (isset($vals['filter'])) {
+        $this->filter = $vals['filter'];
+      }
+    }
+  }
+
+  public function getName() {
+    return 'ThriftHiveMetastore_get_num_partitions_by_filter_args';
+  }
+
+  public function read($input)
+  {
+    $xfer = 0;
+    $fname = null;
+    $ftype = 0;
+    $fid = 0;
+    $xfer += $input->readStructBegin($fname);
+    while (true)
+    {
+      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
+      if ($ftype == TType::STOP) {
+        break;
+      }
+      switch ($fid)
+      {
+        case 1:
+          if ($ftype == TType::STRING) {
+            $xfer += $input->readString($this->db_name);
+          } else {
+            $xfer += $input->skip($ftype);
+          }
+          break;
+        case 2:
+          if ($ftype == TType::STRING) {
+            $xfer += $input->readString($this->tbl_name);
+          } else {
+            $xfer += $input->skip($ftype);
+          }
+          break;
+        case 3:
+          if ($ftype == TType::STRING) {
+            $xfer += $input->readString($this->filter);
+          } else {
+            $xfer += $input->skip($ftype);
+          }
+          break;
+        default:
+          $xfer += $input->skip($ftype);
+          break;
+      }
+      $xfer += $input->readFieldEnd();
+    }
+    $xfer += $input->readStructEnd();
+    return $xfer;
+  }
+
+  public function write($output) {
+    $xfer = 0;
+    $xfer += $output->writeStructBegin('ThriftHiveMetastore_get_num_partitions_by_filter_args');
+    if ($this->db_name !== null) {
+      $xfer += $output->writeFieldBegin('db_name', TType::STRING, 1);
+      $xfer += $output->writeString($this->db_name);
+      $xfer += $output->writeFieldEnd();
+    }
+    if ($this->tbl_name !== null) {
+      $xfer += $output->writeFieldBegin('tbl_name', TType::STRING, 2);
+      $xfer += $output->writeString($this->tbl_name);
+      $xfer += $output->writeFieldEnd();
+    }
+    if ($this->filter !== null) {
+      $xfer += $output->writeFieldBegin('filter', TType::STRING, 3);
+      $xfer += $output->writeString($this->filter);
+      $xfer += $output->writeFieldEnd();
+    }
+    $xfer += $output->writeFieldStop();
+    $xfer += $output->writeStructEnd();
+    return $xfer;
+  }
+
+}
+
+class ThriftHiveMetastore_get_num_partitions_by_filter_result {
+  static $_TSPEC;
+
+  public $success = null;
+  public $o1 = null;
+  public $o2 = null;
+
+  public function __construct($vals=null) {
+    if (!isset(self::$_TSPEC)) {
+      self::$_TSPEC = array(
+        0 => array(
+          'var' => 'success',
+          'type' => TType::I32,
+          ),
+        1 => array(
+          'var' => 'o1',
+          'type' => TType::STRUCT,
+          'class' => '\metastore\MetaException',
+          ),
+        2 => array(
+          'var' => 'o2',
+          'type' => TType::STRUCT,
+          'class' => '\metastore\NoSuchObjectException',
+          ),
+        );
+    }
+    if (is_array($vals)) {
+      if (isset($vals['success'])) {
+        $this->success = $vals['success'];
+      }
+      if (isset($vals['o1'])) {
+        $this->o1 = $vals['o1'];
+      }
+      if (isset($vals['o2'])) {
+        $this->o2 = $vals['o2'];
+      }
+    }
+  }
+
+  public function getName() {
+    return 'ThriftHiveMetastore_get_num_partitions_by_filter_result';
+  }
+
+  public function read($input)
+  {
+    $xfer = 0;
+    $fname = null;
+    $ftype = 0;
+    $fid = 0;
+    $xfer += $input->readStructBegin($fname);
+    while (true)
+    {
+      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
+      if ($ftype == TType::STOP) {
+        break;
+      }
+      switch ($fid)
+      {
+        case 0:
+          if ($ftype == TType::I32) {
+            $xfer += $input->readI32($this->success);
+          } else {
+            $xfer += $input->skip($ftype);
+          }
+          break;
+        case 1:
+          if ($ftype == TType::STRUCT) {
+            $this->o1 = new \metastore\MetaException();
+            $xfer += $this->o1->read($input);
+          } else {
+            $xfer += $input->skip($ftype);
+          }
+          break;
+        case 2:
+          if ($ftype == TType::STRUCT) {
+            $this->o2 = new \metastore\NoSuchObjectException();
+            $xfer += $this->o2->read($input);
+          } else {
+            $xfer += $input->skip($ftype);
+          }
+          break;
+        default:
+          $xfer += $input->skip($ftype);
+          break;
+      }
+      $xfer += $input->readFieldEnd();
+    }
+    $xfer += $input->readStructEnd();
+    return $xfer;
+  }
+
+  public function write($output) {
+    $xfer = 0;
+    $xfer += $output->writeStructBegin('ThriftHiveMetastore_get_num_partitions_by_filter_result');
+    if ($this->success !== null) {
+      $xfer += $output->writeFieldBegin('success', TType::I32, 0);
+      $xfer += $output->writeI32($this->success);
+      $xfer += $output->writeFieldEnd();
+    }
+    if ($this->o1 !== null) {
+      $xfer += $output->writeFieldBegin('o1', TType::STRUCT, 1);
+      $xfer += $this->o1->write($output);
+      $xfer += $output->writeFieldEnd();
+    }
+    if ($this->o2 !== null) {
+      $xfer += $output->writeFieldBegin('o2', TType::STRUCT, 2);
+      $xfer += $this->o2->write($output);
+      $xfer += $output->writeFieldEnd();
+    }
+    $xfer += $output->writeFieldStop();
+    $xfer += $output->writeStructEnd();
+    return $xfer;
+  }
+
+}
+
 class ThriftHiveMetastore_get_part_specs_by_filter_args {
   static $_TSPEC;
 
diff --git a/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore-remote b/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore-remote
index c3f93cf..f263d4b 100755
--- a/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore-remote
+++ b/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore-remote
@@ -79,6 +79,7 @@ if len(sys.argv) <= 1 or sys.argv[1] == '--help':
   print '   get_partitions_ps_with_auth(string db_name, string tbl_name,  part_vals, i16 max_parts, string user_name,  group_names)'
   print '   get_partition_names_ps(string db_name, string tbl_name,  part_vals, i16 max_parts)'
   print '   get_partitions_by_filter(string db_name, string tbl_name, string filter, i16 max_parts)'
+  print '  i32 get_num_partitions_by_filter(string db_name, string tbl_name, string filter)'
   print '   get_part_specs_by_filter(string db_name, string tbl_name, string filter, i32 max_parts)'
   print '  PartitionsByExprResult get_partitions_by_expr(PartitionsByExprRequest req)'
   print '   get_partitions_by_names(string db_name, string tbl_name,  names)'
@@ -536,6 +537,12 @@ elif cmd == 'get_partitions_by_filter':
     sys.exit(1)
   pp.pprint(client.get_partitions_by_filter(args[0],args[1],args[2],eval(args[3]),))
 
+elif cmd == 'get_num_partitions_by_filter':
+  if len(args) != 3:
+    print 'get_num_partitions_by_filter requires 3 args'
+    sys.exit(1)
+  pp.pprint(client.get_num_partitions_by_filter(args[0],args[1],args[2],))
+
 elif cmd == 'get_part_specs_by_filter':
   if len(args) != 4:
     print 'get_part_specs_by_filter requires 4 args'
diff --git a/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore.py b/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore.py
index ef87582..54b2ba3 100644
--- a/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore.py
+++ b/metastore/src/gen/thrift/gen-py/hive_metastore/ThriftHiveMetastore.py
@@ -506,6 +506,15 @@ def get_partitions_by_filter(self, db_name, tbl_name, filter, max_parts):
     """
     pass
 
+  def get_num_partitions_by_filter(self, db_name, tbl_name, filter):
+    """
+    Parameters:
+     - db_name
+     - tbl_name
+     - filter
+    """
+    pass
+
   def get_part_specs_by_filter(self, db_name, tbl_name, filter, max_parts):
     """
     Parameters:
@@ -3148,6 +3157,44 @@ def recv_get_partitions_by_filter(self, ):
       raise result.o2
     raise TApplicationException(TApplicationException.MISSING_RESULT, "get_partitions_by_filter failed: unknown result");
 
+  def get_num_partitions_by_filter(self, db_name, tbl_name, filter):
+    """
+    Parameters:
+     - db_name
+     - tbl_name
+     - filter
+    """
+    self.send_get_num_partitions_by_filter(db_name, tbl_name, filter)
+    return self.recv_get_num_partitions_by_filter()
+
+  def send_get_num_partitions_by_filter(self, db_name, tbl_name, filter):
+    self._oprot.writeMessageBegin('get_num_partitions_by_filter', TMessageType.CALL, self._seqid)
+    args = get_num_partitions_by_filter_args()
+    args.db_name = db_name
+    args.tbl_name = tbl_name
+    args.filter = filter
+    args.write(self._oprot)
+    self._oprot.writeMessageEnd()
+    self._oprot.trans.flush()
+
+  def recv_get_num_partitions_by_filter(self, ):
+    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
+    if mtype == TMessageType.EXCEPTION:
+      x = TApplicationException()
+      x.read(self._iprot)
+      self._iprot.readMessageEnd()
+      raise x
+    result = get_num_partitions_by_filter_result()
+    result.read(self._iprot)
+    self._iprot.readMessageEnd()
+    if result.success is not None:
+      return result.success
+    if result.o1 is not None:
+      raise result.o1
+    if result.o2 is not None:
+      raise result.o2
+    raise TApplicationException(TApplicationException.MISSING_RESULT, "get_num_partitions_by_filter failed: unknown result");
+
   def get_part_specs_by_filter(self, db_name, tbl_name, filter, max_parts):
     """
     Parameters:
@@ -5618,6 +5665,7 @@ def __init__(self, handler):
     self._processMap["get_partitions_ps_with_auth"] = Processor.process_get_partitions_ps_with_auth
     self._processMap["get_partition_names_ps"] = Processor.process_get_partition_names_ps
     self._processMap["get_partitions_by_filter"] = Processor.process_get_partitions_by_filter
+    self._processMap["get_num_partitions_by_filter"] = Processor.process_get_num_partitions_by_filter
     self._processMap["get_part_specs_by_filter"] = Processor.process_get_part_specs_by_filter
     self._processMap["get_partitions_by_expr"] = Processor.process_get_partitions_by_expr
     self._processMap["get_partitions_by_names"] = Processor.process_get_partitions_by_names
@@ -6634,6 +6682,22 @@ def process_get_partitions_by_filter(self, seqid, iprot, oprot):
     oprot.writeMessageEnd()
     oprot.trans.flush()
 
+  def process_get_num_partitions_by_filter(self, seqid, iprot, oprot):
+    args = get_num_partitions_by_filter_args()
+    args.read(iprot)
+    iprot.readMessageEnd()
+    result = get_num_partitions_by_filter_result()
+    try:
+      result.success = self._handler.get_num_partitions_by_filter(args.db_name, args.tbl_name, args.filter)
+    except MetaException as o1:
+      result.o1 = o1
+    except NoSuchObjectException as o2:
+      result.o2 = o2
+    oprot.writeMessageBegin("get_num_partitions_by_filter", TMessageType.REPLY, seqid)
+    result.write(oprot)
+    oprot.writeMessageEnd()
+    oprot.trans.flush()
+
   def process_get_part_specs_by_filter(self, seqid, iprot, oprot):
     args = get_part_specs_by_filter_args()
     args.read(iprot)
@@ -17432,6 +17496,175 @@ def __eq__(self, other):
   def __ne__(self, other):
     return not (self == other)
 
+class get_num_partitions_by_filter_args:
+  """
+  Attributes:
+   - db_name
+   - tbl_name
+   - filter
+  """
+
+  thrift_spec = (
+    None, # 0
+    (1, TType.STRING, 'db_name', None, None, ), # 1
+    (2, TType.STRING, 'tbl_name', None, None, ), # 2
+    (3, TType.STRING, 'filter', None, None, ), # 3
+  )
+
+  def __init__(self, db_name=None, tbl_name=None, filter=None,):
+    self.db_name = db_name
+    self.tbl_name = tbl_name
+    self.filter = filter
+
+  def read(self, iprot):
+    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
+      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
+      return
+    iprot.readStructBegin()
+    while True:
+      (fname, ftype, fid) = iprot.readFieldBegin()
+      if ftype == TType.STOP:
+        break
+      if fid == 1:
+        if ftype == TType.STRING:
+          self.db_name = iprot.readString();
+        else:
+          iprot.skip(ftype)
+      elif fid == 2:
+        if ftype == TType.STRING:
+          self.tbl_name = iprot.readString();
+        else:
+          iprot.skip(ftype)
+      elif fid == 3:
+        if ftype == TType.STRING:
+          self.filter = iprot.readString();
+        else:
+          iprot.skip(ftype)
+      else:
+        iprot.skip(ftype)
+      iprot.readFieldEnd()
+    iprot.readStructEnd()
+
+  def write(self, oprot):
+    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
+      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
+      return
+    oprot.writeStructBegin('get_num_partitions_by_filter_args')
+    if self.db_name is not None:
+      oprot.writeFieldBegin('db_name', TType.STRING, 1)
+      oprot.writeString(self.db_name)
+      oprot.writeFieldEnd()
+    if self.tbl_name is not None:
+      oprot.writeFieldBegin('tbl_name', TType.STRING, 2)
+      oprot.writeString(self.tbl_name)
+      oprot.writeFieldEnd()
+    if self.filter is not None:
+      oprot.writeFieldBegin('filter', TType.STRING, 3)
+      oprot.writeString(self.filter)
+      oprot.writeFieldEnd()
+    oprot.writeFieldStop()
+    oprot.writeStructEnd()
+
+  def validate(self):
+    return
+
+
+  def __repr__(self):
+    L = ['%s=%r' % (key, value)
+      for key, value in self.__dict__.iteritems()]
+    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))
+
+  def __eq__(self, other):
+    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__
+
+  def __ne__(self, other):
+    return not (self == other)
+
+class get_num_partitions_by_filter_result:
+  """
+  Attributes:
+   - success
+   - o1
+   - o2
+  """
+
+  thrift_spec = (
+    (0, TType.I32, 'success', None, None, ), # 0
+    (1, TType.STRUCT, 'o1', (MetaException, MetaException.thrift_spec), None, ), # 1
+    (2, TType.STRUCT, 'o2', (NoSuchObjectException, NoSuchObjectException.thrift_spec), None, ), # 2
+  )
+
+  def __init__(self, success=None, o1=None, o2=None,):
+    self.success = success
+    self.o1 = o1
+    self.o2 = o2
+
+  def read(self, iprot):
+    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
+      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
+      return
+    iprot.readStructBegin()
+    while True:
+      (fname, ftype, fid) = iprot.readFieldBegin()
+      if ftype == TType.STOP:
+        break
+      if fid == 0:
+        if ftype == TType.I32:
+          self.success = iprot.readI32();
+        else:
+          iprot.skip(ftype)
+      elif fid == 1:
+        if ftype == TType.STRUCT:
+          self.o1 = MetaException()
+          self.o1.read(iprot)
+        else:
+          iprot.skip(ftype)
+      elif fid == 2:
+        if ftype == TType.STRUCT:
+          self.o2 = NoSuchObjectException()
+          self.o2.read(iprot)
+        else:
+          iprot.skip(ftype)
+      else:
+        iprot.skip(ftype)
+      iprot.readFieldEnd()
+    iprot.readStructEnd()
+
+  def write(self, oprot):
+    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
+      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
+      return
+    oprot.writeStructBegin('get_num_partitions_by_filter_result')
+    if self.success is not None:
+      oprot.writeFieldBegin('success', TType.I32, 0)
+      oprot.writeI32(self.success)
+      oprot.writeFieldEnd()
+    if self.o1 is not None:
+      oprot.writeFieldBegin('o1', TType.STRUCT, 1)
+      self.o1.write(oprot)
+      oprot.writeFieldEnd()
+    if self.o2 is not None:
+      oprot.writeFieldBegin('o2', TType.STRUCT, 2)
+      self.o2.write(oprot)
+      oprot.writeFieldEnd()
+    oprot.writeFieldStop()
+    oprot.writeStructEnd()
+
+  def validate(self):
+    return
+
+
+  def __repr__(self):
+    L = ['%s=%r' % (key, value)
+      for key, value in self.__dict__.iteritems()]
+    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))
+
+  def __eq__(self, other):
+    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__
+
+  def __ne__(self, other):
+    return not (self == other)
+
 class get_part_specs_by_filter_args:
   """
   Attributes:
diff --git a/metastore/src/gen/thrift/gen-rb/thrift_hive_metastore.rb b/metastore/src/gen/thrift/gen-rb/thrift_hive_metastore.rb
index db374e6..22081a9 100644
--- a/metastore/src/gen/thrift/gen-rb/thrift_hive_metastore.rb
+++ b/metastore/src/gen/thrift/gen-rb/thrift_hive_metastore.rb
@@ -970,6 +970,23 @@ module ThriftHiveMetastore
       raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_partitions_by_filter failed: unknown result')
     end
 
+    def get_num_partitions_by_filter(db_name, tbl_name, filter)
+      send_get_num_partitions_by_filter(db_name, tbl_name, filter)
+      return recv_get_num_partitions_by_filter()
+    end
+
+    def send_get_num_partitions_by_filter(db_name, tbl_name, filter)
+      send_message('get_num_partitions_by_filter', Get_num_partitions_by_filter_args, :db_name => db_name, :tbl_name => tbl_name, :filter => filter)
+    end
+
+    def recv_get_num_partitions_by_filter()
+      result = receive_message(Get_num_partitions_by_filter_result)
+      return result.success unless result.success.nil?
+      raise result.o1 unless result.o1.nil?
+      raise result.o2 unless result.o2.nil?
+      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_num_partitions_by_filter failed: unknown result')
+    end
+
     def get_part_specs_by_filter(db_name, tbl_name, filter, max_parts)
       send_get_part_specs_by_filter(db_name, tbl_name, filter, max_parts)
       return recv_get_part_specs_by_filter()
@@ -2892,6 +2909,19 @@ module ThriftHiveMetastore
       write_result(result, oprot, 'get_partitions_by_filter', seqid)
     end
 
+    def process_get_num_partitions_by_filter(seqid, iprot, oprot)
+      args = read_args(iprot, Get_num_partitions_by_filter_args)
+      result = Get_num_partitions_by_filter_result.new()
+      begin
+        result.success = @handler.get_num_partitions_by_filter(args.db_name, args.tbl_name, args.filter)
+      rescue ::MetaException => o1
+        result.o1 = o1
+      rescue ::NoSuchObjectException => o2
+        result.o2 = o2
+      end
+      write_result(result, oprot, 'get_num_partitions_by_filter', seqid)
+    end
+
     def process_get_part_specs_by_filter(seqid, iprot, oprot)
       args = read_args(iprot, Get_part_specs_by_filter_args)
       result = Get_part_specs_by_filter_result.new()
@@ -5965,6 +5995,46 @@ module ThriftHiveMetastore
     ::Thrift::Struct.generate_accessors self
   end
 
+  class Get_num_partitions_by_filter_args
+    include ::Thrift::Struct, ::Thrift::Struct_Union
+    DB_NAME = 1
+    TBL_NAME = 2
+    FILTER = 3
+
+    FIELDS = {
+      DB_NAME => {:type => ::Thrift::Types::STRING, :name => 'db_name'},
+      TBL_NAME => {:type => ::Thrift::Types::STRING, :name => 'tbl_name'},
+      FILTER => {:type => ::Thrift::Types::STRING, :name => 'filter'}
+    }
+
+    def struct_fields; FIELDS; end
+
+    def validate
+    end
+
+    ::Thrift::Struct.generate_accessors self
+  end
+
+  class Get_num_partitions_by_filter_result
+    include ::Thrift::Struct, ::Thrift::Struct_Union
+    SUCCESS = 0
+    O1 = 1
+    O2 = 2
+
+    FIELDS = {
+      SUCCESS => {:type => ::Thrift::Types::I32, :name => 'success'},
+      O1 => {:type => ::Thrift::Types::STRUCT, :name => 'o1', :class => ::MetaException},
+      O2 => {:type => ::Thrift::Types::STRUCT, :name => 'o2', :class => ::NoSuchObjectException}
+    }
+
+    def struct_fields; FIELDS; end
+
+    def validate
+    end
+
+    ::Thrift::Struct.generate_accessors self
+  end
+
   class Get_part_specs_by_filter_args
     include ::Thrift::Struct, ::Thrift::Struct_Union
     DB_NAME = 1
diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java
index 468a0fb..b539a4f 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java
@@ -4951,7 +4951,8 @@ private void rethrowException(Exception e)
         throw newMetaException(e);
       }
     }
-    
+
+    @Override
     public int get_num_partitions_by_filter(final String dbName,
                                             final String tblName, final String filter)
             throws TException {
diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClient.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClient.java
index 1ac4c32..87dcea2 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClient.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClient.java
@@ -1385,6 +1385,23 @@ public boolean tableExists(String tableName) throws MetaException,
         client.get_partition_names_ps(db_name, tbl_name, part_vals, max_parts));
   }
 
+  /**
+   * Get number of partitions matching specified filter
+   * 
+   * @param db_name the database name
+   * @param tbl_name the table name
+   * @param filter the filter string, for example "part1 = \"p1_abc\" and part2 <= "\p2_test\"".
+   *          Filtering can be done only on string partition keys.
+   * @return number of partitions
+   * @throws MetaException
+   * @throws NoSuchObjectException
+   * @throws TException
+   */
+  public int getNumPartitionsByFilter(String db_name, String tbl_name, String filter)
+    throws MetaException, NoSuchObjectException, TException {
+    return client.get_num_partitions_by_filter(db_name, tbl_name, filter);
+  }
+
   @Override
   public void alter_partition(String dbName, String tblName, Partition newPart)
       throws InvalidOperationException, MetaException, TException {
diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/IMetaStoreClient.java b/metastore/src/java/org/apache/hadoop/hive/metastore/IMetaStoreClient.java
index 3d67949..7a94cd6 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/IMetaStoreClient.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/IMetaStoreClient.java
@@ -539,6 +539,21 @@ public PartitionSpecProxy listPartitionSpecs(String dbName, String tableName, in
       throws MetaException, TException, NoSuchObjectException;
 
   /**
+   * Get number of partitions matching specified filter
+   * 
+   * @param dbName the database name
+   * @param tableName the table name
+   * @param filter the filter string, for example "part1 = \"p1_abc\" and part2 <= "\p2_test\"".
+   *          Filtering can be done only on string partition keys.
+   * @return number of partitions
+   * @throws MetaException
+   * @throws NoSuchObjectException
+   * @throws TException
+   */
+  public int getNumPartitionsByFilter(String dbName, String tableName, String filter)
+    throws MetaException, NoSuchObjectException, TException;
+
+  /**
    * Get list of partitions matching specified filter
    * @param db_name the database name
    * @param tbl_name the table name
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java b/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java
index 6308bf5..e516cd3 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java
@@ -2400,6 +2400,30 @@ public boolean getPartitionsByExpr(Table tbl, ExprNodeGenericFuncDesc expr, Hive
     return hasUnknownParts;
   }
 
+  /**
+   * Get a number of Partitions by filter.
+   * 
+   * @param tbl The table containing the partitions.
+   * @param filter A string represent partition predicates.
+   * @return the number of partitions satisfying the partition predicates.
+   * @throws HiveException
+   * @throws MetaException
+   * @throws NoSuchObjectException
+   * @throws TException
+   */
+  public int getNumPartitionsByFilter(Table tbl, String filter)
+    throws HiveException, MetaException, NoSuchObjectException, TException {
+
+    if (!tbl.isPartitioned()) {
+      throw new HiveException(
+        "Partition spec should only be supplied for a " + "partitioned table");
+    }
+
+    int numParts = getMSC().getNumPartitionsByFilter(tbl.getDbName(), tbl.getTableName(), filter);
+
+    return numParts;
+  }
+  
   public void validatePartitionNameCharacters(List<String> partVals) throws HiveException {
     try {
       getMSC().validatePartitionNameCharacters(partVals);
-- 
1.7.9.5


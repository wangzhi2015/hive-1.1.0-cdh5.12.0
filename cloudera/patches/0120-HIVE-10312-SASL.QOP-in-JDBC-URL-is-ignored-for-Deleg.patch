From 4b7c29d925d78b6e8f8b1a2932ae6e7ffdafcf0b Mon Sep 17 00:00:00 2001
From: Xuefu Zhang <xzhang@xzlt>
Date: Fri, 24 Apr 2015 15:00:44 -0700
Subject: [PATCH 0120/1164] HIVE-10312: SASL.QOP in JDBC URL is ignored for
 Delegation token Authentication (Mubashir via
 Xuefu)

(cherry picked from commit 512df30911320d344d01ffd68f809de33d7303b4)
---
 .../java/org/apache/hive/jdbc/HiveConnection.java  |   21 +++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

diff --git a/jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java b/jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java
index 764a3f1..949a81c 100644
--- a/jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java
+++ b/jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java
@@ -348,17 +348,20 @@ private TTransport createBinaryTransport() throws SQLException, TTransportExcept
         // If Kerberos
         Map<String, String> saslProps = new HashMap<String, String>();
         SaslQOP saslQOP = SaslQOP.AUTH;
-        if (sessConfMap.containsKey(JdbcConnectionParams.AUTH_PRINCIPAL)) {
-          if (sessConfMap.containsKey(JdbcConnectionParams.AUTH_QOP)) {
-            try {
-              saslQOP = SaslQOP.fromString(sessConfMap.get(JdbcConnectionParams.AUTH_QOP));
-            } catch (IllegalArgumentException e) {
-              throw new SQLException("Invalid " + JdbcConnectionParams.AUTH_QOP +
-                  " parameter. " + e.getMessage(), "42000", e);
-            }
+        if (sessConfMap.containsKey(JdbcConnectionParams.AUTH_QOP)) {
+          try {
+            saslQOP = SaslQOP.fromString(sessConfMap.get(JdbcConnectionParams.AUTH_QOP));
+          } catch (IllegalArgumentException e) {
+            throw new SQLException("Invalid " + JdbcConnectionParams.AUTH_QOP +
+                " parameter. " + e.getMessage(), "42000", e);
           }
           saslProps.put(Sasl.QOP, saslQOP.toString());
-          saslProps.put(Sasl.SERVER_AUTH, "true");
+        } else {
+          // If the client did not specify qop then just negotiate the one supported by server
+          saslProps.put(Sasl.QOP, "auth-conf,auth-int,auth");
+        }
+        saslProps.put(Sasl.SERVER_AUTH, "true");
+        if (sessConfMap.containsKey(JdbcConnectionParams.AUTH_PRINCIPAL)) {
           transport = KerberosSaslHelper.getKerberosTransport(
               sessConfMap.get(JdbcConnectionParams.AUTH_PRINCIPAL), host,
               HiveAuthFactory.getSocketTransport(host, port, loginTimeout), saslProps,
-- 
1.7.9.5


From 5fda3554a771695589484dd334ea382f14a5a0ff Mon Sep 17 00:00:00 2001
From: Jeremy Beard <jeremy@cloudera.com>
Date: Fri, 27 May 2016 10:31:46 -0500
Subject: [PATCH 0633/1164] CDH-40774: HIVE-12721: Add UUID built in function
 (Jeremy Beard, reviewed by Sergio Pena and Sean
 Busbey)

Change-Id: Ie9e056cd9d6cff7bae02586eff97096b06c9a7ee
---
 .../hadoop/hive/ql/exec/FunctionRegistry.java      |    3 ++
 .../org/apache/hadoop/hive/ql/udf/UDFUUID.java     |   50 ++++++++++++++++++++
 .../org/apache/hadoop/hive/ql/udf/TestUDFUUID.java |   38 +++++++++++++++
 .../results/clientpositive/show_functions.q.out    |    1 +
 4 files changed, 92 insertions(+)
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/udf/UDFUUID.java
 create mode 100644 ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFUUID.java

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java
index 96623d9..8690629 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java
@@ -97,6 +97,7 @@
 import org.apache.hadoop.hive.ql.udf.UDFToShort;
 import org.apache.hadoop.hive.ql.udf.UDFToString;
 import org.apache.hadoop.hive.ql.udf.UDFType;
+import org.apache.hadoop.hive.ql.udf.UDFUUID;
 import org.apache.hadoop.hive.ql.udf.UDFUnbase64;
 import org.apache.hadoop.hive.ql.udf.UDFUnhex;
 import org.apache.hadoop.hive.ql.udf.UDFVersion;
@@ -221,6 +222,8 @@
     system.registerUDF("unhex", UDFUnhex.class, false);
     system.registerUDF("base64", UDFBase64.class, false);
     system.registerUDF("unbase64", UDFUnbase64.class, false);
+    
+    system.registerUDF("uuid", UDFUUID.class, false);
 
     system.registerGenericUDF("encode", GenericUDFEncode.class);
     system.registerGenericUDF("decode", GenericUDFDecode.class);
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFUUID.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFUUID.java
new file mode 100644
index 0000000..1340ded
--- /dev/null
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFUUID.java
@@ -0,0 +1,50 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql.udf;
+
+import java.util.UUID;
+
+import org.apache.hadoop.hive.ql.exec.Description;
+import org.apache.hadoop.hive.ql.exec.UDF;
+import org.apache.hadoop.io.Text;
+
+/**
+ * UDFUUID.
+ *
+ */
+@Description(name = "uuid",
+value = "_FUNC_() - Returns a universally unique identifier (UUID) string.",
+extended = "The value is returned as a canonical UUID 36-character string.\n"
++ "Example:\n"
++ "  > SELECT _FUNC_();\n"
++ "  '0baf1f52-53df-487f-8292-99a03716b688'\n"
++ "  > SELECT _FUNC_();\n"
++ "  '36718a53-84f5-45d6-8796-4f79983ad49d'")
+public class UDFUUID extends UDF {
+  private final Text result = new Text();
+  /**
+   * Returns a universally unique identifier (UUID) string (36 characters).
+   *
+   * @return Text
+   */
+  public Text evaluate() {
+    result.set(UUID.randomUUID().toString());
+    return result;
+  }
+}
diff --git a/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFUUID.java b/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFUUID.java
new file mode 100644
index 0000000..5f04547
--- /dev/null
+++ b/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFUUID.java
@@ -0,0 +1,38 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql.udf;
+
+import junit.framework.TestCase;
+
+import org.junit.Test;
+
+public class TestUDFUUID extends TestCase {
+  @Test
+  public void testUUID() throws Exception {
+    UDFUUID udf = new UDFUUID();
+    
+    String id1 = udf.evaluate().toString();
+    String id2 = udf.evaluate().toString();
+    
+    assertFalse(id1.equals(id2));
+    
+    assertEquals(id1.length(), 36);
+    assertEquals(id2.length(), 36);
+  }
+}
diff --git a/ql/src/test/results/clientpositive/show_functions.q.out b/ql/src/test/results/clientpositive/show_functions.q.out
index 02d62e9..9ef5242 100644
--- a/ql/src/test/results/clientpositive/show_functions.q.out
+++ b/ql/src/test/results/clientpositive/show_functions.q.out
@@ -195,6 +195,7 @@ unbase64
 unhex
 unix_timestamp
 upper
+uuid
 var_pop
 var_samp
 variance
-- 
1.7.9.5


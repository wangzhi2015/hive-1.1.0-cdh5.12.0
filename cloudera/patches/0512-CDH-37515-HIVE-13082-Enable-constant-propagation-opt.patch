From 23bd7df0bdf4ab4c8bcc41401cd57b34c73f63ff Mon Sep 17 00:00:00 2001
From: ctang <ctang@cloudera.com>
Date: Tue, 23 Feb 2016 16:49:47 -0500
Subject: [PATCH 0512/1164] CDH-37515: HIVE-13082: Enable constant propagation
 optimization in query with left semi join (part2
 - fix a tez test failure)

Change-Id: I3d10c75ce360da4912749631f738da40a2a95844
---
 .../clientpositive/tez/constprog_semijoin.q.out    |  177 +++++++++-----------
 1 file changed, 81 insertions(+), 96 deletions(-)

diff --git a/ql/src/test/results/clientpositive/tez/constprog_semijoin.q.out b/ql/src/test/results/clientpositive/tez/constprog_semijoin.q.out
index 74dda82..15d3acc 100644
--- a/ql/src/test/results/clientpositive/tez/constprog_semijoin.q.out
+++ b/ql/src/test/results/clientpositive/tez/constprog_semijoin.q.out
@@ -6,11 +6,11 @@ POSTHOOK: query: create table table1 (id int, val string, val1 string, dimid int
 POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: database:default
 POSTHOOK: Output: default@table1
-PREHOOK: query: insert into table1 (id, val, val1, dimid) values (1, 't1val01', 'val101', 100), (2, 't1val02', 'val102', 200), (3, 't1val03', 'val103', 103), (3, 't1val01', 'val104', 100), (2, 't1val05', 'val105', 200), (3, 't1val01', 'val106', 103), (1, 't1val07', 'val107', 200), (2, 't1val01', 'val108', 200), (3, 't1val09', 'val109', 103), (4,'t1val01', 'val110', 200)
+PREHOOK: query: insert into table1 values (1, 't1val01', 'val101', 100), (2, 't1val02', 'val102', 200), (3, 't1val03', 'val103', 103), (3, 't1val01', 'val104', 100), (2, 't1val05', 'val105', 200), (3, 't1val01', 'val106', 103), (1, 't1val07', 'val107', 200), (2, 't1val01', 'val108', 200), (3, 't1val09', 'val109', 103), (4,'t1val01', 'val110', 200)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@values__tmp__table__1
 PREHOOK: Output: default@table1
-POSTHOOK: query: insert into table1 (id, val, val1, dimid) values (1, 't1val01', 'val101', 100), (2, 't1val02', 'val102', 200), (3, 't1val03', 'val103', 103), (3, 't1val01', 'val104', 100), (2, 't1val05', 'val105', 200), (3, 't1val01', 'val106', 103), (1, 't1val07', 'val107', 200), (2, 't1val01', 'val108', 200), (3, 't1val09', 'val109', 103), (4,'t1val01', 'val110', 200)
+POSTHOOK: query: insert into table1 values (1, 't1val01', 'val101', 100), (2, 't1val02', 'val102', 200), (3, 't1val03', 'val103', 103), (3, 't1val01', 'val104', 100), (2, 't1val05', 'val105', 200), (3, 't1val01', 'val106', 103), (1, 't1val07', 'val107', 200), (2, 't1val01', 'val108', 200), (3, 't1val09', 'val109', 103), (4,'t1val01', 'val110', 200)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@values__tmp__table__1
 POSTHOOK: Output: default@table1
@@ -26,11 +26,11 @@ POSTHOOK: query: create table table2 (id int, val2 string)
 POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: database:default
 POSTHOOK: Output: default@table2
-PREHOOK: query: insert into table2 (id, val2) values (1, 't2val201'), (2, 't2val202'), (3, 't2val203')
+PREHOOK: query: insert into table2 values (1, 't2val201'), (2, 't2val202'), (3, 't2val203')
 PREHOOK: type: QUERY
 PREHOOK: Input: default@values__tmp__table__2
 PREHOOK: Output: default@table2
-POSTHOOK: query: insert into table2 (id, val2) values (1, 't2val201'), (2, 't2val202'), (3, 't2val203')
+POSTHOOK: query: insert into table2 values (1, 't2val201'), (2, 't2val202'), (3, 't2val203')
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@values__tmp__table__2
 POSTHOOK: Output: default@table2
@@ -44,11 +44,11 @@ POSTHOOK: query: create table table3 (id int)
 POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: database:default
 POSTHOOK: Output: default@table3
-PREHOOK: query: insert into table3 (id) values (100), (100), (101), (102), (103)
+PREHOOK: query: insert into table3 values (100), (100), (101), (102), (103)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@values__tmp__table__3
 PREHOOK: Output: default@table3
-POSTHOOK: query: insert into table3 (id) values (100), (100), (101), (102), (103)
+POSTHOOK: query: insert into table3 values (100), (100), (101), (102), (103)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@values__tmp__table__3
 POSTHOOK: Output: default@table3
@@ -426,9 +426,9 @@ STAGE PLANS:
                       outputColumnNames: _col0, _col1, _col2, _col3
                       Statistics: Num rows: 10 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: _col3 (type: int), true (type: boolean)
+                        key expressions: _col3 (type: int), 100 (type: int)
                         sort order: ++
-                        Map-reduce partition columns: _col3 (type: int), true (type: boolean)
+                        Map-reduce partition columns: _col3 (type: int), 100 (type: int)
                         Statistics: Num rows: 10 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                         value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
         Map 3 
@@ -440,30 +440,27 @@ STAGE PLANS:
                     predicate: id is not null (type: boolean)
                     Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: id (type: int), (id = 100) (type: boolean)
+                      expressions: id (type: int), id (type: int)
                       outputColumnNames: _col0, _col1
                       Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
-                      Filter Operator
-                        predicate: _col1 is not null (type: boolean)
-                        Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                        Group By Operator
-                          keys: _col0 (type: int), _col1 (type: boolean)
-                          mode: hash
-                          outputColumnNames: _col0, _col1
-                          Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                          Reduce Output Operator
-                            key expressions: _col0 (type: int), _col1 (type: boolean)
-                            sort order: ++
-                            Map-reduce partition columns: _col0 (type: int), _col1 (type: boolean)
-                            Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
+                      Group By Operator
+                        keys: _col0 (type: int), _col1 (type: int)
+                        mode: hash
+                        outputColumnNames: _col0, _col1
+                        Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
+                        Reduce Output Operator
+                          key expressions: _col0 (type: int), _col1 (type: int)
+                          sort order: ++
+                          Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
+                          Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
         Reducer 2 
             Reduce Operator Tree:
               Merge Join Operator
                 condition map:
                      Left Semi Join 0 to 1
                 keys:
-                  0 _col3 (type: int), true (type: boolean)
-                  1 _col0 (type: int), _col1 (type: boolean)
+                  0 _col3 (type: int), 100 (type: int)
+                  1 _col0 (type: int), _col1 (type: int)
                 outputColumnNames: _col0, _col1, _col2
                 Statistics: Num rows: 11 Data size: 220 Basic stats: COMPLETE Column stats: NONE
                 File Output Operator
@@ -518,9 +515,9 @@ STAGE PLANS:
                       outputColumnNames: _col0, _col1, _col2, _col3
                       Statistics: Num rows: 3 Data size: 60 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: _col3 (type: int), true (type: boolean)
+                        key expressions: _col3 (type: int), 100 (type: int)
                         sort order: ++
-                        Map-reduce partition columns: _col3 (type: int), true (type: boolean)
+                        Map-reduce partition columns: _col3 (type: int), 100 (type: int)
                         Statistics: Num rows: 3 Data size: 60 Basic stats: COMPLETE Column stats: NONE
                         value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
         Map 3 
@@ -532,30 +529,27 @@ STAGE PLANS:
                     predicate: id is not null (type: boolean)
                     Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: id (type: int), (id = 100) (type: boolean)
+                      expressions: id (type: int), id (type: int)
                       outputColumnNames: _col0, _col1
                       Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
-                      Filter Operator
-                        predicate: _col1 is not null (type: boolean)
-                        Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                        Group By Operator
-                          keys: _col0 (type: int), _col1 (type: boolean)
-                          mode: hash
-                          outputColumnNames: _col0, _col1
-                          Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                          Reduce Output Operator
-                            key expressions: _col0 (type: int), _col1 (type: boolean)
-                            sort order: ++
-                            Map-reduce partition columns: _col0 (type: int), _col1 (type: boolean)
-                            Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
+                      Group By Operator
+                        keys: _col0 (type: int), _col1 (type: int)
+                        mode: hash
+                        outputColumnNames: _col0, _col1
+                        Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
+                        Reduce Output Operator
+                          key expressions: _col0 (type: int), _col1 (type: int)
+                          sort order: ++
+                          Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
+                          Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
         Reducer 2 
             Reduce Operator Tree:
               Merge Join Operator
                 condition map:
                      Left Semi Join 0 to 1
                 keys:
-                  0 _col3 (type: int), true (type: boolean)
-                  1 _col0 (type: int), _col1 (type: boolean)
+                  0 _col3 (type: int), 100 (type: int)
+                  1 _col0 (type: int), _col1 (type: int)
                 outputColumnNames: _col0, _col1, _col2
                 Statistics: Num rows: 3 Data size: 66 Basic stats: COMPLETE Column stats: NONE
                 File Output Operator
@@ -612,9 +606,9 @@ STAGE PLANS:
                       outputColumnNames: _col0, _col1, _col2
                       Statistics: Num rows: 5 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: 200 (type: int), true (type: boolean)
+                        key expressions: 200 (type: int), 100 (type: int)
                         sort order: ++
-                        Map-reduce partition columns: 200 (type: int), true (type: boolean)
+                        Map-reduce partition columns: 200 (type: int), 100 (type: int)
                         Statistics: Num rows: 5 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                         value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
         Map 3 
@@ -626,30 +620,27 @@ STAGE PLANS:
                     predicate: id is not null (type: boolean)
                     Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: id (type: int), (id = 100) (type: boolean)
+                      expressions: id (type: int), id (type: int)
                       outputColumnNames: _col0, _col1
                       Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
-                      Filter Operator
-                        predicate: _col1 is not null (type: boolean)
-                        Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                        Group By Operator
-                          keys: _col0 (type: int), _col1 (type: boolean)
-                          mode: hash
-                          outputColumnNames: _col0, _col1
-                          Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                          Reduce Output Operator
-                            key expressions: _col0 (type: int), _col1 (type: boolean)
-                            sort order: ++
-                            Map-reduce partition columns: _col0 (type: int), _col1 (type: boolean)
-                            Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
+                      Group By Operator
+                        keys: _col0 (type: int), _col1 (type: int)
+                        mode: hash
+                        outputColumnNames: _col0, _col1
+                        Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
+                        Reduce Output Operator
+                          key expressions: _col0 (type: int), _col1 (type: int)
+                          sort order: ++
+                          Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
+                          Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
         Reducer 2 
             Reduce Operator Tree:
               Merge Join Operator
                 condition map:
                      Left Semi Join 0 to 1
                 keys:
-                  0 200 (type: int), true (type: boolean)
-                  1 _col0 (type: int), _col1 (type: boolean)
+                  0 200 (type: int), 100 (type: int)
+                  1 _col0 (type: int), _col1 (type: int)
                 outputColumnNames: _col0, _col1, _col2
                 Statistics: Num rows: 5 Data size: 110 Basic stats: COMPLETE Column stats: NONE
                 File Output Operator
@@ -704,9 +695,9 @@ STAGE PLANS:
                       outputColumnNames: _col0, _col1, _col2
                       Statistics: Num rows: 5 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: 100 (type: int), true (type: boolean)
+                        key expressions: 100 (type: int), 100 (type: int)
                         sort order: ++
-                        Map-reduce partition columns: 100 (type: int), true (type: boolean)
+                        Map-reduce partition columns: 100 (type: int), 100 (type: int)
                         Statistics: Num rows: 5 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                         value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
         Map 3 
@@ -718,30 +709,27 @@ STAGE PLANS:
                     predicate: id is not null (type: boolean)
                     Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: id (type: int), (id = 100) (type: boolean)
+                      expressions: id (type: int), id (type: int)
                       outputColumnNames: _col0, _col1
                       Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
-                      Filter Operator
-                        predicate: _col1 is not null (type: boolean)
-                        Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                        Group By Operator
-                          keys: _col0 (type: int), _col1 (type: boolean)
-                          mode: hash
-                          outputColumnNames: _col0, _col1
-                          Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                          Reduce Output Operator
-                            key expressions: _col0 (type: int), _col1 (type: boolean)
-                            sort order: ++
-                            Map-reduce partition columns: _col0 (type: int), _col1 (type: boolean)
-                            Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
+                      Group By Operator
+                        keys: _col0 (type: int), _col1 (type: int)
+                        mode: hash
+                        outputColumnNames: _col0, _col1
+                        Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
+                        Reduce Output Operator
+                          key expressions: _col0 (type: int), _col1 (type: int)
+                          sort order: ++
+                          Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
+                          Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
         Reducer 2 
             Reduce Operator Tree:
               Merge Join Operator
                 condition map:
                      Left Semi Join 0 to 1
                 keys:
-                  0 100 (type: int), true (type: boolean)
-                  1 _col0 (type: int), _col1 (type: boolean)
+                  0 100 (type: int), 100 (type: int)
+                  1 _col0 (type: int), _col1 (type: int)
                 outputColumnNames: _col0, _col1, _col2
                 Statistics: Num rows: 5 Data size: 110 Basic stats: COMPLETE Column stats: NONE
                 File Output Operator
@@ -798,9 +786,9 @@ STAGE PLANS:
                       outputColumnNames: _col0, _col1, _col2, _col3
                       Statistics: Num rows: 5 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                       Reduce Output Operator
-                        key expressions: _col3 (type: int), true (type: boolean)
+                        key expressions: _col3 (type: int), 100 (type: int)
                         sort order: ++
-                        Map-reduce partition columns: _col3 (type: int), true (type: boolean)
+                        Map-reduce partition columns: _col3 (type: int), 100 (type: int)
                         Statistics: Num rows: 5 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                         value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
         Map 3 
@@ -812,30 +800,27 @@ STAGE PLANS:
                     predicate: id is not null (type: boolean)
                     Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
                     Select Operator
-                      expressions: id (type: int), (id = 100) (type: boolean)
+                      expressions: id (type: int), id (type: int)
                       outputColumnNames: _col0, _col1
                       Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
-                      Filter Operator
-                        predicate: _col1 is not null (type: boolean)
-                        Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                        Group By Operator
-                          keys: _col0 (type: int), _col1 (type: boolean)
-                          mode: hash
-                          outputColumnNames: _col0, _col1
-                          Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
-                          Reduce Output Operator
-                            key expressions: _col0 (type: int), _col1 (type: boolean)
-                            sort order: ++
-                            Map-reduce partition columns: _col0 (type: int), _col1 (type: boolean)
-                            Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
+                      Group By Operator
+                        keys: _col0 (type: int), _col1 (type: int)
+                        mode: hash
+                        outputColumnNames: _col0, _col1
+                        Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
+                        Reduce Output Operator
+                          key expressions: _col0 (type: int), _col1 (type: int)
+                          sort order: ++
+                          Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
+                          Statistics: Num rows: 3 Data size: 9 Basic stats: COMPLETE Column stats: NONE
         Reducer 2 
             Reduce Operator Tree:
               Merge Join Operator
                 condition map:
                      Left Semi Join 0 to 1
                 keys:
-                  0 _col3 (type: int), true (type: boolean)
-                  1 _col0 (type: int), _col1 (type: boolean)
+                  0 _col3 (type: int), 100 (type: int)
+                  1 _col0 (type: int), _col1 (type: int)
                 outputColumnNames: _col0, _col1, _col2
                 Statistics: Num rows: 5 Data size: 110 Basic stats: COMPLETE Column stats: NONE
                 File Output Operator
-- 
1.7.9.5


From e15a715481c7d4b2d104c4f565c3716d77fe6012 Mon Sep 17 00:00:00 2001
From: Pengcheng Xiong <pxiong@apache.org>
Date: Fri, 30 Oct 2015 10:17:12 -0700
Subject: [PATCH 0667/1164] CDH-42089 HIVE-12277: Hive macro results on
 macro_duplicate.q different after adding ORDER BY
 (Pengcheng Xiong, reviewed by Jason Dere)

Conflicts:
	ql/src/test/queries/clientpositive/macro_duplicate.q
	ql/src/test/results/clientpositive/macro_duplicate.q.out

Change-Id: Ic77dd27627cfca68332387faad10e69fece8aba5
---
 .../hive/ql/plan/ExprNodeGenericFuncDesc.java      |    7 +++++++
 .../test/queries/clientpositive/macro_duplicate.q  |    2 +-
 .../results/clientpositive/macro_duplicate.q.out   |    4 ++--
 3 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeGenericFuncDesc.java b/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeGenericFuncDesc.java
index 4b2c1ad..3a22218 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeGenericFuncDesc.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeGenericFuncDesc.java
@@ -37,6 +37,7 @@
 import org.apache.hadoop.hive.ql.udf.generic.GenericUDF;
 import org.apache.hadoop.hive.ql.udf.generic.GenericUDFBaseCompare;
 import org.apache.hadoop.hive.ql.udf.generic.GenericUDFBridge;
+import org.apache.hadoop.hive.ql.udf.generic.GenericUDFMacro;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorUtils;
 import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;
@@ -285,6 +286,12 @@ public boolean isSame(Object o) {
       }
     }
 
+    if (genericUDF instanceof GenericUDFMacro) {
+      if (funcText != null && !funcText.equals(dest.funcText)) {
+        return false;
+      }
+    }
+
     if (chidren.size() != dest.getChildren().size()) {
       return false;
     }
diff --git a/ql/src/test/queries/clientpositive/macro_duplicate.q b/ql/src/test/queries/clientpositive/macro_duplicate.q
index b257910..5dd69f1 100644
--- a/ql/src/test/queries/clientpositive/macro_duplicate.q
+++ b/ql/src/test/queries/clientpositive/macro_duplicate.q
@@ -7,4 +7,4 @@ insert into table macro_testing values (4,5,6);
 create temporary macro math_square(x int) x*x;
 create temporary macro math_add(x int) x+x;
 
-select math_square(a), math_square(b),math_add(a), math_add(b),int(c) from macro_testing;
+select math_square(a), math_square(b),math_add(a), math_add(b),int(c) from macro_testing order by int(c);
diff --git a/ql/src/test/results/clientpositive/macro_duplicate.q.out b/ql/src/test/results/clientpositive/macro_duplicate.q.out
index 6bd5a3c..62b1a87 100644
--- a/ql/src/test/results/clientpositive/macro_duplicate.q.out
+++ b/ql/src/test/results/clientpositive/macro_duplicate.q.out
@@ -44,11 +44,11 @@ PREHOOK: Output: database:default
 POSTHOOK: query: create temporary macro math_add(x int) x+x
 POSTHOOK: type: CREATEMACRO
 POSTHOOK: Output: database:default
-PREHOOK: query: select math_square(a), math_square(b),math_add(a), math_add(b),int(c) from macro_testing
+PREHOOK: query: select math_square(a), math_square(b),math_add(a), math_add(b),int(c) from macro_testing order by int(c)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@macro_testing
 #### A masked pattern was here ####
-POSTHOOK: query: select math_square(a), math_square(b),math_add(a), math_add(b),int(c) from macro_testing
+POSTHOOK: query: select math_square(a), math_square(b),math_add(a), math_add(b),int(c) from macro_testing order by int(c)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@macro_testing
 #### A masked pattern was here ####
-- 
1.7.9.5


From 069a8d2bbb1d33452d14a9c28662abc7f0b3981f Mon Sep 17 00:00:00 2001
From: Vaibhav Gumashta <vgumashta@hortonworks.com>
Date: Tue, 11 Oct 2016 22:38:59 -0700
Subject: [PATCH 1022/1164] CDH-48309: HIVE-14850: Fix TestJdbcDriver2 set up
 time (Vaibhav Gumashta reviewed by Siddharth
 Seth)

(cherry picked from commit 0b90e8f0bf7cfeef8ce01123e57a3978028a581c)

Change-Id: Ic98b6ce1b56dc3aa0a8a86eb07512698b7e226e9
---
 .../java/org/apache/hive/jdbc/TestJdbcDriver2.java |   69 ++++++++------------
 1 file changed, 28 insertions(+), 41 deletions(-)

diff --git a/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java b/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java
index 0615db3..4286624 100644
--- a/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java
+++ b/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java
@@ -104,44 +104,17 @@
   private static final String dataTypeTableComment = "Table with many column data types";
   private static final String externalTableName = "testjdbcdriverexttbl";
   private static final String externalTableComment = "An external table";
-
-
-  private final HiveConf conf;
-  public static String dataFileDir;
-  private final Path dataFilePath;
-  private final int dataFileRowCount;
-  private final Path dataTypeDataFilePath;
+  private static HiveConf conf;
+  private static String dataFileDir;
+  private static Path dataFilePath;
+  private static int dataFileRowCount;
+  private static Path dataTypeDataFilePath;
   // Creating a new connection is expensive, so we'll reuse this object
   private static Connection con;
   private static final float floatCompareDelta = 0.0001f;
 
   @Rule public ExpectedException thrown = ExpectedException.none();
 
-  @SuppressWarnings("deprecation")
-  public TestJdbcDriver2() throws SQLException, ClassNotFoundException {
-    conf = new HiveConf(TestJdbcDriver2.class);
-    dataFileDir = conf.get("test.data.files").replace('\\', '/')
-        .replace("c:", "");
-    dataFilePath = new Path(dataFileDir, "kv1.txt");
-    dataFileRowCount = 500;
-    dataTypeDataFilePath = new Path(dataFileDir, "datatypes.txt");
-    // Create test database and base tables once for all the test
-    Class.forName(driverName);
-    System.setProperty(ConfVars.HIVE_SERVER2_LOGGING_OPERATION_LEVEL.varname, "verbose");
-    System.setProperty(ConfVars.HIVEMAPREDMODE.varname, "nonstrict");
-    System.setProperty(ConfVars.HIVE_AUTHORIZATION_MANAGER.varname,
-        "org.apache.hadoop.hive.ql.security.authorization.DefaultHiveAuthorizationProvider");
-    con = getConnection(defaultDbName + ";create=true");
-    Statement stmt = con.createStatement();
-    assertNotNull("Statement is null", stmt);
-    stmt.execute("set hive.support.concurrency = false");
-    stmt.execute("drop database if exists " + testDbName + " cascade");
-    stmt.execute("create database " + testDbName);
-    stmt.execute("use " + testDbName);
-    createTestTables(stmt, testDbName);
-    stmt.close();
-  }
-
   private static Connection getConnection(String postfix) throws SQLException {
     Connection con1;
     con1 = DriverManager.getConnection("jdbc:hive2:///" + postfix, "", "");
@@ -150,7 +123,7 @@ private static Connection getConnection(String postfix) throws SQLException {
     return con1;
   }
 
-  private void createTestTables(Statement stmt, String testDbName) throws SQLException{
+  private static void createTestTables(Statement stmt, String testDbName) throws SQLException{
     // We've already dropped testDbName in constructor & we also drop it in tearDownAfterClass
     String prefix = testDbName + ".";
     String tableName = prefix + TestJdbcDriver2.tableName;
@@ -200,8 +173,30 @@ private void createTestTables(Statement stmt, String testDbName) throws SQLExcep
     stmt.close();
   }
 
+  @SuppressWarnings("deprecation")
   @BeforeClass
   public static void setUpBeforeClass() throws SQLException, ClassNotFoundException {
+    conf = new HiveConf(TestJdbcDriver2.class);
+    dataFileDir = conf.get("test.data.files").replace('\\', '/')
+        .replace("c:", "");
+    dataFilePath = new Path(dataFileDir, "kv1.txt");
+    dataFileRowCount = 500;
+    dataTypeDataFilePath = new Path(dataFileDir, "datatypes.txt");
+    // Create test database and base tables once for all the test
+    Class.forName(driverName);
+    System.setProperty(ConfVars.HIVE_SERVER2_LOGGING_OPERATION_LEVEL.varname, "verbose");
+    System.setProperty(ConfVars.HIVEMAPREDMODE.varname, "nonstrict");
+    System.setProperty(ConfVars.HIVE_AUTHORIZATION_MANAGER.varname,
+        "org.apache.hadoop.hive.ql.security.authorization.DefaultHiveAuthorizationProvider");
+    con = getConnection(defaultDbName + ";create=true");
+    Statement stmt = con.createStatement();
+    assertNotNull("Statement is null", stmt);
+    stmt.execute("set hive.support.concurrency = false");
+    stmt.execute("drop database if exists " + testDbName + " cascade");
+    stmt.execute("create database " + testDbName);
+    stmt.execute("use " + testDbName);
+    createTestTables(stmt, testDbName);
+    stmt.close();
   }
 
   @AfterClass
@@ -214,14 +209,6 @@ public static void tearDownAfterClass() throws Exception {
     con.close();
   }
 
-  @Before
-  public void setUp() throws Exception {
-  }
-
-  @After
-  public void tearDown() throws Exception {
-  }
-
   @Test
   /**
    * Tests malformed JDBC URL
-- 
1.7.9.5


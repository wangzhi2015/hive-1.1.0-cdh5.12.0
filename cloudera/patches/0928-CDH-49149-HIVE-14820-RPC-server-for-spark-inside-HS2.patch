From 45b0e47959f7603b414ae3d7c169a0118a96dfe2 Mon Sep 17 00:00:00 2001
From: Aihua Xu <aihuaxu@apache.org>
Date: Thu, 22 Sep 2016 15:46:21 -0400
Subject: [PATCH 0928/1164] CDH-49149: HIVE-14820: RPC server for spark inside
 HS2 is not getting server address properly (Aihua
 Xu, reviewed by Yongzhi Chen)

(cherry picked from commit 421d97a8d75490ca8ec698ef67f7ed8739e394f8)

Change-Id: Ic5089d85d4da96dc974afb4b7f3972d2447441eb
---
 .../hive/spark/client/rpc/RpcConfiguration.java    |    4 +--
 .../org/apache/hive/spark/client/rpc/TestRpc.java  |   28 +++++++++++++++++++-
 2 files changed, 29 insertions(+), 3 deletions(-)

diff --git a/spark-client/src/main/java/org/apache/hive/spark/client/rpc/RpcConfiguration.java b/spark-client/src/main/java/org/apache/hive/spark/client/rpc/RpcConfiguration.java
index f968cc4..8c59015 100644
--- a/spark-client/src/main/java/org/apache/hive/spark/client/rpc/RpcConfiguration.java
+++ b/spark-client/src/main/java/org/apache/hive/spark/client/rpc/RpcConfiguration.java
@@ -99,11 +99,11 @@ int getSecretBits() {
    * @throws IOException
    */
   String getServerAddress() throws IOException {
-    String hiveHost = config.get(HiveConf.ConfVars.SPARK_RPC_SERVER_ADDRESS);
+    String hiveHost = config.get(HiveConf.ConfVars.SPARK_RPC_SERVER_ADDRESS.varname);
     if(StringUtils.isEmpty(hiveHost)) {
       hiveHost = System.getenv("HIVE_SERVER2_THRIFT_BIND_HOST");
       if (hiveHost == null) {
-        hiveHost = config.get(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_BIND_HOST);
+        hiveHost = config.get(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_BIND_HOST.varname);
       }
     }
     return ServerUtils.getHostAddress(hiveHost).getHostName();
diff --git a/spark-client/src/test/java/org/apache/hive/spark/client/rpc/TestRpc.java b/spark-client/src/test/java/org/apache/hive/spark/client/rpc/TestRpc.java
index 4615d11..10ef58b 100644
--- a/spark-client/src/test/java/org/apache/hive/spark/client/rpc/TestRpc.java
+++ b/spark-client/src/test/java/org/apache/hive/spark/client/rpc/TestRpc.java
@@ -19,6 +19,7 @@
 
 import java.io.Closeable;
 import java.io.IOException;
+import java.net.InetAddress;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
@@ -26,19 +27,21 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 import java.util.concurrent.atomic.AtomicInteger;
+
 import javax.security.sasl.SaslException;
 
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Lists;
+
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.embedded.EmbeddedChannel;
 import io.netty.channel.nio.NioEventLoopGroup;
 import io.netty.util.concurrent.Future;
+
 import org.apache.commons.io.IOUtils;
 import org.apache.hadoop.hive.conf.HiveConf;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -118,6 +121,29 @@ public void testClientServer() throws Exception {
   }
 
   @Test
+  public void testServerAddress() throws Exception {
+    String hostAddress = InetAddress.getLocalHost().getHostName();
+    Map<String, String> config = new HashMap<String, String>();
+
+    // Test if rpc_server_address is configured
+    config.put(HiveConf.ConfVars.SPARK_RPC_SERVER_ADDRESS.varname, hostAddress);
+    RpcServer server1 = autoClose(new RpcServer(config));
+    assertTrue("Host address should match the expected one", server1.getAddress() == hostAddress);
+
+    // Test if rpc_server_address is not configured but HS2 server host is configured
+    config.put(HiveConf.ConfVars.SPARK_RPC_SERVER_ADDRESS.varname, "");
+    config.put(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_BIND_HOST.varname, hostAddress);
+    RpcServer server2 = autoClose(new RpcServer(config));
+    assertTrue("Host address should match the expected one", server2.getAddress() == hostAddress);
+
+    // Test if both are not configured
+    config.put(HiveConf.ConfVars.SPARK_RPC_SERVER_ADDRESS.varname, "");
+    config.put(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_BIND_HOST.varname, "");
+    RpcServer server3 = autoClose(new RpcServer(config));
+    assertTrue("Host address should match the expected one", server3.getAddress() == InetAddress.getLocalHost().getHostName());
+  }
+
+  @Test
   public void testBadHello() throws Exception {
     RpcServer server = autoClose(new RpcServer(emptyConfig));
 
-- 
1.7.9.5


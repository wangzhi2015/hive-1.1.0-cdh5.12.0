From e78b3559bf46498fcb51d96495f4764a0e27f9ad Mon Sep 17 00:00:00 2001
From: Xuefu Zhang <xuefu@apache.org>
Date: Tue, 17 Mar 2015 22:06:22 +0000
Subject: [PATCH 0181/1164] HIVE-9934: Vulnerability in
 LdapAuthenticationProviderImpl enables
 HiveServer2 client to degrade the authentication
 mechanism to none, allowing authentication
 without password (Chao via Xuefu)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1667417 13f79535-47bb-0310-9956-ffa450edef68
---
 .../auth/LdapAuthenticationProviderImpl.java       |    5 +++
 .../auth/TestLdapAuthenticationProviderImpl.java   |   47 ++++++++++++++++++++
 2 files changed, 52 insertions(+)
 create mode 100644 service/src/test/org/apache/hive/service/auth/TestLdapAuthenticationProviderImpl.java

diff --git a/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java b/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java
index a095006..6350b6a 100644
--- a/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java
+++ b/service/src/java/org/apache/hive/service/auth/LdapAuthenticationProviderImpl.java
@@ -132,6 +132,11 @@ public void Authenticate(String user, String password) throws AuthenticationExce
       user  = user + "@" + ldapDomain;
     }
 
+    if (password == null || password.isEmpty()) {
+      throw new AuthenticationException("Error validating LDAP user:" +
+          " a null or blank password has been provided");
+    }
+
     // setup the security principal
     String bindDN;
     if (baseDN == null) {
diff --git a/service/src/test/org/apache/hive/service/auth/TestLdapAuthenticationProviderImpl.java b/service/src/test/org/apache/hive/service/auth/TestLdapAuthenticationProviderImpl.java
new file mode 100644
index 0000000..c7db3a9
--- /dev/null
+++ b/service/src/test/org/apache/hive/service/auth/TestLdapAuthenticationProviderImpl.java
@@ -0,0 +1,47 @@
+package org.apache.hive.service.auth;
+
+import javax.security.sasl.AuthenticationException;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+
+import junit.framework.TestCase;
+import org.apache.hadoop.hive.conf.HiveConf;
+
+public class TestLdapAuthenticationProviderImpl extends TestCase {
+
+  private static HiveConf hiveConf;
+  private static byte[] hiveConfBackup;
+
+  @Override
+  public void setUp() throws Exception {
+      hiveConf = new HiveConf();
+      ByteArrayOutputStream baos = new ByteArrayOutputStream();
+      hiveConf.writeXml(baos);
+      baos.close();
+      hiveConfBackup = baos.toByteArray();
+      hiveConf.set("hive.server2.authentication.ldap.url", "localhost");
+      FileOutputStream fos = new FileOutputStream(new File(hiveConf.getHiveSiteLocation().toURI()));
+      hiveConf.writeXml(fos);
+      fos.close();
+  }
+
+  public void testLdapEmptyPassword() {
+    LdapAuthenticationProviderImpl ldapImpl = new LdapAuthenticationProviderImpl();
+    try {
+      ldapImpl.Authenticate("user", "");
+      assertFalse(true);
+    } catch (AuthenticationException e) {
+      assertTrue(e.getMessage(), e.getMessage().contains("a null or blank password has been provided"));
+    }
+  }
+
+  @Override
+  public void tearDown() throws Exception {
+    if(hiveConf != null && hiveConfBackup != null) {
+      FileOutputStream fos = new FileOutputStream(new File(hiveConf.getHiveSiteLocation().toURI()));
+      fos.write(hiveConfBackup);
+      fos.close();
+    }
+  }
+}
-- 
1.7.9.5


From 91e0d4e96baf883efdf7fac30d19197f98f4c1a6 Mon Sep 17 00:00:00 2001
From: Hari Subramaniyan <harisankar@apache.org>
Date: Fri, 2 Oct 2015 11:11:46 -0700
Subject: [PATCH 0656/1164] CDH-26631: HIVE-11990 : Loading data inpath from a
 temporary table dir fails on Windows (Hari
 Subramaniyan, reviewed by Jason Dere)

Change-Id: I2eff7ed1f1a1c4cb827e54ba80bb5d505e18c533
---
 .../hadoop/hive/ql/parse/LoadSemanticAnalyzer.java |   12 ------------
 .../queries/clientpositive/load_non_hdfs_path.q    |    6 ++++++
 .../clientpositive/load_non_hdfs_path.q.out        |   16 ++++++++++++++++
 3 files changed, 22 insertions(+), 12 deletions(-)
 create mode 100644 ql/src/test/queries/clientpositive/load_non_hdfs_path.q
 create mode 100644 ql/src/test/results/clientpositive/load_non_hdfs_path.q.out

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java
index 7efad0c..6ed4fa2 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java
@@ -151,18 +151,6 @@ private void applyConstraints(URI fromURI, URI toURI, Tree ast,
       // org.apache.commons.lang.StringUtils
       throw new SemanticException(ErrorMsg.INVALID_PATH.getMsg(ast), e);
     }
-
-    // only in 'local' mode do we copy stuff from one place to another.
-    // reject different scheme/authority in other cases.
-    if (!isLocal
-        && (!StringUtils.equals(fromURI.getScheme(), toURI.getScheme()) || !StringUtils
-        .equals(fromURI.getAuthority(), toURI.getAuthority()))) {
-      String reason = "Move from: " + fromURI.toString() + " to: "
-          + toURI.toString() + " is not valid. "
-          + "Please check that values for params \"default.fs.name\" and "
-          + "\"hive.metastore.warehouse.dir\" do not conflict.";
-      throw new SemanticException(ErrorMsg.ILLEGAL_PATH.getMsg(ast, reason));
-    }
   }
 
   @Override
diff --git a/ql/src/test/queries/clientpositive/load_non_hdfs_path.q b/ql/src/test/queries/clientpositive/load_non_hdfs_path.q
new file mode 100644
index 0000000..824ce69
--- /dev/null
+++ b/ql/src/test/queries/clientpositive/load_non_hdfs_path.q
@@ -0,0 +1,6 @@
+dfs ${system:test.dfs.mkdir} ${system:test.tmp.dir}/non_hdfs_path;
+dfs -touchz ${system:test.tmp.dir}/non_hdfs_path/1.txt;
+dfs -chmod 555 ${system:test.tmp.dir}/non_hdfs_path/1.txt;
+
+create table t1(i int);
+load data inpath 'pfile:${system:test.tmp.dir}/non_hdfs_path/' overwrite into table t1;
diff --git a/ql/src/test/results/clientpositive/load_non_hdfs_path.q.out b/ql/src/test/results/clientpositive/load_non_hdfs_path.q.out
new file mode 100644
index 0000000..31c40d8
--- /dev/null
+++ b/ql/src/test/results/clientpositive/load_non_hdfs_path.q.out
@@ -0,0 +1,16 @@
+PREHOOK: query: create table t1(i int)
+PREHOOK: type: CREATETABLE
+PREHOOK: Output: database:default
+PREHOOK: Output: default@t1
+POSTHOOK: query: create table t1(i int)
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@t1
+#### A masked pattern was here ####
+PREHOOK: type: LOAD
+#### A masked pattern was here ####
+PREHOOK: Output: default@t1
+#### A masked pattern was here ####
+POSTHOOK: type: LOAD
+#### A masked pattern was here ####
+POSTHOOK: Output: default@t1
-- 
1.7.9.5


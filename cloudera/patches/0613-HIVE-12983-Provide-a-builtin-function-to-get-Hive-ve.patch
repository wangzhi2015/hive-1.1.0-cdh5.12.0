From f12defa0fd4687e288c6db42ba02999abf552af8 Mon Sep 17 00:00:00 2001
From: Ashutosh Chauhan <hashutosh@apache.org>
Date: Tue, 31 May 2016 13:28:44 -0700
Subject: [PATCH 0613/1164] HIVE-12983 Provide a builtin function to get Hive
 version (Lenni Kuff via Szehon Ho)

Change-Id: Iec374169ac136edab24563f0fc53f1e04ee5dce3
Signed-off-by: Ashutosh Chauhan <hashutosh@apache.org>
---
 .../hadoop/hive/ql/exec/FunctionRegistry.java      |    4 ++
 .../org/apache/hadoop/hive/ql/udf/UDFVersion.java  |   40 ++++++++++++++++++++
 .../apache/hadoop/hive/ql/udf/TestUDFVersion.java  |   34 +++++++++++++++++
 ql/src/test/queries/clientpositive/udf_version.q   |    2 +
 .../results/clientpositive/show_functions.q.out    |    1 +
 .../test/results/clientpositive/udf_version.q.out  |   11 ++++++
 6 files changed, 92 insertions(+)
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/udf/UDFVersion.java
 create mode 100644 ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFVersion.java
 create mode 100644 ql/src/test/queries/clientpositive/udf_version.q
 create mode 100644 ql/src/test/results/clientpositive/udf_version.q.out

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java
index e23be50..96623d9 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java
@@ -99,6 +99,7 @@
 import org.apache.hadoop.hive.ql.udf.UDFType;
 import org.apache.hadoop.hive.ql.udf.UDFUnbase64;
 import org.apache.hadoop.hive.ql.udf.UDFUnhex;
+import org.apache.hadoop.hive.ql.udf.UDFVersion;
 import org.apache.hadoop.hive.ql.udf.UDFWeekOfYear;
 import org.apache.hadoop.hive.ql.udf.UDFYear;
 import org.apache.hadoop.hive.ql.udf.generic.*;
@@ -323,6 +324,9 @@
     system.registerGenericUDF("ewah_bitmap_or", GenericUDFEWAHBitmapOr.class);
     system.registerGenericUDF("ewah_bitmap_empty", GenericUDFEWAHBitmapEmpty.class);
 
+    // Utility UDFs
+    system.registerUDF("version", UDFVersion.class, false);
+
     // Aliases for Java Class Names
     // These are used in getImplicitConvertUDFMethod
     system.registerUDF(serdeConstants.BOOLEAN_TYPE_NAME, UDFToBoolean.class, false, UDFToBoolean.class.getSimpleName());
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFVersion.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFVersion.java
new file mode 100644
index 0000000..d9750c1
--- /dev/null
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFVersion.java
@@ -0,0 +1,40 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql.udf;
+
+import org.apache.hadoop.hive.ql.exec.Description;
+import org.apache.hadoop.hive.ql.exec.UDF;
+import org.apache.hadoop.io.Text;
+import org.apache.hive.common.util.HiveVersionInfo;
+
+
+/**
+ * UDFVersion
+ */
+@Description(name = "version",
+    value="_FUNC_() - Returns the Hive build version string - includes base " +
+          "version and revision.")
+public class UDFVersion extends UDF {
+  private static final String versionInfo = String.format("%s r%s",
+      HiveVersionInfo.getVersion(), HiveVersionInfo.getRevision());
+
+  public Text evaluate() {
+	  return new Text(versionInfo);
+  }
+}
diff --git a/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFVersion.java b/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFVersion.java
new file mode 100644
index 0000000..12c63b1
--- /dev/null
+++ b/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFVersion.java
@@ -0,0 +1,34 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql.udf;
+
+import junit.framework.TestCase;
+
+import org.apache.hadoop.io.Text;
+import org.apache.hive.common.util.HiveVersionInfo;
+
+public class TestUDFVersion extends TestCase {
+  public void testVersion(){
+    UDFVersion udf = new UDFVersion();
+    Text result = udf.evaluate();
+    String expected = String.format("%s r%s", HiveVersionInfo.getVersion(),
+        HiveVersionInfo.getRevision());
+    assertEquals(expected, result.toString());
+  }
+}
diff --git a/ql/src/test/queries/clientpositive/udf_version.q b/ql/src/test/queries/clientpositive/udf_version.q
new file mode 100644
index 0000000..7110f15
--- /dev/null
+++ b/ql/src/test/queries/clientpositive/udf_version.q
@@ -0,0 +1,2 @@
+-- Normalize the version info
+SELECT regexp_replace(version(), '.+ r\\w+', 'VERSION rGITHASH');
diff --git a/ql/src/test/results/clientpositive/show_functions.q.out b/ql/src/test/results/clientpositive/show_functions.q.out
index fd78ad3..02d62e9 100644
--- a/ql/src/test/results/clientpositive/show_functions.q.out
+++ b/ql/src/test/results/clientpositive/show_functions.q.out
@@ -198,6 +198,7 @@ upper
 var_pop
 var_samp
 variance
+version
 weekofyear
 when
 windowingtablefunction
diff --git a/ql/src/test/results/clientpositive/udf_version.q.out b/ql/src/test/results/clientpositive/udf_version.q.out
new file mode 100644
index 0000000..242e83f
--- /dev/null
+++ b/ql/src/test/results/clientpositive/udf_version.q.out
@@ -0,0 +1,11 @@
+PREHOOK: query: -- Normalize the version info
+SELECT regexp_replace(version(), '.+ r\\w+', 'VERSION rGITHASH')
+PREHOOK: type: QUERY
+PREHOOK: Input: _dummy_database@_dummy_table
+#### A masked pattern was here ####
+POSTHOOK: query: -- Normalize the version info
+SELECT regexp_replace(version(), '.+ r\\w+', 'VERSION rGITHASH')
+POSTHOOK: type: QUERY
+POSTHOOK: Input: _dummy_database@_dummy_table
+#### A masked pattern was here ####
+VERSION rGITHASH
-- 
1.7.9.5


From 72427e26645e21c2570e0d8c5170d619546a07c5 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Fri, 13 Mar 2015 15:20:06 +0000
Subject: [PATCH 0385/1164] CDH-34112: HIVE-9906 - Add timeout mechanism in
 RawStoreProxy (Dong Chen via Brock)

Change-Id: Ic7d21cc450239873e64344047c2133ec86e08811
git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1666478 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/hadoop/hive/metastore/Deadline.java |   15 +++++++++++++++
 .../hadoop/hive/metastore/RawStoreProxy.java       |   20 ++++++++++++++++++++
 2 files changed, 35 insertions(+)

diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/Deadline.java b/metastore/src/java/org/apache/hadoop/hive/metastore/Deadline.java
index c27d3b9..b56e0df 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/Deadline.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/Deadline.java
@@ -100,6 +100,21 @@ public static void resetTimeout(long timeout) throws MetaException {
   }
 
   /**
+   * Check whether the timer is started.
+   * @return
+   * @throws MetaException
+   */
+  public static boolean isStarted() throws MetaException {
+    Deadline deadline = getCurrentDeadline();
+    if (deadline != null) {
+      return deadline.startTime >= 0;
+    } else {
+      throw newMetaException(new DeadlineException("The threadlocal Deadline is null," +
+          " please register it firstly."));
+    }
+  }
+
+  /**
    * start the timer before a method is invoked.
    * @param method
    */
diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/RawStoreProxy.java b/metastore/src/java/org/apache/hadoop/hive/metastore/RawStoreProxy.java
index 7c9bedb..5bde45b 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/RawStoreProxy.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/RawStoreProxy.java
@@ -24,6 +24,7 @@
 import java.lang.reflect.Proxy;
 import java.lang.reflect.UndeclaredThrowableException;
 import java.util.List;
+import java.util.concurrent.TimeUnit;
 
 import org.apache.commons.lang.ClassUtils;
 import org.apache.hadoop.conf.Configuration;
@@ -93,9 +94,28 @@ private void initMS() {
   @Override
   public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
     Object ret = null;
+    boolean isTimerStarted = false;
 
     try {
+      try {
+        if (!Deadline.isStarted()) {
+          Deadline.startTimer(method.getName());
+          isTimerStarted = true;
+        }
+      } catch (MetaException e) {
+        // Deadline was not registered yet.
+        long timeout = HiveConf.getTimeVar(hiveConf,
+            HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT, TimeUnit.MILLISECONDS);
+        Deadline.registerIfNot(timeout);
+        Deadline.startTimer(method.getName());
+        isTimerStarted = true;
+      }
+
       ret = method.invoke(base, args);
+
+      if (isTimerStarted) {
+        Deadline.stopTimer();
+      }
     } catch (UndeclaredThrowableException e) {
       throw e.getCause();
     } catch (InvocationTargetException e) {
-- 
1.7.9.5


From c47d4ff4fb63c6057ef73aa1d75bc40a8caacf1e Mon Sep 17 00:00:00 2001
From: Aihua Xu <aihuaxu@apache.org>
Date: Mon, 7 Nov 2016 09:09:00 -0500
Subject: [PATCH 0809/1164] CDH-46932 HIVE-15090: Temporary DB failure can
 stop ExpiredTokenRemover thread (Peter Vary,
 reviewed by Aihua Xu)

(cherry picked from commit dfb868d1af5bcc0db517c4a7d3675d1971284ef3)

Change-Id: I8c63b613dce635ef2defa0e2452c314c25d33c7a
---
 .../TokenStoreDelegationTokenSecretManager.java    |   20 ++++++++++++++------
 1 file changed, 14 insertions(+), 6 deletions(-)

diff --git a/shims/common/src/main/java/org/apache/hadoop/hive/thrift/TokenStoreDelegationTokenSecretManager.java b/shims/common/src/main/java/org/apache/hadoop/hive/thrift/TokenStoreDelegationTokenSecretManager.java
index 87b418e..7b6ead3 100644
--- a/shims/common/src/main/java/org/apache/hadoop/hive/thrift/TokenStoreDelegationTokenSecretManager.java
+++ b/shims/common/src/main/java/org/apache/hadoop/hive/thrift/TokenStoreDelegationTokenSecretManager.java
@@ -303,8 +303,8 @@ public void run() {
       LOGGER.info("Starting expired delegation token remover thread, "
           + "tokenRemoverScanInterval=" + tokenRemoverScanInterval
           / (60 * 1000) + " min(s)");
-      try {
-        while (running) {
+      while (running) {
+        try {
           long now = System.currentTimeMillis();
           if (lastMasterKeyUpdate + keyUpdateInterval < now) {
             try {
@@ -323,13 +323,21 @@ public void run() {
             Thread.sleep(5000); // 5 seconds
           } catch (InterruptedException ie) {
             LOGGER
-            .error("InterruptedExcpetion recieved for ExpiredTokenRemover thread "
+            .error("InterruptedException received for ExpiredTokenRemover thread "
                 + ie);
           }
+        } catch (Throwable t) {
+          LOGGER.error("ExpiredTokenRemover thread received unexpected exception. "
+                           + t, t);
+          // Wait 5 seconds too in case of an exception, so we do not end up in busy waiting for
+          // the solution for this exception
+          try {
+            Thread.sleep(5000); // 5 seconds
+          } catch (InterruptedException ie) {
+            LOGGER.error("InterruptedException received for ExpiredTokenRemover thread during " +
+                "wait in exception sleep " + ie);
+          }
         }
-      } catch (Throwable t) {
-        LOGGER.error("ExpiredTokenRemover thread received unexpected exception. "
-            + t, t);
       }
     }
   }
-- 
1.7.9.5

